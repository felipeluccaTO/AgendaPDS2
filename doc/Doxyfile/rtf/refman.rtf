{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Documenta\'E7\'E3o agenda PDS2  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}Documenta\'E7\'E3o agenda PDS2}
{\comment Gerado por doxygen 1.9.8.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Documenta\'E7\'E3o agenda PDS2}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 1.0\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\par \pard\plain 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
AgendaPDS2\par \pard\plain 
{\tc\tcl1 \v AgendaPDS2}
{\xe \v AgendaPDS2}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
Um projeto de PDS2 dos alunos da UFMG, um gerenciador de tarefas e compromissos! Esse gerenciador \'E9 uma aplica\'E7\'E3o projetada para ajudar os usu\'E1rios a organizar suas atividades di\'E1rias, seja no ambiente de trabalho, estudo ou vida pessoal. O objetivo principal desse tipo de projeto \'E9 oferecer uma plataforma intuitiva e eficiente para o acompanhamento e planejamento de tarefas e compromissos.\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
:hammer: Funcionalidades do projeto
\par}
{\tc\tcl2 \v :hammer: Funcionalidades do projeto}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Agendamento de Tarefas e Compromissos} : Permite que os usu\'E1rios criem eventos, compromissos e tarefas em datas e hor\'E1rios espec\'EDficos.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Prioriza\'E7\'E3o de Tarefas} : Classifica tarefas com base na sua import\'E2ncia e urg\'EAncia.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Lembretes} : Emite mensagens para ajudar os usu\'E1rios a n\'E3o perder compromissos ou prazos importantes.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Outros} : outras funcionalidades ser\'E3o adicionadas ao longo do projeto. \par}
\par
\par}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Status
\par}
{\tc\tcl2 \v Status}
{\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \zwj:construction: Projeto em constru\'E7\'E3o :construction: \par
}\par}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Autores (Grupo 5)
\par}
{\tc\tcl2 \v Autores (Grupo 5)}
{\f2 Felipe Lucca Taumaturgo de Oliveira}  {\f2 Samuel Lima Horta}  {\f2 Thiago Tobias Valente de Oliveira Santos}  {\f2 Roberto J\'FAnior Cassimiro Campolina}  {\f2 Daniel Bozi Portes} \par
Teste commit \par}
}}
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Lista de atividades futuras\par \pard\plain 
{\tc\tcl1 \v Lista de atividades futuras}
{\xe \v Lista de atividades futuras}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membro {\b LembreteMenu::next}  (unsigned option) override\par
}
{\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
retornar para o menu de lembretes \par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
retornar para o menu de lembretes \par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
retornar para o menu de lembretes \par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
retornar para o menu do usuario  \par}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membro {\b MenuLogin::next}  (unsigned opcao) override\par
}
{\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
Tratar o erro de login caso o usuario nao esteja registrado ainda (lan\'E7ar exception e retornar para o menu login) \par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
Nao foi possivel cadastrar o novo usuario, retornar para o menu login \par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
menu anterior \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice Hier\'E1rquico\par \pard\plain 
{\tc \v \'CDndice Hier\'E1rquico}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Hierarquia de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta lista de hierarquias est\'E1 parcialmente ordenada (ordem alfab\'E9tica):}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Calendario\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Lembrete\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ListaCompromisso\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ImprimirCompromissos\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ListaLembrete\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ImprimirLembretes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ListaTarefa\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ImprimirTarefas\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ListaUsuario\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Usuario\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Notificacao\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PrimeiroMenu\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CompromissoMenu\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
LembreteMenu\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MenuLogin\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TarefaMenu\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
UsuarioMenu\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Tarefa\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Compromisso\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Componentes\par \pard\plain 
{\tc \v \'CDndice dos Componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as classes, estruturas, uni\'F5es e interfaces e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Calendario} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Compromisso} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CompromissoMenu} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ImprimirCompromissos} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ImprimirLembretes} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ImprimirTarefas} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Lembrete} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LembreteMenu} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListaCompromisso} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListaLembrete} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListaTarefa} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListaUsuario} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MenuLogin} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Notificacao} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PrimeiroMenu} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tarefa} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TarefaMenu} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Usuario} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UsuarioMenu} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b AgendaPDS2/Calendario/{\b Calendario.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Calendario/{\b Calendario.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Calendario/{\b teste_Calendario.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Exce\'E7oes/{\b Exce\'E7\'F5es.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Exce\'E7oes/{\b Exce\'E7\'F5es.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Lembrete/{\b Lembrete.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Lembrete/{\b Lembrete.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Lembrete/{\b teste_Lembrete.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Menu/{\b CompromissoMenu.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Menu/{\b LembreteMenu.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Menu/{\b LembreteMenu.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Menu/{\b LoginMenu.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Menu/{\b LoginMenu.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Menu/{\b Menu.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Menu/{\b Menu.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Menu/{\b TarefaMenu.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Menu/{\b UsuarioMenu.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Menu/{\b UsuarioMenu.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Notifica\'E7ao/{\b Notifica\'E7\'E3o.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Notifica\'E7ao/{\b Notifica\'E7\'E3o.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Notifica\'E7ao/{\b teste_Notifica\'E7\'E3o.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Tarefa/{\b Tarefa.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Tarefa/{\b Tarefa.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Tarefa/{\b teste_Tarefa.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Usuario/{\b teste_Usuario.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Usuario/{\b Usuario.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b AgendaPDS2/Usuario/{\b Usuario.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Classes{\tc \v Classes}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Calendario\par \pard\plain 
{\tc\tcl2 \v Calendario}
{\xe \v Calendario}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\par
{
{\f2 #include <Calendario.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserir} (std::string key, std::vector< std::string > value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere um grupo de atividades em um determinado hor\'E1rio. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b size_mapaHorario} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho do mapa de hor\'E1rios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserir} (std::string key)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere um hor\'E1rio com atividades(ou n\'E3o) em um determinado dia. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b size_agenda} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da agenda. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirCalendario} (std::string data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o calendario de 7 dias a partir do dia escolhido (Contando com ele) }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v imprimirCalendario\:Calendario}
{\xe \v Calendario\:imprimirCalendario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Calendario::imprimirCalendario (std::string  {\i data})}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o calendario de 7 dias a partir do dia escolhido (Contando com ele) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{O primero dia da sequ\'EAncia a ser mostrada \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                                   \{\par
27 \par
28     {\cf18 int} dia = int({\cf18 char}(data[0]) + {\cf18 char}(data[1])) - 1;\par
29     {\cf18 int} mes = char(data[3]) + char(data[4]);\par
30     {\cf18 int} ano = char(data[6]) + char(data[7]) + char(data[8]) + char(data[9]);\par
31 \par
32     {\cf19 for} ({\cf18 unsigned} cont=0; cont<7; cont++ ) \{\par
33         dia ++;\par
34 \par
35         {\cf19 if} (dia > 30) \{\par
36             dia -= 30;\par
37             mes ++;\par
38         \}\par
39 \par
40         {\cf19 if} (mes > 12) \{\par
41             mes -= 12;\par
42             ano ++;\par
43         \}\par
44 \par
45         std::string diaAtual = STRING(dia);\par
46         diaAtual += {\cf23 '/'};\par
47         diaAtual += STRING(mes);\par
48         diaAtual += {\cf23 '/'};\par
49         diaAtual += STRING(ano);\par
50 \par
51         {\cf17 auto} it = (_agenda.find(diaAtual)->second).begin();\par
52 \par
53         std::cout << {\cf22 "Atividades do dia "} << diaAtual << {\cf22 ": "} << std::endl << std::endl;\par
54 \par
55         {\cf19 while} (it != (_agenda.find(diaAtual)->second).end()) \{\par
56             std::cout << {\cf22 "Hor\'E1rio: "} << it->first << std::endl << std::endl << {\cf22 "Atividades: "} << std::endl << std::endl;\par
57 \par
58             {\cf19 if} ((it->second).size() == 0) \{\par
59                 std::cout << {\cf22 "Nenhuma atividade registrada!"} << std::endl << std::endl;\par
60             \}\par
61 \par
62             {\cf19 for} ({\cf18 unsigned} i=0; i < (it->second).size(); i++) \{\par
63                 \par
64                 std::cout << (it->second)[i] << std::endl;\par
65             \}\par
66             it++;\par
67         \}\par
68     \}\par
69 \}\par
}
}
{\xe \v inserir\:Calendario}
{\xe \v Calendario\:inserir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Calendario::inserir (std::string  {\i key})}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere um hor\'E1rio com atividades(ou n\'E3o) em um determinado dia. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{O dia\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{As atividades que ser\'E3o inseridas \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                                       \{\par
16 \par
17     _agenda.insert(std::pair<std::string, std::map<std::string, std::vector<std::string>>>(key, _mapaHorario));\par
18     _mapaHorario.clear();\par
19 \}\par
}
}
{\xe \v inserir\:Calendario}
{\xe \v Calendario\:inserir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Calendario::inserir (std::string  {\i key}, std::vector< std::string >  {\i value})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere um grupo de atividades em um determinado hor\'E1rio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{O horario das atividades\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{As atividades que ser\'E3o inseridas \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                                                                   \{\par
6 \par
7     _mapaHorario.insert(std::pair<std::string, std::vector<std::string>>(key, value));\par
8 \}\par
}
}
{\xe \v size_agenda\:Calendario}
{\xe \v Calendario\:size_agenda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned Calendario::size_agenda ()}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da agenda. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um unsigned com o tamanho \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                  \{\par
22 \par
23     {\cf19 return} _agenda.size();\par
24 \}\par
}
}
{\xe \v size_mapaHorario\:Calendario}
{\xe \v Calendario\:size_mapaHorario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned Calendario::size_mapaHorario ()}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho do mapa de hor\'E1rios. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um unsigned com o tamanho \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                                       \{\par
11 \par
12     {\cf19 return} _mapaHorario.size();\par
13 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Calendario/{\b Calendario.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Calendario/{\b Calendario.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Compromisso\par \pard\plain 
{\tc\tcl2 \v Compromisso}
{\xe \v Compromisso}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
{
{\f2 #include <Tarefa.hpp>}}\par
Diagrama de hierarquia da classe Compromisso:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_compromisso.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Compromisso} (std::string &data, std::string &local, std::string &titulo, std::string &descricao, std::string &horario, std::string &estado, unsigned prioridade)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getCor} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela cor do compromisso. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getLocal} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo local do compromisso. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getHorario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo horario do compromisso. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCor} (const std::string &novaCor)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a cor de um compromisso. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLocal} (const std::string &novoLocal)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o local de um compromisso. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setHorario} (const std::string &novoHorario)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o horario de um compromisso. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Tarefa}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Tarefa} (std::string &titulo, std::string &descricao, std::string &data, unsigned prioridade, std::string &estado)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getTitulo} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo titulo da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getDescricao} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela descri\'E7ao da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getData} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela data da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b getPrioridade} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela prioridade da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getEstado} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo estado da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (const std::string &novoTitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDescricao} (const std::string &novaDescricao)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a descri\'E7ao de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const std::string &novaData)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a data de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPrioridade} (unsigned novaPrioridade)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a prioridade de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEstado} (const std::string &novoEstado)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o estado de uma tarefa. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Compromisso\:Compromisso}
{\xe \v Compromisso\:Compromisso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Compromisso::Compromisso (std::string &  {\i data}, std::string &  {\i local}, std::string &  {\i titulo}, std::string &  {\i descricao}, std::string &  {\i horario}, std::string &  {\i estado}, unsigned  {\i prioridade})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 193                                                     : Tarefa(titulo, descricao, data, prioridade, estado) \{\par
194     _local = local;\par
195     _horario = horario;\par
196 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getCor\:Compromisso}
{\xe \v Compromisso\:getCor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Compromisso::getCor () const}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela cor do compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String com o codigo em formata\'E7ao ANSI da cor \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a cor\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 198                                     \{\par
199 \par
200     {\cf19 return} this->_cor; \par
201 \}\par
}
}
{\xe \v getHorario\:Compromisso}
{\xe \v Compromisso\:getHorario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Compromisso::getHorario () const}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo horario do compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do horario \par
 \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o horario\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 208                                         \{\par
209 \par
210     {\cf19 return} this->_horario; \par
211 \}\par
}
}
{\xe \v getLocal\:Compromisso}
{\xe \v Compromisso\:getLocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Compromisso::getLocal () const}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo local do compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do local \par
 \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o local\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 203                                       \{\par
204 \par
205     {\cf19 return} this->_local; \par
206 \}\par
}
}
{\xe \v setCor\:Compromisso}
{\xe \v Compromisso\:setCor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Compromisso::setCor (const std::string &  {\i novaCor})}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a cor de um compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Necessario para organiza\'E7ao dos compromissos por cor\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Cores aceitas: 'laranja', 'azul', 'roxo', 'rosa'\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novaCor} \cell }{A nova cor a ser adicionada \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Atribui a cor laranja\par
< Atribui a cor azul\par
< Atribui a cor roxa\par
< Atribui a cor rosa\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 213                                                  \{\par
214 \par
215     {\cf19 try} \{\par
216 \par
217         {\cf20 // Escolher a cor com base na prioridade}\par
218         std::string cor;\par
219         \par
220         {\cf19 if} (novaCor == {\cf22 "laranja"}) \{\par
221 \par
222             this->_cor = {\cf22 "\\033[38;2;247;99;25m"}; \par
223         \}\par
224         {\cf19 else} {\cf19 if} (novaCor == {\cf22 "azul"}) \{\par
225 \par
226             this->_cor = {\cf22 "\\033[38;2;25;84;247m"}; \par
227         \}\par
228         {\cf19 else} {\cf19 if} (novaCor == {\cf22 "roxo"}) \{\par
229 \par
230             this->_cor = {\cf22 "\\033[38;2;140;25;247m"}; \par
231         \}\par
232         {\cf19 else} {\cf19 if} (novaCor == {\cf22 "rosa"}) \{\par
233 \par
234             this->_cor = {\cf22 "\\033[38;2;247;25;180m"}; \par
235         \}\par
236         {\cf19 else} {\cf19 if} (!novaCor.empty()) \{\par
237 \par
238             {\cf19 throw} std::invalid_argument({\cf22 "Cor invalida"});\par
239         \}\par
240     \}\par
241     {\cf19 catch} (std::exception& e) \{\par
242 \par
243         std::cout << {\cf22 "Cores aceitas:"} << std::endl\par
244         << {\cf22 "    - 'laranja'"} << std::endl\par
245         << {\cf22 "    - 'azul'"} << std::endl\par
246         << {\cf22 "    - 'roxo'"} << std::endl\par
247         << {\cf22 "    - 'rosa'"} << std::endl;\par
248 \par
249         handleExcecao(e);\par
250     \}\par
251 \}\par
}
}
{\xe \v setHorario\:Compromisso}
{\xe \v Compromisso\:setHorario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Compromisso::setHorario (const std::string &  {\i novoHorario})}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o horario de um compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novoHorario} \cell }{O novo horario a ser colocado\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O horario informado deve estar no formato: HH:MM:SS \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica o formato do novo horario\par
< Limitador deve ser ':'\par
Obtem a data do compromisso\par
< Limitador deve ser '/'\par
< Inicializa o struct da data\par
< Atribui o dia da data\par
< Atribui o mes da data (os meses s\'E3o de 0 a 11)\par
< Atribui o ano da data (os anos sao contados a partir de 1900)\par
< Atribui a nova hora do compromisso\par
< Atribui os novos minutos do compromisso\par
< Atribui os novos segundos do compromisso\par
Converte a data de time_t para time_point\par
Obtem a data atual do sistema\par
Converte time_point para time_t\par
Converte time_t para uma struct tm\par
< Atribui o novo horario\par
< Atribui o novo horario\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 276                                                          \{\par
277 \par
278         {\cf19 try} \{\par
280         std::istringstream iss(novoHorario);\par
281         {\cf18 int} HH, MM, SS;\par
282         {\cf18 char} limitador; \par
283 \par
284         {\cf19 if} (!(iss >> HH >> limitador >> MM >> limitador >> SS) || limitador != {\cf23 ':'}) \{\par
285             \par
286             {\cf19 throw} std::invalid_argument({\cf22 "Formato do horario invalido"});\par
287         \}\par
288 \par
290         std::string data_compromisso = getData();\par
291 \par
292         {\cf19 if} (!data_compromisso.empty()) \{\par
293             \par
294             std::istringstream iss(data_compromisso);\par
295             {\cf18 int} dia, mes, ano;\par
296             {\cf18 char} limitador; \par
297 \par
298             iss >> HH >> limitador >> MM >> limitador >> SS;\par
299 \par
300             {\cf20 // Cria uma representacao da data do compromisso}\par
301             std::tm tmDataCompromisso = \{0\}; \par
302             \par
303             tmDataCompromisso.tm_mday = dia; \par
304             \par
305             tmDataCompromisso.tm_mon = mes - 1; \par
306             \par
307             tmDataCompromisso.tm_year = ano - 1900; \par
308 \par
309             tmDataCompromisso.tm_hour = HH; \par
310 \par
311             tmDataCompromisso.tm_min = MM; \par
312 \par
313             tmDataCompromisso.tm_sec = SS; \par
314 \par
316             {\cf17 auto} timepoint_data_compromisso = std::chrono::system_clock::from_time_t(std::mktime(&tmDataCompromisso));\par
317 \par
319             {\cf17 auto} timepoint_agora = std::chrono::system_clock::now();\par
320 \par
322             std::time_t time_t_agora = std::chrono::system_clock::to_time_t(timepoint_agora);\par
323     \par
325             {\cf17 struct }std::tm* tmAtual = std::localtime(&time_t_agora);\par
326 \par
327             {\cf20 // Verifica se o novo horario eh no dia}\par
328             {\cf19 if} (timepoint_data_compromisso <= timepoint_agora) \{\par
329         \par
330                 {\cf19 throw} std::logic_error({\cf22 "Horario no passado"});\par
331             \}\par
332 \par
333             this->_horario = novoHorario; \par
334         \}\par
335         {\cf19 else} \{\par
336 \par
337             this->_horario = novoHorario; \par
338         \}\par
339     \}\par
340     {\cf19 catch} ({\cf17 const} std::invalid_argument& e) \{\par
341         \par
342         std::cout << {\cf22 "Horario deve estar no formato HH:MM:SS"} << std::endl;\par
343         \par
344         handleExcecao(e);\par
345     \}\par
346     {\cf19 catch} ({\cf17 const} std::logic_error& e) \{\par
347 \par
348         std::cout << {\cf22 "Impossivel adicionar uma tarefa ou compromisso para datas anteriores a atual"} << std::endl;\par
349         \par
350         handleExcecao(e);\par
351     \}\par
352     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
353     \par
354         handleExcecao(e);\par
355     \}\par
356 \}\par
}
}
{\xe \v setLocal\:Compromisso}
{\xe \v Compromisso\:setLocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Compromisso::setLocal (const std::string &  {\i novoLocal})}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o local de um compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novoLocal} \cell }{O novo local a ser colocado \par
 \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Limite de caracteres para o novo local\par
Verifica se o novo local eh valido\par
< Atribui o novo local\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 253                                                      \{\par
254 \par
255     {\cf19 try} \{\par
256         {\cf17 const} {\cf18 size_t} MAX_CARACTERES = 100; \par
257 \par
259         {\cf19 if} (!novoLocal.length() >= MAX_CARACTERES || !novoLocal.empty()) \{\par
260 \par
261             this->_local = novoLocal; \par
262         \}\par
263         {\cf19 else} \{\par
264 \par
265             {\cf19 throw} std::invalid_argument({\cf22 "Local invalido"});\par
266         \}\par
267     \} \par
268     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
269         \par
270         std::cout << {\cf22 "Local deve possuir entre 1 e 100 caracteres"} << std::endl;\par
271         \par
272         handleExcecao(e);\par
273     \}\par
274 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Tarefa/{\b Tarefa.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Tarefa/{\b Tarefa.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CompromissoMenu\par \pard\plain 
{\tc\tcl2 \v CompromissoMenu}
{\xe \v CompromissoMenu}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\par
{
{\f2 #include <CompromissoMenu.hpp>}}\par
Diagrama de hierarquia da classe CompromissoMenu:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_compromisso_menu.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CompromissoMenu} (std::string *login_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu dos compromissos \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PrimeiroMenu} * {\b next} (unsigned option) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi proximo menu. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b PrimeiroMenu}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PrimeiroMenu} ()=default\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getUsuario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsuario} (std::string user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string novoTitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubtitulo} (std::string novoSubtitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOpcoes} (std::vector< std::string > novasOpcoes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderizar} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CompromissoMenu\:CompromissoMenu}
{\xe \v CompromissoMenu\:CompromissoMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CompromissoMenu::CompromissoMenu (std::string *  {\i login_email})}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu dos compromissos \par
 }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v next\:CompromissoMenu}
{\xe \v CompromissoMenu\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PrimeiroMenu} * CompromissoMenu::next (unsigned  {\i option}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi proximo menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O proximo menu que o usuario escolheu \par
}}}{
Implementa {\b PrimeiroMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Menu/{\b CompromissoMenu.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ImprimirCompromissos\par \pard\plain 
{\tc\tcl2 \v ImprimirCompromissos}
{\xe \v ImprimirCompromissos}
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
{
{\f2 #include <Tarefa.hpp>}}\par
Diagrama de hierarquia da classe ImprimirCompromissos:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_imprimir_compromissos.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b verCompromissos} (std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra a lista de compromissos do usuario logado. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b ListaCompromisso}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarCompromisso} ({\b Compromisso} *compromisso, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um compromisso a lista de compromissos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerCompromisso} ({\b Compromisso} *compromisso, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um compromisso da lista de compromissos. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b ListaCompromisso}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b tamanho} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da lista. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos Est\'E1ticos herdados de {\b ListaCompromisso}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::unordered_map< std::string, {\b Compromisso} * > {\b _listadeCompromisso}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a lista de comprimissos. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v verCompromissos\:ImprimirCompromissos}
{\xe \v ImprimirCompromissos\:verCompromissos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ImprimirCompromissos::verCompromissos (std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra a lista de compromissos do usuario logado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os compromissos atuais da lista\par
Verifica se o compromisso pertence ao usuario\par
Obtem a prioridade\par
Obtem a cor\par
< Muda a cor do texto, de acordo com a prioridade\par
Verifica se o compromisso tem uma cor definida pelo usuario Se nao tem, volta para a cor padrao do texto\par
< Muda a cor do texto para a cor escolhida pelo usuario\par
< Restaura a cor padrao do texto\par
< Restaura a cor padrao do texto\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 468                                                                 \{\par
469 \par
471     {\cf19 for} ({\cf17 const} {\cf17 auto}& compromisso : _listadeCompromisso) \{\par
472         \par
474         {\cf19 if} (compromisso.first == *user_email) \{\par
475             \par
477             {\cf18 unsigned} prioridade = compromisso.second->getPrioridade();\par
478 \par
480             std::string cor_prioridade = setCorPrioridade(prioridade);\par
481 \par
482             std::string cor_compromisso = compromisso.second->getCor();\par
483             \par
484             std::cout << {\cf22 "----------"} << std::endl\par
485 \par
486             << cor_prioridade \par
487             \par
488             << {\cf22 "Titulo: "} << compromisso.second->getTitulo() << std::endl;\par
489 \par
492             {\cf19 if} (!cor_compromisso.empty()) \{\par
493 \par
494                 std::cout << cor_compromisso; \par
495             \}\par
496             {\cf19 else} \{\par
497 \par
498                 std::cout << {\cf22 "\\033[0m"}; \par
499             \}\par
500             \par
501             std::cout << {\cf22 "Descri\'E7ao: "} << compromisso.second->getDescricao() << std::endl\par
502             \par
503             << {\cf22 "Data: "} << compromisso.second->getData() << {\cf22 ", \'E0s "} << compromisso.second->getHorario() << std::endl\par
504             \par
505             << {\cf22 "Local: "} << compromisso.second->getLocal() << std::endl\par
506             \par
507             << {\cf22 "Prioridade: "} << prioridade << std::endl\par
508 \par
509             << {\cf22 "Estado: "} << compromisso.second->getEstado() << std::endl\par
510             \par
511             << {\cf22 "\\033[0m"} \par
512 \par
513             << std::endl;\par
514         \}        \par
515     \}\par
516 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Tarefa/{\b Tarefa.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Tarefa/{\b Tarefa.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ImprimirLembretes\par \pard\plain 
{\tc\tcl2 \v ImprimirLembretes}
{\xe \v ImprimirLembretes}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\par
{
{\f2 #include <Lembrete.hpp>}}\par
Diagrama de hierarquia da classe ImprimirLembretes:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_imprimir_lembretes.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b verLembretes} (std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime todos lembretes da lista. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b ListaLembrete}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarLembrete} ({\b Lembrete} *lembrete, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um {\b Lembrete} a lista de Lembretes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerLembrete} ({\b Lembrete} *lembrete, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um lembrete da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Lembrete} * {\b buscarLembrete} (std::string *mensagem)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Procura pelo lembrete pela mensagem. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b ListaLembrete}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b tamanho} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho do mapa. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos Est\'E1ticos herdados de {\b ListaLembrete}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::unordered_map< std::string, {\b Lembrete} * > {\b _listadeLembretes}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena todos os lembretes ativos para cada usuario. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v verLembretes\:ImprimirLembretes}
{\xe \v ImprimirLembretes\:verLembretes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ImprimirLembretes::verLembretes (std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime todos lembretes da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os lembretes atuais da lista\par
Verifica se o lembrete pertence ao usuario logado\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 233                                                           \{\par
234     \par
236     {\cf19 for} ({\cf17 const} {\cf17 auto}& lembrete : _listadeLembretes) \{\par
237 \par
239         {\cf19 if} (lembrete.first == *user_email) \{\par
240 \par
241             std::cout << {\cf22 "Lembrete: "} << lembrete.second->getMensagem() << std::endl \par
242             << {\cf22 "Data: "} << lembrete.second->getData() << std::endl\par
243             << {\cf22 "Horario: "} << lembrete.second->getHorario() << std::endl;\par
244             std::cout << {\cf22 "------------------------"} << std::endl;\par
245         \}\par
246     \}\par
247 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Lembrete/{\b Lembrete.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Lembrete/{\b Lembrete.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ImprimirTarefas\par \pard\plain 
{\tc\tcl2 \v ImprimirTarefas}
{\xe \v ImprimirTarefas}
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\par
{
{\f2 #include <Tarefa.hpp>}}\par
Diagrama de hierarquia da classe ImprimirTarefas:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_imprimir_tarefas.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b verTarefas} (std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra a lista de tarefas do usuario logado. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b ListaTarefa}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarTarefa} ({\b Tarefa} *tarefa, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona uma tarefa na lista de tarefas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerTarefa} ({\b Tarefa} *tarefa, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove uma tarefa da lista de tarefas. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b ListaTarefa}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b tamanho} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da lista. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos Protegidos Est\'E1ticos herdados de {\b ListaTarefa}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::unordered_map< std::string, {\b Tarefa} * > {\b _listadeTarefa}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a lista de tarefas <email, {\b Tarefa}> }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v verTarefas\:ImprimirTarefas}
{\xe \v ImprimirTarefas\:verTarefas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ImprimirTarefas::verTarefas (std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra a lista de tarefas do usuario logado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime as tarefas atuais da lista\par
Verifica se a tarefa pertence ao usuario\par
Obtem a prioridade\par
Obtem a cor\par
< Restaura a cor padrao do texto\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 407                                                       \{\par
408     \par
410     {\cf19 for} ({\cf17 const} {\cf17 auto}& tarefa : _listadeTarefa) \{\par
411 \par
413         {\cf19 if} (tarefa.first == *user_email) \{\par
414             \par
416             {\cf18 unsigned} prioridade = tarefa.second->getPrioridade();\par
417 \par
419             std::string cor = setCorPrioridade(prioridade);\par
420             \par
421             std::cout << {\cf22 "----------"} << std::endl\par
422 \par
423             << cor\par
424 \par
425             << {\cf22 "Titulo: "} << tarefa.second->getTitulo() << std::endl\par
426 \par
427             << {\cf22 "\\033[0m"} \par
428             \par
429             << {\cf22 "Descri\'E7ao: "} << tarefa.second->getDescricao() << std::endl\par
430             \par
431             << {\cf22 "Data: "} << tarefa.second->getData() << std::endl\par
432 \par
433             << {\cf22 "Prioridade: "} << tarefa.second->getPrioridade() << std::endl\par
434             \par
435             << {\cf22 "Estado: "} << tarefa.second->getEstado() << std::endl\par
436 \par
437             << std::endl;\par
438         \}        \par
439     \}\par
440 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Tarefa/{\b Tarefa.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Tarefa/{\b Tarefa.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Lembrete\par \pard\plain 
{\tc\tcl2 \v Lembrete}
{\xe \v Lembrete}
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\par
{
{\f2 #include <Lembrete.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Lembrete} (const std::string &horario, const std::string &mensagem, const std::string &data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getData} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela data do lembrete. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getHorario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo horario do lembrete. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getMensagem} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela mensagem do lembrete. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const std::string &novaData)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a data de um lembrete. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setHorario} (const std::string &novoHorario)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o horario de um compromisso. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMensagem} (std::string texto)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona uma mensagem para um lembrete. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Lembrete\:Lembrete}
{\xe \v Lembrete\:Lembrete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Lembrete::Lembrete (const std::string &  {\i horario}, const std::string &  {\i mensagem}, const std::string &  {\i data})}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                                                                              \{\par
12     _data = data;\par
13     _horario = horario;\par
14     _mensagem = mensagem;\par
15 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getData\:Lembrete}
{\xe \v Lembrete\:getData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Lembrete::getData () const}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela data do lembrete. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String da data \par
 \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a data\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                   \{\par
18 \par
19     {\cf19 return} this->_data; \par
20 \}\par
}
}
{\xe \v getHorario\:Lembrete}
{\xe \v Lembrete\:getHorario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Lembrete::getHorario () const}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo horario do lembrete. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do horario \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o horario\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22                                      \{\par
23 \par
24     {\cf19 return} this->_horario; \par
25 \}\par
}
}
{\xe \v getMensagem\:Lembrete}
{\xe \v Lembrete\:getMensagem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Lembrete::getMensagem () const}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela mensagem do lembrete. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String da mensagem \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a mensagem\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27                                       \{\par
28 \par
29     {\cf19 return} this->_mensagem; \par
30 \}\par
}
}
{\xe \v setData\:Lembrete}
{\xe \v Lembrete\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Lembrete::setData (const std::string &  {\i novaData})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a data de um lembrete. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novaData} \cell }{A nova data a ser adicionada\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A data informada deve estar no formato: DD/MM/AAAA \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica o formato da nova data\par
< Limitador deve ser '/'\par
Obtem a data atual do sistema\par
Converte time_point para time_t\par
Converte time_t para uma struct tm\par
< Inicializa o struct da nova data\par
< Atribui o dia da nova data\par
< Atribui o mes da nova data (os meses s\'E3o de 0 a 11)\par
< Atribui o ano da nova data (os anos s\'E3o contados a partir de 1900)\par
Converte a nova data de time_t para time_point\par
< Atribui a nova data\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32                                                  \{\par
33     {\cf19 try} \{\par
35         std::istringstream iss(nova_data);\par
36         {\cf18 int} dia, mes, ano;\par
37         {\cf18 char} limitador; \par
38 \par
39         {\cf19 if} (!(iss >> dia >> limitador >> mes >> limitador >> ano) || limitador != {\cf23 '/'}) \{\par
40             \par
41             {\cf19 throw} std::invalid_argument({\cf22 "Formato da data invalido"});\par
42         \}\par
43 \par
45         {\cf17 auto} timepoint_agora = std::chrono::system_clock::now();\par
46     \par
48         std::time_t time_t_agora = std::chrono::system_clock::to_time_t(timepoint_agora);\par
49     \par
51         {\cf17 struct }std::tm* tmAtual = std::localtime(&time_t_agora);\par
52 \par
53         {\cf20 // Cria uma representacao da nova data}\par
54         std::tm tmNovaData = \{0\}; \par
55         tmNovaData.tm_mday = dia; \par
56         tmNovaData.tm_mon = mes - 1; \par
57         tmNovaData.tm_year = ano - 1900; \par
58 \par
60         {\cf17 auto} timepoint_novadata = std::chrono::system_clock::from_time_t(std::mktime(&tmNovaData));\par
61 \par
62         {\cf20 // Verifica se a nova data esta no futuro}\par
63         {\cf19 if} (timepoint_novadata <= timepoint_agora) \{\par
64         \par
65             {\cf19 throw} std::logic_error({\cf22 "Data no passado"});\par
66         \}\par
67 \par
68         this->_data = nova_data; \par
69     \}\par
70     {\cf19 catch} ({\cf17 const} std::invalid_argument& e) \{\par
71         \par
72         std::cout << {\cf22 "Data deve estar no formato DD/MM/AAAA"} << std::endl;\par
73         \par
74         handleExcecao(e);\par
75     \}\par
76     {\cf19 catch} ({\cf17 const} std::logic_error& e) \{\par
77 \par
78         std::cout << {\cf22 "Impossivel adicionar um lembrete para datas anteriores a atual"} << std::endl;\par
79         \par
80         handleExcecao(e);\par
81     \}\par
82     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
83     \par
84         handleExcecao(e);\par
85     \}\par
86 \}\par
}
}
{\xe \v setHorario\:Lembrete}
{\xe \v Lembrete\:setHorario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Lembrete::setHorario (const std::string &  {\i novoHorario})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o horario de um compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novoHorario} \cell }{O novo horario a ser colocado\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O horario informado deve estar no formato: HH:MM:SS \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica o formato do novo horario\par
< Limitador deve ser ':'\par
Obtem a data do lembrete\par
< Limitador deve ser '/'\par
< Inicializa o struct da data\par
< Atribui o dia da data\par
< Atribui o mes da data (os meses s\'E3o de 0 a 11)\par
< Atribui o ano da data (os anos sao contados a partir de 1900)\par
< Atribui a nova hora dolembrete\par
< Atribui os novos minutos dolembrete\par
< Atribui os novos segundos do lembrete\par
Converte a data de time_t para time_point\par
Obtem a data atual do sistema\par
Converte time_point para time_t\par
Converte time_t para uma struct tm\par
< Atribui o novo horario\par
< Atribui o novo horario\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 88                                                        \{\par
89     \par
90     {\cf19 try} \{\par
92         std::istringstream iss(novo_horario);\par
93         {\cf18 int} HH, MM, SS;\par
94         {\cf18 char} limitador; \par
95 \par
96         {\cf19 if} (!(iss >> HH >> limitador >> MM >> limitador >> SS) || limitador != {\cf23 ':'}) \{\par
97             \par
98             {\cf19 throw} std::invalid_argument({\cf22 "Formato do horario invalido"});\par
99         \}\par
100 \par
102         std::string data_lembrete = getData();\par
103 \par
104         {\cf19 if} (!data_lembrete.empty()) \{\par
105             \par
106             std::istringstream iss(data_lembrete);\par
107             {\cf18 int} dia, mes, ano;\par
108             {\cf18 char} limitador; \par
109 \par
110             iss >> HH >> limitador >> MM >> limitador >> SS;\par
111 \par
112             {\cf20 // Cria uma representacao da data do lembrete            }\par
113             std::tm tmDataLembrete = \{0\}; \par
114             \par
115             tmDataLembrete.tm_mday = dia; \par
116             \par
117             tmDataLembrete.tm_mon = mes - 1; \par
118             \par
119             tmDataLembrete.tm_year = ano - 1900; \par
120 \par
121             tmDataLembrete.tm_hour = HH; \par
122 \par
123             tmDataLembrete.tm_min = MM; \par
124 \par
125             tmDataLembrete.tm_sec = SS; \par
127             {\cf17 auto} timepoint_data_lembrete = std::chrono::system_clock::from_time_t(std::mktime(&tmDataLembrete));\par
128 \par
130             {\cf17 auto} timepoint_agora = std::chrono::system_clock::now();\par
131 \par
133             std::time_t time_t_agora = std::chrono::system_clock::to_time_t(timepoint_agora);\par
134     \par
136             {\cf17 struct }std::tm* tmAtual = std::localtime(&time_t_agora);\par
137 \par
138             {\cf20 // Verifica se o novo horario eh no dia}\par
139             {\cf19 if} (timepoint_data_lembrete <= timepoint_agora) \{\par
140         \par
141                 {\cf19 throw} std::logic_error({\cf22 "Horario no passado"});\par
142             \}\par
143 \par
144             this->_horario = novo_horario; \par
145         \}\par
146         {\cf19 else} \{\par
147 \par
148             this->_horario = novo_horario; \par
149         \}\par
150     \}\par
151     {\cf19 catch} ({\cf17 const} std::invalid_argument& e) \{\par
152         \par
153         std::cout << {\cf22 "Horario deve estar no formato HH:MM:SS"} << std::endl;\par
154         \par
155         handleExcecao(e);\par
156     \}\par
157     {\cf19 catch} ({\cf17 const} std::logic_error& e) \{\par
158 \par
159         std::cout << {\cf22 "Impossivel adicionar uma tarefa ou compromisso para datas anteriores a atual"} << std::endl;\par
160         \par
161         handleExcecao(e);\par
162     \}\par
163     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
164     \par
165         handleExcecao(e);\par
166     \}\par
167 \}\par
}
}
{\xe \v setMensagem\:Lembrete}
{\xe \v Lembrete\:setMensagem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Lembrete::setMensagem (std::string  {\i texto})}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona uma mensagem para um lembrete. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i texto} \cell }{A mensagem a ser adicionada \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Limite de caracteres para a mensagem do lembrete\par
Verifica se a nova mensagem esta vazia, se a nova mensagem eh igual a mensagem atual ou ultrapassa o limite de caracteres\par
< Atribui a nova mensagem\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 169                                                   \{\par
170     \par
171     {\cf19 try} \{\par
172         {\cf17 const} {\cf18 size_t} MAX_CARACTERES = 45; \par
173         \par
175         {\cf19 if} (!nova_mensagem.empty() || nova_mensagem != this->_mensagem || nova_mensagem.length() < MAX_CARACTERES) \{\par
176 \par
177             this->_mensagem = nova_mensagem; \par
178         \} \par
179         {\cf19 else} \{\par
180 \par
181             {\cf19 throw} std::invalid_argument({\cf22 "Mensagem invalida"});\par
182         \}\par
183     \}\par
184     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
185 \par
186         std::cout << {\cf22 "A mensagem deve ser diferente da mensagem atual e possuir no maximo 45 caracteres"} << std::endl;\par
187 \par
188         handleExcecao(e);\par
189     \}\par
190 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Lembrete/{\b Lembrete.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Lembrete/{\b Lembrete.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe LembreteMenu\par \pard\plain 
{\tc\tcl2 \v LembreteMenu}
{\xe \v LembreteMenu}
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
{
{\f2 #include <LembreteMenu.hpp>}}\par
Diagrama de hierarquia da classe LembreteMenu:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_lembrete_menu.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LembreteMenu} (std::string *login_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu dos lembretes \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PrimeiroMenu} * {\b next} (unsigned option) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi proximo menu. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b PrimeiroMenu}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PrimeiroMenu} ()=default\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getUsuario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsuario} (std::string user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string novoTitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubtitulo} (std::string novoSubtitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOpcoes} (std::vector< std::string > novasOpcoes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderizar} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v LembreteMenu\:LembreteMenu}
{\xe \v LembreteMenu\:LembreteMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
LembreteMenu::LembreteMenu (std::string *  {\i login_email})}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu dos lembretes \par
 }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                                                 \{\par
13   \par
14   setTitulo({\cf22 "Menu de Lembretes! "});\par
15   setSubtitulo({\cf22 "Escolha uma op\'E7ao:"});\par
16   setOpcoes(\{{\cf22 "1 --> Adicionar um novo lembrete"}, {\cf22 "2 --> Remover um lembrete"}, {\cf22 "3 --> Editar um lembrete"}, {\cf22 "4 --> Voltar"}\});\par
17   setUsuario(*user_email);\par
18 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v next\:LembreteMenu}
{\xe \v LembreteMenu\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PrimeiroMenu} * LembreteMenu::next (unsigned  {\i option}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi proximo menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O proximo menu que o usuario escolheu \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atividades futuras:\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid retornar para o menu de lembretes \par
}
< Removendo o lembrete\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atividades futuras:\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid retornar para o menu de lembretes \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atividades futuras:\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid retornar para o menu de lembretes \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atividades futuras:\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid retornar para o menu do usuario \par
}
}{
Implementa {\b PrimeiroMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                                                 \{\par
21 \par
22   {\cf19 switch} (option) \{\par
23     {\cf19 case} 1: \{\par
24 \par
25         std::string novo_lembrete_data;\par
26         std::cout << {\cf22 "Insira uma data para seu lembrete"} << std::endl;\par
27         std::cin >> novo_lembrete_data;\par
28 \par
29         std::string novo_lembrete_horario;\par
30         std::cout << {\cf22 "Insira um horario para seu lembrete"} << std::endl;\par
31         std::cin >> novo_lembrete_horario;\par
32 \par
33         std::string novo_lembrete_mensagem;\par
34         std::cout << {\cf22 "Insira uma mensagem para seu lembrete"} << std::endl;\par
35         std::cin >> novo_lembrete_mensagem;\par
36 \par
37         std::cout << {\cf22 "Adicionando lembrete..."} << std::endl;\par
38 \par
39         Lembrete* new_lembrete = {\cf17 new} Lembrete(novo_lembrete_horario, novo_lembrete_mensagem, novo_lembrete_data);\par
40 \par
41         ListaLembrete::adicionarLembrete(new_lembrete, &getUsuario());\par
42 \par
43         {\cf19 if} (ListaLembrete::buscarLembrete(&novo_lembrete_mensagem) != {\cf17 nullptr}) \{\par
44 \par
45             std::cout << {\cf22 "O lembrete foi adicionado com sucesso!"} << std::endl;\par
46         \}\par
47         {\cf19 else} \{\par
48 \par
49             std::cout << {\cf22 "Nao foi possivel adicionar o novo lembrete."} << std::endl;\par
50         \}\par
52     \}\par
53     {\cf19 case} 2: \{\par
54 \par
55         std::string mensagem_lembrete;\par
56         std::cout << std::endl << {\cf22 "Digite a mensagem do lembrete que deseja remover: "} << std::endl;\par
57         std::cin >> mensagem_lembrete;\par
58 \par
59         std::cout << {\cf22 "Buscando por lembrete..."} << std::endl;\par
60         \par
61         Lembrete* lembrete = ListaLembrete::buscarLembrete(&mensagem_lembrete);\par
62 \par
63         {\cf19 if} (lembrete != {\cf17 nullptr}) \{\par
64 \par
65             ListaLembrete::removerLembrete(lembrete, &getUsuario()); \par
66 \par
67             std::cout << {\cf22 "O lembrete com mensagem '"} << mensagem_lembrete << {\cf22 "' foi removido com sucesso!"} << std::endl;\par
68         \}\par
69         {\cf19 else} \{\par
70 \par
71             std::cout << {\cf22 "O lembrete com mensagem '"} << mensagem_lembrete << {\cf22 "' nao foi encontrado."} << std::endl;\par
72         \}\par
73 \par
75 \par
76     \}\par
77     {\cf19 case} 3: \{\par
78 \par
79         std::string mensagem_lembrete;\par
80         std::cout << std::endl << {\cf22 "Digite a mensagem do lembrete que deseja editar: "} << std::endl;\par
81         std::cin >> mensagem_lembrete;\par
82 \par
83         std::cout << {\cf22 "Buscando por lembrete..."} << std::endl;\par
84         \par
85         Lembrete* lembrete = ListaLembrete::buscarLembrete(&mensagem_lembrete);\par
86 \par
87         {\cf19 if} (lembrete != {\cf17 nullptr}) \{\par
88 \par
89             std::cout << {\cf22 "Alterando o lembrete..."} << std::endl\par
90             << {\cf22 "Mensagem: "} << lembrete->getMensagem() << std::endl\par
91             << {\cf22 "Data: "} << lembrete->getData() << std::endl\par
92             << {\cf22 "Horario: "} << lembrete->getHorario() << std::endl;\par
93             \par
94             std::cout << std::endl << {\cf22 "Voce deseja..."} << std::endl\par
95             << {\cf22 "1 --> Editar mensagem"} << std::endl\par
96             << {\cf22 "2 --> Editar data"} << std::endl\par
97             << {\cf22 "3 --> Editar horario"} << std::endl;\par
98 \par
99             {\cf18 unsigned} opcao_editar;\par
100 \par
101             {\cf19 switch} (opcao_editar) \{\par
102                 {\cf19 case} 1: \{\par
103 \par
104                     std::string nova_mensagem;\par
105                     std::cout << {\cf22 "Digite uma nova mensagem para o lembrete:"} << std::endl;\par
106                     std::cin >> nova_mensagem;\par
107 \par
108                     std::cout << {\cf22 "Alterando mensagem..."};\par
109 \par
110                     lembrete->setMensagem(nova_mensagem);\par
111 \par
112                     Lembrete* lembrete_alterado = ListaLembrete::buscarLembrete(&nova_mensagem);  \par
113 \par
114                     {\cf19 if} (lembrete_alterado != {\cf17 nullptr} && lembrete_alterado->getData() == lembrete->getData() && lembrete_alterado->getHorario() == lembrete->getHorario()) \{\par
115 \par
116                         std::cout << {\cf22 "A mensagem do lembrete foi alterada com sucesso para: "} << lembrete->getMensagem() << {\cf22 "!"} << std::endl;\par
117                     \}\par
118                     {\cf19 else} \{\par
119 \par
120                         std::cout << {\cf22 "Nao foi possivel alterar a mensagem do lembrete."} << std::endl;\par
121                     \}\par
122                 \}\par
123                 {\cf19 case} 2: \{\par
124 \par
125                     std::string nova_data;\par
126                     std::cout << {\cf22 "Digite uma nova data para o lembrete (no formato: DD/MM/AAAA):"} << std::endl;\par
127                     std::cin >> nova_data;\par
128 \par
129                     std::cout << {\cf22 "Alterando data..."};\par
130 \par
131                     lembrete->setData(nova_data);  \par
132 \par
133                     {\cf19 if} (lembrete->getData() == nova_data) \{\par
134 \par
135                         std::cout << {\cf22 "A data do lembrete foi alterada com sucesso para: "} << lembrete->getData() << {\cf22 "!"} << std::endl;\par
136                     \}\par
137                     {\cf19 else} \{\par
138 \par
139                         std::cout << {\cf22 "Nao foi possivel alterar a data do lembrete."} << std::endl;\par
140                     \}\par
141                 \}\par
142                 {\cf19 case} 3: \{\par
143 \par
144                     std::string novo_horario;\par
145                     std::cout << {\cf22 "Digite um novo horario para o lembrete (no formato: HH:MM:SS):"} << std::endl;\par
146                     std::cin >> novo_horario;\par
147 \par
148                     std::cout << {\cf22 "Alterando horario..."};\par
149 \par
150                     lembrete->setHorario(novo_horario);  \par
151 \par
152                     {\cf19 if} (lembrete->getHorario() == novo_horario) \{\par
153 \par
154                         std::cout << {\cf22 "O horario do lembrete foi alterado com sucesso para: "} << lembrete->getHorario() << {\cf22 "!"} << std::endl;\par
155                     \}\par
156                     {\cf19 else} \{\par
157 \par
158                         std::cout << {\cf22 "Nao foi possivel alterar o horario do lembrete."} << std::endl;\par
159                     \}\par
160                 \}\par
161             \} \par
162         \}\par
163         {\cf19 else} \{\par
164 \par
165             std::cout << {\cf22 "O lembrete com mensagem '"} << mensagem_lembrete << {\cf22 "' nao foi encontrado."} << std::endl;\par
166         \}\par
167 \par
169 \par
170 \par
171     \}\par
172     {\cf19 case} 4: \{\par
173 \par
175     \}\par
176   \}\par
177 \par
178   {\cf20 // TODO: pr\'F3ximo menu}\par
179   {\cf19 return} {\cf17 nullptr};\par
180 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Menu/{\b LembreteMenu.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Menu/{\b LembreteMenu.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ListaCompromisso\par \pard\plain 
{\tc\tcl2 \v ListaCompromisso}
{\xe \v ListaCompromisso}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par
{
{\f2 #include <Tarefa.hpp>}}\par
Diagrama de hierarquia da classe ListaCompromisso:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_lista_compromisso.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b tamanho} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da lista. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarCompromisso} ({\b Compromisso} *compromisso, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um compromisso a lista de compromissos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerCompromisso} ({\b Compromisso} *compromisso, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um compromisso da lista de compromissos. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::unordered_map< std::string, {\b Compromisso} * > {\b _listadeCompromisso}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a lista de comprimissos. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarCompromisso\:ListaCompromisso}
{\xe \v ListaCompromisso\:adicionarCompromisso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaCompromisso::adicionarCompromisso ({\b Compromisso} *  {\i compromisso}, std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um compromisso a lista de compromissos. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i compromisso} \cell }{O compromisso a ser adicionado\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Adicionando o compromisso na lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 442                                                                                            \{\par
443     \par
444     _listadeCompromisso.insert(std::make_pair(*user_email, compromisso)); \par
445 \}\par
}
}
{\xe \v removerCompromisso\:ListaCompromisso}
{\xe \v ListaCompromisso\:removerCompromisso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaCompromisso::removerCompromisso ({\b Compromisso} *  {\i compromisso}, std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um compromisso da lista de compromissos. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i compromisso} \cell }{O compromisso a ser removido\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Itera sobre a lista procurando pelo compromisso fornecido e o email do usuario logado\par
< Remove o compromisso da lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 448                                                                                          \{\par
449 \par
451     {\cf17 auto} it = std::find_if(\par
452     _listadeCompromisso.begin(),\par
453     _listadeCompromisso.end(), \par
454     [user_email, compromisso]({\cf17 const} {\cf17 auto} & p) \{ return (p->first == user_email && p->second == compromisso);\}\par
455     );\par
456 \par
457     {\cf19 if} (it != _listadeCompromisso.end()) \{\par
458         \par
459         _listadeCompromisso.erase(it); \par
460     \}\par
461 \}\par
}
}
{\xe \v tamanho\:ListaCompromisso}
{\xe \v ListaCompromisso\:tamanho}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned ListaCompromisso::tamanho ()}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um unsigned com o tamanho \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retornando o tamanho da lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 463                                    \{\par
464 \par
465     {\cf19 return} _listadeCompromisso.size(); \par
466 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v _listadeCompromisso\:ListaCompromisso}
{\xe \v ListaCompromisso\:_listadeCompromisso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::unordered_map<std::string, {\b Compromisso}*> ListaCompromisso::_listadeCompromisso{\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a lista de comprimissos. }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Tarefa/{\b Tarefa.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Tarefa/{\b Tarefa.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ListaLembrete\par \pard\plain 
{\tc\tcl2 \v ListaLembrete}
{\xe \v ListaLembrete}
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par
{
{\f2 #include <Lembrete.hpp>}}\par
Diagrama de hierarquia da classe ListaLembrete:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_lista_lembrete.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b tamanho} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho do mapa. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarLembrete} ({\b Lembrete} *lembrete, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um {\b Lembrete} a lista de Lembretes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerLembrete} ({\b Lembrete} *lembrete, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um lembrete da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Lembrete} * {\b buscarLembrete} (std::string *mensagem)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Procura pelo lembrete pela mensagem. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::unordered_map< std::string, {\b Lembrete} * > {\b _listadeLembretes}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena todos os lembretes ativos para cada usuario. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarLembrete\:ListaLembrete}
{\xe \v ListaLembrete\:adicionarLembrete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaLembrete::adicionarLembrete ({\b Lembrete} *  {\i lembrete}, std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um {\b Lembrete} a lista de Lembretes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lembrete} \cell }{O lembrete a ser adicionado\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usu\'E1rio logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Adicionando o lembrete na lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 192                                                                                \{\par
193 \par
194     _listadeLembretes.insert(std::make_pair(*user_email, lembrete)); \par
195 \}\par
}
}
{\xe \v buscarLembrete\:ListaLembrete}
{\xe \v ListaLembrete\:buscarLembrete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Lembrete} * ListaLembrete::buscarLembrete (std::string *  {\i mensagem}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Procura pelo lembrete pela mensagem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mensagem} \cell }{A mensagem do lembrete a ser buscado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Itera sobre a lista procurando pelo lembrete\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 212                                                            \{\par
213 \par
215     {\cf17 auto} it = std::find_if(\par
216     _listadeLembretes.begin(),\par
217     _listadeLembretes.end(), \par
218     [mensagem]({\cf17 const} {\cf17 auto} & p) \{ return (p->first == user_email && p->second.getMensagem() == *mensagem);\}\par
219     );\par
220 \par
221     {\cf19 if} (it != _listadeLembretes.end()) \{\par
222 \par
223         {\cf19 return} it->second;\par
224     \}\par
225     {\cf19 else} {\cf19 return} {\cf17 nullptr};\par
226 \par
227 \}\par
}
}
{\xe \v removerLembrete\:ListaLembrete}
{\xe \v ListaLembrete\:removerLembrete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaLembrete::removerLembrete ({\b Lembrete} *  {\i lembrete}, std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um lembrete da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lembrete} \cell }{O lembrete a ser removido\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usu\'E1rio logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Itera sobre a lista procurando pelo lembrete fornecido e o email do usuario logado\par
< Remove o lembrete da lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 197                                                                              \{\par
198     \par
200     {\cf17 auto} it = std::find_if(\par
201         _listadeLembretes.begin(), _listadeLembretes.end(), \par
202         [user_email, lembrete]({\cf17 const} {\cf17 auto} & p) \par
203         \{ return (p->first == user_email && p->second == lembrete); \}\par
204     );\par
205 \par
206     {\cf19 if} (it != _listadeLembretes.end()) \{\par
207         \par
208         _listadeLembretes.erase(it); \par
209     \}\par
210 \}\par
}
}
{\xe \v tamanho\:ListaLembrete}
{\xe \v ListaLembrete\:tamanho}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned ListaLembrete::tamanho ()}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho do mapa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um unsigned com o tamanho \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o tamanho do mapa\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 228                                 \{\par
229 \par
230     {\cf19 return} _listadeLembretes.size(); \par
231 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v _listadeLembretes\:ListaLembrete}
{\xe \v ListaLembrete\:_listadeLembretes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::unordered_map<std::string, {\b Lembrete}*> ListaLembrete::_listadeLembretes{\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena todos os lembretes ativos para cada usuario. }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Lembrete/{\b Lembrete.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Lembrete/{\b Lembrete.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ListaTarefa\par \pard\plain 
{\tc\tcl2 \v ListaTarefa}
{\xe \v ListaTarefa}
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\par
{
{\f2 #include <Tarefa.hpp>}}\par
Diagrama de hierarquia da classe ListaTarefa:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_lista_tarefa.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b tamanho} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da lista. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarTarefa} ({\b Tarefa} *tarefa, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona uma tarefa na lista de tarefas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerTarefa} ({\b Tarefa} *tarefa, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove uma tarefa da lista de tarefas. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::unordered_map< std::string, {\b Tarefa} * > {\b _listadeTarefa}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a lista de tarefas <email, {\b Tarefa}> }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarTarefa\:ListaTarefa}
{\xe \v ListaTarefa\:adicionarTarefa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaTarefa::adicionarTarefa ({\b Tarefa} *  {\i tarefa}, std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona uma tarefa na lista de tarefas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tarefa} \cell }{A tarefa a ser adicionada\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Adicionando a tarefa na lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 382                                                                        \{\par
383 \par
384     _listadeTarefa.insert(std::make_pair(*user_email, tarefa)); \par
385 \}\par
}
}
{\xe \v removerTarefa\:ListaTarefa}
{\xe \v ListaTarefa\:removerTarefa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaTarefa::removerTarefa ({\b Tarefa} *  {\i tarefa}, std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove uma tarefa da lista de tarefas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tarefa} \cell }{a {\b Tarefa} a ser removida\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Itera sobre a lista procurando pela tarefa fornecida e o email do usuario logado\par
< Remove a tarefa da lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 387                                                                      \{\par
388 \par
390     {\cf17 auto} it = std::find_if(\par
391     _listadeTarefa.begin(),\par
392     _listadeTarefa.end(), \par
393     [user_email, tarefa]({\cf17 const} {\cf17 auto} & p) \{ return (p->first == user_email && p->second == tarefa);\}\par
394     );\par
395 \par
396     {\cf19 if} (it != _listadeTarefa.end()) \{\par
397         \par
398         _listadeTarefa.erase(it); \par
399     \}\par
400 \}\par
}
}
{\xe \v tamanho\:ListaTarefa}
{\xe \v ListaTarefa\:tamanho}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned ListaTarefa::tamanho ()}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um unsigned com o tamanho \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retornando o tamanho da lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 402                               \{\par
403 \par
404     {\cf19 return} _listadeTarefa.size(); \par
405 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v _listadeTarefa\:ListaTarefa}
{\xe \v ListaTarefa\:_listadeTarefa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::unordered_map<std::string, {\b Tarefa}*> ListaTarefa::_listadeTarefa{\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a lista de tarefas <email, {\b Tarefa}> }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Tarefa/{\b Tarefa.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Tarefa/{\b Tarefa.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ListaUsuario\par \pard\plain 
{\tc\tcl2 \v ListaUsuario}
{\xe \v ListaUsuario}
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
\par
{
{\f2 #include <Usuario.hpp>}}\par
Diagrama de hierarquia da classe ListaUsuario:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_lista_usuario.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarUsuario} ({\b Usuario} *usuario)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um {\b Usuario} a lista de Usuarios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerUsuario} ({\b Usuario} *usuario)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um {\b Usuario} da lista de Usuarios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b checkUsuario} (std::string *email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o usuario existe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b checkUsuario} (std::string *email, std::string *nome)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o email e o nome fornecidos correpondem na lista. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarUsuario\:ListaUsuario}
{\xe \v ListaUsuario\:adicionarUsuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaUsuario::adicionarUsuario ({\b Usuario} *  {\i usuario}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um {\b Usuario} a lista de Usuarios. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i usuario} \cell }{O {\b Usuario} a ser adicionado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Adicionando o email do usuario logado na lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 137                                                     \{\par
138     \par
139     _listadeusuario.insert(std::make_pair(usuario->getEmail(), *usuario)); \par
140 \}\par
}
}
{\xe \v checkUsuario\:ListaUsuario}
{\xe \v ListaUsuario\:checkUsuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ListaUsuario::checkUsuario (std::string *  {\i email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o usuario existe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esse \'E9 um m\'E9todo provido por conveni\'EAncia. Ele difere do m\'E9todo acima apenas na lista de argumentos que devem ser utilizados.\par
Verifica se o email ja esta cadastrado\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i email} \cell }{O email do usuario a ser verificado\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True se o usuario existe, false caso contrario \par
 \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Procura o usuario na lista pelo email\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 147                                                 \{\par
148 \par
149     {\cf17 auto} it = _listadeusuario.find(*email); \par
150 \par
151     {\cf19 return} (it != _listadeusuario.end());\par
152 \}\par
}
}
{\xe \v checkUsuario\:ListaUsuario}
{\xe \v ListaUsuario\:checkUsuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ListaUsuario::checkUsuario (std::string *  {\i email}, std::string *  {\i nome}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o email e o nome fornecidos correpondem na lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esse \'E9 um m\'E9todo provido por conveni\'EAncia. Ele difere do m\'E9todo acima apenas na lista de argumentos que devem ser utilizados.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i email} \cell }{O email fornecido\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome} \cell }{O nome fornecido\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True se o nome e o email correpondem, false caso contrario \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Procura o usuario na lista pelo email\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 154                                                                  \{\par
155 \par
156     {\cf17 auto} it = _listadeusuario.find(*email); \par
157 \par
158     {\cf19 return} (it != _listadeusuario.end() && it->second.getEmail() == *email);\par
159 \}\par
}
}
{\xe \v removerUsuario\:ListaUsuario}
{\xe \v ListaUsuario\:removerUsuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaUsuario::removerUsuario ({\b Usuario} *  {\i usuario}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um {\b Usuario} da lista de Usuarios. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i usuario} \cell }{O {\b Usuario} a ser removido \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Removendo o {\b Usuario} da lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 142                                                   \{\par
143 \par
144     _listadeusuario.erase(usuario->getEmail()); \par
145 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Usuario/{\b Usuario.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Usuario/{\b Usuario.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe MenuLogin\par \pard\plain 
{\tc\tcl2 \v MenuLogin}
{\xe \v MenuLogin}
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
\par
{
{\f2 #include <LoginMenu.hpp>}}\par
Diagrama de hierarquia da classe MenuLogin:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_menu_login.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuLogin} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Controi o menu de login. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PrimeiroMenu} * {\b next} (unsigned opcao) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi proximo menu. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b PrimeiroMenu}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PrimeiroMenu} ()=default\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getUsuario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsuario} (std::string user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string novoTitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubtitulo} (std::string novoSubtitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOpcoes} (std::vector< std::string > novasOpcoes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderizar} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v MenuLogin\:MenuLogin}
{\xe \v MenuLogin\:MenuLogin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MenuLogin::MenuLogin ()}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Controi o menu de login. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9                      \{\par
10 \par
11   setTitulo({\cf22 "Seja bem-vindo ao Gerenciador de Tarefas! "});\par
12   setSubtitulo({\cf22 "Escolha uma opcao:"});\par
13   setOpcoes(\{{\cf22 "1 --> Fazer login"}, {\cf22 "2 --> Fazer novo cadastro"}\});\par
14 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v next\:MenuLogin}
{\xe \v MenuLogin\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PrimeiroMenu} * MenuLogin::next (unsigned  {\i opcao}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi proximo menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O proximo menu que o usuario escolheu. \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o usuario esta cadastrado no sistema com o email e nome fornecidos\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atividades futuras:\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid Tratar o erro de login caso o usuario nao esteja registrado ainda (lan\'E7ar exception e retornar para o menu login) \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atividades futuras:\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid Nao foi possivel cadastrar o novo usuario, retornar para o menu login \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atividades futuras:\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid menu anterior \par
}
}{
Implementa {\b PrimeiroMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16                                              \{\par
17   \par
18   {\cf19 switch} (option) \{\par
19     \par
20     {\cf19 case} 1: \{\par
21 \par
22       std::string login_email;\par
23       std::cout << std::endl << {\cf22 "> Digite seu email: "};\par
24       std::cin >> login_email;\par
25 \par
26       std::string login_nome;\par
27       std::cout << {\cf22 "> Digite seu nome: "};\par
28       std::cin >> login_nome;\par
29 \par
30       std::cout << {\cf22 "Fazendo login..."} << std::endl;\par
31 \par
33       {\cf19 if} (Usuario::checkUsuario(&login_email, &login_nome)) \{ \par
34         \par
35         std::cout << {\cf22 "Logado com sucesso em: "} << login_nome << {\cf22 " ("} << login_email << {\cf22 ")!"} << std::endl; \par
36         \par
37         {\cf19 return} {\cf17 new} UsuarioMenu(&login_nome, &login_email);\par
38       \}\par
39       {\cf19 else} \{\par
40 \par
42       \}\par
43     \}\par
44     \par
45     {\cf19 case} 2: \{\par
46 \par
47       std::string register_email;\par
48       std::cout << {\cf22 "> Insira o seu email: "};\par
49       std::cin >> register_email;\par
50 \par
51       std::string register_nome;\par
52       std::cout << {\cf22 "> Insira o seu primeiro nome: "};\par
53       std::cin >> register_nome;\par
54       \par
55       std::string register_sobrenome;\par
56       std::cout << {\cf22 "> Insira o seu sobrenome: "};\par
57       std::cin >> register_sobrenome;\par
58 \par
59       std::string register_idade;\par
60       std::cout << {\cf22 "> Insira a sua idade: "};\par
61       std::cin >> register_idade; \par
62 \par
63       std::cout << {\cf22 "Cadastrando usuario..."} << std::endl;\par
64 \par
65       Usuario* new_user = {\cf17 new} Usuario(register_nome, register_sobrenome, register_idade, register_email);\par
66       \par
67       ListaUsuario::adicionarUsuario(new_user);\par
68 \par
69       {\cf19 if} (ListaUsuario::checkUsuario(&register_email, &register_nome)) \{\par
70         \par
71         std::cout << {\cf22 "Usuario "} << register_nome << {\cf22 " ("} << register_email << {\cf22 ") cadastrado com sucesso!"} << std::endl;\par
72         \par
73         {\cf19 return} {\cf17 new} UsuarioMenu(&register_nome, &register_email);\par
74       \}\par
75       {\cf19 else} \{\par
76 \par
78       \}\par
79     \}\par
80   \}\par
81 \par
83   return ;\par
84 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Menu/{\b LoginMenu.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Menu/{\b LoginMenu.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Notificacao\par \pard\plain 
{\tc\tcl2 \v Notificacao}
{\xe \v Notificacao}
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
\par
{
{\f2 #include <Notifica\'E7\'E3o.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Notificacao} (const int horaAntes, const int minAntes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b notificar} ({\b Compromisso} *compromisso)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compara com o horario real e notifica um compromisso no horario programado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b notificar} ({\b Lembrete} *lembrete)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compara com o horario real e notifica um lembrete no horario programado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ativarNotificacao} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa uma notifica\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b desativarNotificacao} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa uma notifica\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkEstado} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica o estado da notifica\'E7\'E3o. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Notificacao\:Notificacao}
{\xe \v Notificacao\:Notificacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Notificacao::Notificacao (const int  {\i horaAntes}, const int  {\i minAntes})}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                                                 \{\par
8     _minAntes = minAntes;\par
9     _horaAntes = horaAntes;\par
10     _estado = {\cf17 true};\par
11 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v ativarNotificacao\:Notificacao}
{\xe \v Notificacao\:ativarNotificacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Notificacao::ativarNotificacao ()}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa uma notifica\'E7\'E3o. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 47                                     \{\par
48     _estado = {\cf17 true};\par
49 \}\par
}
}
{\xe \v checkEstado\:Notificacao}
{\xe \v Notificacao\:checkEstado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Notificacao::checkEstado ()}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica o estado da notifica\'E7\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true (se est\'E1 ativada) ou false (se est\'E1 desativada) \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 55                               \{\par
56     {\cf19 return} _estado;\par
57 \}\par
}
}
{\xe \v desativarNotificacao\:Notificacao}
{\xe \v Notificacao\:desativarNotificacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Notificacao::desativarNotificacao ()}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa uma notifica\'E7\'E3o. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51                                        \{\par
52     _estado = {\cf17 false};\par
53 \}\par
}
}
{\xe \v notificar\:Notificacao}
{\xe \v Notificacao\:notificar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Notificacao::notificar ({\b Compromisso} *  {\i compromisso})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compara com o horario real e notifica um compromisso no horario programado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i compromisso} \cell }{O compromisso a ser notificado \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                                     \{\par
14     time_t timer;\par
15     {\cf17 struct }tm *horarioLocal;\par
16     time(&timer); {\cf20 // Obtem informa\'E7\'F5es de data e hora}\par
17     horarioLocal = localtime(&timer); {\cf20 // Converte a hora atual para a hora local}\par
18 \par
19     {\cf18 int} horaAtual = horarioLocal->tm_hour;\par
20     {\cf18 int} minAtual = horarioLocal->tm_min;\par
21 \par
22     {\cf18 int} horaCompromisso = compromisso->getHorario()[0] + compromisso->getHorario()[1];\par
23     {\cf18 int} minCompromisso = compromisso->getHorario()[3] + compromisso->getHorario()[4];\par
24 \par
25     {\cf19 if} (_estado && horaCompromisso - _horaAntes == horaAtual && minCompromisso - _minAntes == minAtual) \{\par
26         cout << compromisso->getDescricao() << {\cf22 " Daqui a: "} << _horaAntes << {\cf22 "h e "} << _minAntes << {\cf22 "min"} << endl;\par
27     \}\par
28 \}\par
}
}
{\xe \v notificar\:Notificacao}
{\xe \v Notificacao\:notificar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Notificacao::notificar ({\b Lembrete} *  {\i lembrete})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compara com o horario real e notifica um lembrete no horario programado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lembrete} \cell }{O lembrete a ser notificado \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                               \{\par
31     time_t timer;\par
32     {\cf17 struct }tm *horarioLocal;\par
33     time(&timer); {\cf20 // Obtem informa\'E7\'F5es de data e hora}\par
34     horarioLocal = localtime(&timer); {\cf20 // Converte a hora atual para a hora local}\par
35 \par
36     {\cf18 int} horaAtual = horarioLocal->tm_hour;\par
37     {\cf18 int} minAtual = horarioLocal->tm_min;\par
38     \par
39     {\cf18 int} horaLembrete = lembrete->getHorario()[0] + lembrete->getHorario()[1];\par
40     {\cf18 int} minLembrete = lembrete->getHorario()[3] + lembrete->getHorario()[4];\par
41 \par
42     {\cf19 if} (_estado && horaLembrete - _horaAntes == horaAtual && minLembrete - _minAntes == minAtual) \{\par
43         cout << lembrete->getMensagem() << {\cf22 " Daqui a: "} << _horaAntes << {\cf22 "h e "} << _minAntes << {\cf22 "min"} << endl;\par
44     \}\par
45 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Notifica\'E7ao/{\b Notifica\'E7\'E3o.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Notifica\'E7ao/{\b Notifica\'E7\'E3o.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe PrimeiroMenu\par \pard\plain 
{\tc\tcl2 \v PrimeiroMenu}
{\xe \v PrimeiroMenu}
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\par
{
{\f2 #include <Menu.hpp>}}\par
Diagrama de hierarquia da classe PrimeiroMenu:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_primeiro_menu.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PrimeiroMenu} ()=default\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b PrimeiroMenu} * {\b next} (unsigned opcao)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getUsuario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsuario} (std::string user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string novoTitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubtitulo} (std::string novoSubtitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOpcoes} (std::vector< std::string > novasOpcoes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderizar} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~PrimeiroMenu\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:~PrimeiroMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual PrimeiroMenu::~PrimeiroMenu (){\f2 [virtual]}, {\f2 [default]}}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getUsuario\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:getUsuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string PrimeiroMenu::getUsuario () const}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String com email do usuario logado \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                                          \{\par
6 \par
7   {\cf19 return} this->_user_email;\par
8 \} \par
}
}
{\xe \v next\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b PrimeiroMenu} * PrimeiroMenu::next (unsigned  {\i opcao}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O proximo menu \par
}}}{
Implementado por {\b MenuLogin} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CompromissoMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b LembreteMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b TarefaMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFN \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b UsuarioMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v renderizar\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:renderizar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PrimeiroMenu::renderizar () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                     \{\par
31 \par
32   std::string border(_titulo.size() + 5, {\cf23 '='});\par
33   std::cout << border << {\cf23 '\\n'};\par
34   std::cout << {\cf22 "|| "} << _titulo << {\cf22 "||"} << {\cf23 '\\n'};\par
35   std::cout << border << {\cf22 "\\n\\n"};\par
36 \par
37   std::cout << _subtitulo << {\cf23 '\\n'} << {\cf23 '\\n'};\par
38 \par
39   {\cf19 for} (std::string opt : _opcoes) \{\par
40     \par
41     std::cout << opt << {\cf23 '\\n'};\par
42   \}\par
43   \par
44   std::cout << border << {\cf22 "\\n\\n"};\par
45   \par
46   std::cout << std::endl << {\cf22 "> Escolha: "};\par
47 \}\par
}
}
{\xe \v setOpcoes\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:setOpcoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PrimeiroMenu::setOpcoes (std::vector< std::string >  {\i novasOpcoes})}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novasOpcoes} \cell }{As novas opcoes a serem adicionadas \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                                              \{\par
26 \par
27   this->_opcoes = novasOpcoes;\par
28 \}\par
}
}
{\xe \v setSubtitulo\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:setSubtitulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PrimeiroMenu::setSubtitulo (std::string  {\i novoSubtitulo})}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novoSubtitulo} \cell }{O novo subtitulo do menu \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                                                         \{\par
21 \par
22   this->_subtitulo = novoSubstitulo;\par
23 \}\par
}
}
{\xe \v setTitulo\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:setTitulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PrimeiroMenu::setTitulo (std::string  {\i novoTitulo})}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novoTitulo} \cell }{O novo titulo do menu \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                                                  \{\par
16   \par
17   this->_titulo = novoTitulo;\par
18 \}\par
}
}
{\xe \v setUsuario\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:setUsuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PrimeiroMenu::setUsuario (std::string  {\i user_email})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \par
 \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                                                   \{\par
11 \par
12   this->_user_email = user_email;\par
13 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Menu/{\b Menu.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Menu/{\b Menu.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Tarefa\par \pard\plain 
{\tc\tcl2 \v Tarefa}
{\xe \v Tarefa}
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
\par
{
{\f2 #include <Tarefa.hpp>}}\par
Diagrama de hierarquia da classe Tarefa:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tarefa.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Tarefa} (std::string &titulo, std::string &descricao, std::string &data, unsigned prioridade, std::string &estado)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getTitulo} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo titulo da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getDescricao} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela descri\'E7ao da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getData} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela data da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b getPrioridade} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela prioridade da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getEstado} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo estado da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (const std::string &novoTitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDescricao} (const std::string &novaDescricao)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a descri\'E7ao de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const std::string &novaData)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a data de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPrioridade} (unsigned novaPrioridade)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a prioridade de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEstado} (const std::string &novoEstado)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o estado de uma tarefa. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Tarefa\:Tarefa}
{\xe \v Tarefa\:Tarefa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tarefa::Tarefa (std::string &  {\i titulo}, std::string &  {\i descricao}, std::string &  {\i data}, unsigned  {\i prioridade}, std::string &  {\i estado})}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9                                                                                                                \{\par
10     _titulo = titulo;\par
11     _descricao = descricao;\par
12     _data = data;\par
13     _prioridade = prioridade;\par
14     _estado = estado;\par
15 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getData\:Tarefa}
{\xe \v Tarefa\:getData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Tarefa::getData () const}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela data da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String da data \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a data\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27                                 \{\par
28 \par
29     {\cf19 return} this->_data; \par
30 \}\par
}
}
{\xe \v getDescricao\:Tarefa}
{\xe \v Tarefa\:getDescricao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Tarefa::getDescricao () const}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela descri\'E7ao da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String da descri\'E7ao \par
 \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a descri\'E7ao\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22                                      \{\par
23 \par
24     {\cf19 return} this->_descricao; \par
25 \}\par
}
}
{\xe \v getEstado\:Tarefa}
{\xe \v Tarefa\:getEstado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Tarefa::getEstado () const}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo estado da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do estado (feito, em progresso, nao feito) \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o estado\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                   \{\par
38 \par
39     {\cf19 return} this->_estado; \par
40 \}\par
}
}
{\xe \v getPrioridade\:Tarefa}
{\xe \v Tarefa\:getPrioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned Tarefa::getPrioridade () const}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela prioridade da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Unsigned (1, 2 ou 3) \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a prioridade\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32                                      \{\par
33 \par
34     {\cf19 return} this->_prioridade; \par
35 \}\par
}
}
{\xe \v getTitulo\:Tarefa}
{\xe \v Tarefa\:getTitulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Tarefa::getTitulo () const}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo titulo da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do titulo \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o titulo\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                   \{\par
18 \par
19     {\cf19 return} this->_titulo; \par
20 \}\par
}
}
{\xe \v setData\:Tarefa}
{\xe \v Tarefa\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tarefa::setData (const std::string &  {\i novaData})}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a data de uma tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novaData} \cell }{A nova data a ser colocada\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A data informada deve estar no formato: DD/MM/AAAA \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica o formato da nova data\par
< Limitador deve ser '/'\par
Obtem a data atual do sistema\par
Converte time_point para time_t\par
Converte time_t para uma struct tm\par
< Inicializa o struct da nova data\par
< Atribui o dia da nova data\par
< Atribui o mes da nova data (os meses s\'E3o de 0 a 11)\par
< Atribui o ano da nova data (os anos s\'E3o contados a partir de 1900)\par
Converte a nova data de time_t para time_point\par
< Atribui a nova data\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 88                                               \{\par
89 \par
90     {\cf19 try} \{\par
92         std::istringstream iss(novaData);\par
93         {\cf18 int} dia, mes, ano;\par
94         {\cf18 char} limitador; \par
95 \par
96         {\cf19 if} (!(iss >> dia >> limitador >> mes >> limitador >> ano) || limitador != {\cf23 '/'}) \{\par
97             \par
98             {\cf19 throw} std::invalid_argument({\cf22 "Formato da data invalido"});\par
99         \}\par
100 \par
102         {\cf17 auto} timepoint_agora = std::chrono::system_clock::now();\par
103     \par
105         std::time_t time_t_agora = std::chrono::system_clock::to_time_t(timepoint_agora);\par
106     \par
108         {\cf17 struct }std::tm* tmAtual = std::localtime(&time_t_agora);\par
109 \par
110         {\cf20 // Cria uma representacao da nova data}\par
111         std::tm tmNovaData = \{0\}; \par
112         tmNovaData.tm_mday = dia; \par
113         tmNovaData.tm_mon = mes - 1; \par
114         tmNovaData.tm_year = ano - 1900; \par
115 \par
117         {\cf17 auto} timepoint_novadata = std::chrono::system_clock::from_time_t(std::mktime(&tmNovaData));\par
118 \par
119         {\cf20 // Verifica se a nova data esta no futuro}\par
120         {\cf19 if} (timepoint_novadata <= timepoint_agora) \{\par
121         \par
122             {\cf19 throw} std::logic_error({\cf22 "Data no passado"});\par
123         \}\par
124 \par
125         this->_data = novaData; \par
126     \}\par
127     {\cf19 catch} ({\cf17 const} std::invalid_argument& e) \{\par
128         \par
129         std::cout << {\cf22 "Data deve estar no formato DD/MM/AAAA"} << std::endl;\par
130         \par
131         handleExcecao(e);\par
132     \}\par
133     {\cf19 catch} ({\cf17 const} std::logic_error& e) \{\par
134 \par
135         std::cout << {\cf22 "Impossivel adicionar uma tarefa ou compromisso para datas anteriores a atual"} << std::endl;\par
136         \par
137         handleExcecao(e);\par
138     \}\par
139     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
140     \par
141         handleExcecao(e);\par
142     \}\par
143 \}\par
}
}
{\xe \v setDescricao\:Tarefa}
{\xe \v Tarefa\:setDescricao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tarefa::setDescricao (const std::string &  {\i novaDescricao})}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a descri\'E7ao de uma tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novaDescricao} \cell }{A nova descri\'E7ao a ser colocada \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Limite de caracteres para a nova descricao\par
Verifica se a nova descricao eh valida\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65                                                         \{\par
66 \par
67     {\cf19 try} \{\par
68         {\cf17 const} {\cf18 size_t} MAX_CARACTERES = 120; \par
69 \par
71         {\cf19 if} (!novaDescricao.length() || !novaDescricao.empty()) \{\par
72 \par
73             this->_descricao = novaDescricao; {\cf20 //< Atribui a nova descricao}\par
74         \}\par
75         {\cf19 else} \{\par
76         \par
77             {\cf19 throw} std::invalid_argument({\cf22 "Descricao invalida"});\par
78         \}\par
79     \}\par
80     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
81         \par
82         std::cout << {\cf22 "Descricao deve possuir entre 1 e 120 caracteres"} << std::endl;\par
83         \par
84         handleExcecao(e);\par
85     \}\par
86 \}\par
}
}
{\xe \v setEstado\:Tarefa}
{\xe \v Tarefa\:setEstado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tarefa::setEstado (const std::string &  {\i novoEstado})}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o estado de uma tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novoEstado} \cell }{O novo estado a ser colocado\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O estado varia entre: feito (deletar em seguida), em progresso, n\'E3o feito (alertar). \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o novo estado eh valido\par
< Atribui o novo estado\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 168                                                   \{\par
169 \par
170     {\cf19 try} \{    \par
172         {\cf19 if} (novoEstado == {\cf22 "feito"} || novoEstado == {\cf22 "em progresso"} || novoEstado == {\cf22 "n\'E3o feito"}) \{\par
173         \par
174             this->_estado = novoEstado; \par
175         \}\par
176         {\cf19 else} \{\par
177 \par
178             {\cf19 throw} std::invalid_argument({\cf22 "Estado invalido"});\par
179         \}\par
180     \}\par
181     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
182 \par
183         std::cout << {\cf22 "O estado deve ser: "} << std::endl\par
184         << {\cf22 "    - 'feito'"} << std::endl \par
185         << {\cf22 "    - 'em progresso'"} << std::endl \par
186         << {\cf22 "    - 'nao feito'"} << std::endl;\par
187 \par
188         handleExcecao(e);\par
189     \}    \par
190 \}\par
}
}
{\xe \v setPrioridade\:Tarefa}
{\xe \v Tarefa\:setPrioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tarefa::setPrioridade (unsigned  {\i novaPrioridade})}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a prioridade de uma tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novaPrioridade} \cell }{A nova prioridade a ser colocada\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A prioridade varia entre: 1 --> menos importante, 2 --> importante, 3 --> muito importante. \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a nova prioridade eh valida\par
< Atribui a nova prioridade\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 145                                                         \{\par
146     {\cf19 try} \{\par
148         {\cf19 if} (novaPrioridade == 1 || novaPrioridade == 2 || novaPrioridade == 3) \{\par
149         \par
150             this->_prioridade = novaPrioridade; \par
151         \}\par
152         {\cf19 else} \{\par
153 \par
154             {\cf19 throw} std::invalid_argument({\cf22 "Prioridade invalida"});\par
155         \}\par
156     \}\par
157     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
158 \par
159         std::cout << {\cf22 "A prioridade deve ser: "} << std::endl\par
160         << {\cf22 "    - '1' para menos importante"} << std::endl\par
161         << {\cf22 "    - '2' para importante"} << std::endl\par
162         << {\cf22 "    - '3' para mais importante"} << std::endl;\par
163         \par
164         handleExcecao(e);\par
165     \}\par
166 \}\par
}
}
{\xe \v setTitulo\:Tarefa}
{\xe \v Tarefa\:setTitulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tarefa::setTitulo (const std::string &  {\i novoTitulo})}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo de uma tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novoTitulo} \cell }{O novo titulo a ser colocado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Limite de caracteres para o novo titulo\par
Verifica se o novo titulo eh valido\par
< Atribui o novo titulo\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                                   \{\par
43 \par
44     {\cf19 try} \{\par
45         {\cf17 const} {\cf18 size_t} MAX_CARACTERES = 50; \par
46 \par
48         {\cf19 if} (!novoTitulo.length() >= MAX_CARACTERES || !novoTitulo.empty()) \{\par
49 \par
50             this->_titulo = novoTitulo; \par
51         \}\par
52         {\cf19 else} \{\par
53 \par
54             {\cf19 throw} std::invalid_argument({\cf22 "Titulo invalido"});\par
55         \}\par
56     \} \par
57     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
58         \par
59         std::cout << {\cf22 "Titulo deve possuir entre 1 e 50 caracteres"} << std::endl;\par
60         \par
61         handleExcecao(e);\par
62     \}\par
63 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Tarefa/{\b Tarefa.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Tarefa/{\b Tarefa.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe TarefaMenu\par \pard\plain 
{\tc\tcl2 \v TarefaMenu}
{\xe \v TarefaMenu}
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\par
{
{\f2 #include <TarefaMenu.hpp>}}\par
Diagrama de hierarquia da classe TarefaMenu:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tarefa_menu.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TarefaMenu} (std::string *login_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu das tarefas \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PrimeiroMenu} * {\b next} (unsigned option) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi pr\'F3ximo menu. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b PrimeiroMenu}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PrimeiroMenu} ()=default\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getUsuario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsuario} (std::string user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string novoTitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubtitulo} (std::string novoSubtitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOpcoes} (std::vector< std::string > novasOpcoes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderizar} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TarefaMenu\:TarefaMenu}
{\xe \v TarefaMenu\:TarefaMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TarefaMenu::TarefaMenu (std::string *  {\i login_email})}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu das tarefas \par
 }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v next\:TarefaMenu}
{\xe \v TarefaMenu\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PrimeiroMenu} * TarefaMenu::next (unsigned  {\i option}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi pr\'F3ximo menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O proximo menu que o usuario escolheu \par
}}}{
Implementa {\b PrimeiroMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Menu/{\b TarefaMenu.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Usuario\par \pard\plain 
{\tc\tcl2 \v Usuario}
{\xe \v Usuario}
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
\par
{
{\f2 #include <Usuario.hpp>}}\par
Diagrama de hierarquia da classe Usuario:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_usuario.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Usuario} (std::string &nome, std::string &sobrenome, std::string &idade, std::string &email)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getNome} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo nome do usuario. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getIdade} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela idade do usuario. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getEmail} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo email do usuario. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNome} (std::string nome, std::string sobrenome)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o nome e sobrenome de um usuario. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIdade} (std::string *idade)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a idade de um usuario. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEmail} (std::string *email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o email de um usuario. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b ListaUsuario}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarUsuario} ({\b Usuario} *usuario)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um {\b Usuario} a lista de Usuarios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerUsuario} ({\b Usuario} *usuario)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um {\b Usuario} da lista de Usuarios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b checkUsuario} (std::string *email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o usuario existe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b checkUsuario} (std::string *email, std::string *nome)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o email e o nome fornecidos correpondem na lista. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Usuario\:Usuario}
{\xe \v Usuario\:Usuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Usuario::Usuario (std::string &  {\i nome}, std::string &  {\i sobrenome}, std::string &  {\i idade}, std::string &  {\i email})}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8                                                                                           \{\par
9     setNome(nome, sobrenome);\par
10     setIdade(&idade);\par
11     setEmail(&email);\par
12 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getEmail\:Usuario}
{\xe \v Usuario\:getEmail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Usuario::getEmail () const}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo email do usuario. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do email \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o email\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                   \{\par
25     \par
26     {\cf19 return} this->_email; \par
27 \}\par
}
}
{\xe \v getIdade\:Usuario}
{\xe \v Usuario\:getIdade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Usuario::getIdade () const}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela idade do usuario. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String da idade \par
 \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a idade\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                   \{\par
20 \par
21     {\cf19 return} this->_idade; \par
22 \}\par
}
}
{\xe \v getNome\:Usuario}
{\xe \v Usuario\:getNome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Usuario::getNome () const}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo nome do usuario. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do nome \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o nome\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                                  \{\par
15 \par
16     {\cf19 return} this->_nome; \par
17 \}\par
}
}
{\xe \v setEmail\:Usuario}
{\xe \v Usuario\:setEmail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Usuario::setEmail (std::string *  {\i email})}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o email de um usuario. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i email} \cell }{O email a ser alterado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quebra o novo email em partes, para fazer as verificacoes necessarias\par
Verifica se o usuario ou dominio estao preenchidos\par
Verifica se o dominio esta preenchido corretamente\par
< Atribui o novo email\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 95                                             \{\par
96 \par
97     {\cf19 try} \{\par
98 \par
99         {\cf19 if} (checkUsuario(novo_email)) {\cf19 throw} std::logic_error({\cf22 "O email fornecido ja esta em uso"});\par
100 \par
101         std::istringstream iss(*novo_email);\par
102         std::string usuario, dominio;\par
103 \par
105         std::getline(iss, usuario, {\cf23 '@'});\par
106         std::getline(iss, dominio);\par
107 \par
109         {\cf19 if} (usuario == {\cf22 ""} || dominio == {\cf22 ""}) \{\par
110         \par
111             {\cf19 throw} std::invalid_argument({\cf22 "Email incompleto"}); \par
112         \}\par
113 \par
115         {\cf19 if} (dominio != {\cf22 "gmail.com"} && dominio != {\cf22 "yahoo.com"} && dominio != {\cf22 "outlook.com"}) \{\par
116 \par
117             {\cf19 throw} std::invalid_argument({\cf22 "Dominio do email invalido"});\par
118         \}\par
119 \par
120         this->_email = *novo_email; \par
121     \}\par
122     {\cf19 catch} ({\cf17 const} std::invalid_argument& e) \{\par
123         std::cout << {\cf22 "Email deve estar no formato: usuario@dominio.com"} << std::endl\par
124         << {\cf22 "Dominios aceitos:"} << std::endl\par
125         << {\cf22 "    - 'gmail.com'"} << std::endl\par
126         << {\cf22 "    - 'yahoo.com'"} << std::endl\par
127         << {\cf22 "    - 'outlook.com'"} << std::endl;\par
128 \par
129         handleExcecao(e);\par
130     \}\par
131     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
132 \par
133         handleExcecao(e);\par
134     \}\par
135 \}\par
}
}
{\xe \v setIdade\:Usuario}
{\xe \v Usuario\:setIdade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Usuario::setIdade (std::string *  {\i idade})}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a idade de um usuario. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idade} \cell }{A nova idade \par
 \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Idade minima\par
< Idade maxima \par
Verifica se a idade eh valida\par
< Atribui a nova idade\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 63                                             \{\par
64 \par
65     {\cf19 try} \{\par
66 \par
67         {\cf17 const} {\cf18 unsigned} MIN_IDADE = 1; \par
68         {\cf17 const} {\cf18 unsigned} MAX_IDADE = 150; \par
69         \par
70         std::istringstream iss(*nova_idade);\par
71         std::string idade_string;\par
72 \par
73         std::getline(iss, idade_string, {\cf23 ' '});\par
74 \par
75         {\cf18 int} idade = std::stoi(idade_string);\par
76 \par
78         {\cf19 if} (idade > MIN_IDADE && idade < MAX_IDADE) \{\par
79 \par
80             this->_idade = idade_string; \par
81         \}\par
82         {\cf19 else} \{\par
83 \par
84             {\cf19 throw} std::invalid_argument({\cf22 "Idade invalida"});\par
85         \}\par
86     \} \par
87     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
88         \par
89         std::cout << {\cf22 "Insira uma idade valida. (Formato: x anos)"} << std::endl;\par
90         \par
91         handleExcecao(e);\par
92     \}    \par
93 \}\par
}
}
{\xe \v setNome\:Usuario}
{\xe \v Usuario\:setNome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Usuario::setNome (std::string  {\i nome}, std::string  {\i sobrenome})}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o nome e sobrenome de um usuario. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome} \cell }{O nome do usuario\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sobrenome} \cell }{O sobrenome do usuario \par
 \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Limite de caracteres\par
Verifica se o nome eh valido\par
< Atribui o novo nome\par
Verifica se o sobrenome eh valido\par
< Atribui o novo sobrenome\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                                                                    \{\par
30 \par
31     {\cf19 try} \{\par
32 \par
33         {\cf17 const} {\cf18 size_t} MAX_CARACTERES = 40; \par
34 \par
36         {\cf19 if} (!novo_nome.length() >= MAX_CARACTERES || !(novo_nome.empty())) \{\par
37 \par
38             this->_nome = novo_nome; \par
39         \}\par
40         {\cf19 else} \{\par
41 \par
42             {\cf19 throw} std::invalid_argument({\cf22 "Nome invalido"});\par
43         \}\par
44         \par
46         {\cf19 if} (!novo_sobrenome.length() >= MAX_CARACTERES || !(novo_sobrenome.empty())) \{\par
47 \par
48             this->_nome = novo_sobrenome; \par
49         \}\par
50         {\cf19 else} \{\par
51 \par
52             {\cf19 throw} std::invalid_argument({\cf22 "Nome invalido"});\par
53         \}        \par
54     \} \par
55     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
56         \par
57         std::cout << {\cf22 "O nome e sobrenome devem possuir entre 1 e 50 caracteres"} << std::endl;\par
58         \par
59         handleExcecao(e);\par
60     \}\par
61 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Usuario/{\b Usuario.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Usuario/{\b Usuario.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe UsuarioMenu\par \pard\plain 
{\tc\tcl2 \v UsuarioMenu}
{\xe \v UsuarioMenu}
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\par
{
{\f2 #include <UsuarioMenu.hpp>}}\par
Diagrama de hierarquia da classe UsuarioMenu:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_usuario_menu.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UsuarioMenu} (std::string *login_nome, std::string *login_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu do usuario. \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PrimeiroMenu} * {\b next} (unsigned option) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b PrimeiroMenu}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PrimeiroMenu} ()=default\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getUsuario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsuario} (std::string user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string novoTitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubtitulo} (std::string novoSubtitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOpcoes} (std::vector< std::string > novasOpcoes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderizar} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v UsuarioMenu\:UsuarioMenu}
{\xe \v UsuarioMenu\:UsuarioMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UsuarioMenu::UsuarioMenu (std::string *  {\i login_nome}, std::string *  {\i login_email})}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu do usuario. \par
 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Imprimindo o calendario da semana\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                                                                     \{\par
15   \par
16   setTitulo({\cf22 "Que bom ter voce de volta, "} + *user_email + {\cf22 "!"});\par
17   setSubtitulo({\cf22 "Calendario da semana:"});\par
18   setOpcoes(\{{\cf22 "1 --> Lembretes"}, {\cf22 "2 --> Compromissos"}, {\cf22 "3 --> Tarefas"}\});\par
19   setUsuario(*user_email);\par
20 \par
21   Calendario user_calendario;\par
22 \par
23   {\cf20 // Pega a data atual do computador do usuario}\par
24   std::time_t t = std::time({\cf17 nullptr});\par
25   std::tm* now = std::localtime(&t);\par
26 \par
27   {\cf20 // Transforma em uma string no formato: DD/MM/AAAA}\par
28   std::string dia = STRING(now->tm_mday);\par
29   dia += {\cf23 '/'};\par
30   dia += STRING(now->tm_mon + 1);\par
31   dia += {\cf23 '/'};\par
32   dia += STRING(now->tm_year + 1900);\par
33 \par
34   user_calendario.imprimirCalendario(dia); \par
35 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v next\:UsuarioMenu}
{\xe \v UsuarioMenu\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PrimeiroMenu} * UsuarioMenu::next (unsigned  {\i option}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O proximo menu que o usuario escolheu. \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
vai para o menu dos lembretes (a criar) conferir se o parametro \'E9 o usu\'E1rio mesmo\par
vai para o menu dos Compromissos (a criar) conferir se o parametro \'E9 o usu\'E1rio mesmo\par
vai para o menu das Tarefas (a criar) conferir se o parametro \'E9 o usu\'E1rio mesmo\par
}{
Implementa {\b PrimeiroMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                                \{\par
38 \par
39   {\cf19 switch} (option) \{\par
40     {\cf19 case} 1: \{\par
41 \par
42       std::cout << std::endl << {\cf22 "Aqui estao seus lembretes salvos: "} << std::endl; \par
43       \par
44       ImprimirLembretes::verLembretes(&getUsuario());\par
45       \par
46       {\cf19 return} {\cf17 new} LembreteMenu(&getUsuario());\par
49     \}\par
50     {\cf19 case} 2: \{\par
51 \par
52       std::cout << std::endl << {\cf22 "Aqui estao seus compromissos salvos: "} << std::endl;\par
53       \par
54       ImprimirCompromissos::verCompromissos(&getUsuario());\par
55       \par
56       {\cf19 return} {\cf17 new} CompromissoMenu(&getUsuario());\par
59     \}\par
60     {\cf19 case} 3: \{\par
61 \par
62       std::cout << std::endl << {\cf22 "Aqui estao suas tarefas salvas: "} << std::endl;\par
63       \par
64       ImprimirTarefas::verTarefas(&getUsuario());\par
65 \par
66       {\cf19 return} {\cf17 new} TarefaMenu(&getUsuario());\par
69     \}\par
70   \}\par
71 \par
72   {\cf20 // TODO: pr\'F3ximo menu}\par
73   {\cf19 return} {\cf17 nullptr};\par
74 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Menu/{\b UsuarioMenu.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AgendaPDS2/Menu/{\b UsuarioMenu.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Calendario/Calendario.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Calendario/Calendario.cpp}
{\xe \v AgendaPDS2/Calendario/Calendario.cpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Calendario.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRING}(num)\~ #num\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v STRING\:Calendario.cpp}
{\xe \v Calendario.cpp\:STRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRING( num)\~ #num}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Calendario/Calendario.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Calendario/Calendario.hpp}
{\xe \v AgendaPDS2/Calendario/Calendario.hpp}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../Tarefa/Tarefa.hpp"}\par
{\f2 #include "../Lembrete/Lembrete.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <vector>}\par
{\f2 #include <string>}\par
{\f2 #include <map>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Calendario}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Calendario.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Calendario/Calendario.hpp}
{\xe \v AgendaPDS2/Calendario/Calendario.hpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 \par
3 {\cf21 #include "../Tarefa/Tarefa.hpp"}\par
4 {\cf21 #include "../Lembrete/Lembrete.hpp"}\par
5 \par
6 {\cf21 #include <iostream>}\par
7 {\cf21 #include <vector>}\par
8 {\cf21 #include <string>}\par
9 {\cf21 #include <map>}\par
10 \par
11 {\cf17 class }Calendario \{\par
12 {\cf17 public}:\par
18     {\cf18 void} inserir(std::string key, std::vector<std::string> value);\par
19 \par
23     {\cf18 unsigned} size_mapaHorario();\par
24 \par
30     {\cf18 void} inserir(std::string key); \par
31 \par
35     {\cf18 unsigned} size_agenda();\par
36 \par
40     {\cf18 void} imprimirCalendario(std::string data);\par
41 \par
42 {\cf17 private}:\par
43     std::map<std::string, std::vector<std::string>> _mapaHorario; \par
44     std::map<std::string, std::map<std::string, std::vector<std::string>>> _agenda; \par
45 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Calendario/teste_Calendario.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Calendario/teste_Calendario.cpp}
{\xe \v AgendaPDS2/Calendario/teste_Calendario.cpp}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include "Calendario.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Mapeando atividades para o calend\'E1rio")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN\:teste_Calendario.cpp}
{\xe \v teste_Calendario.cpp\:DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:teste_Calendario.cpp}
{\xe \v teste_Calendario.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Mapeando atividades para o calend\'E1rio" )}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                                     \{\par
7     Calendario c;\par
8 \par
9     SUBCASE({\cf22 "Mapeando atividades para um hor\'E1rio"}) \{\par
10         c.inserir({\cf22 "10:00:00"}, \{{\cf22 "Estudar para a prova"}\});\par
11         c.inserir({\cf22 "15:00:00"}, \{{\cf22 "Ir para faculdade"}, {\cf22 "Terminar o trabalho"}\});\par
12 \par
13         CHECK_EQ(c.size_mapaHorario(), 2);\par
14 \par
15         c.inserir({\cf22 "26/11/2023"});\par
16 \par
17         CHECK_EQ(c.size_mapaHorario(), 0);\par
18     \}\par
19 \par
20     SUBCASE({\cf22 "Mapeando hor\'E1rios para um dia"}) \{\par
21         c.inserir({\cf22 "10:00:00"}, \{{\cf22 "Estudar para a prova"}\});\par
22 \par
23         c.inserir({\cf22 "26/11/2023"});\par
24         CHECK_EQ(c.size_agenda(), 1);\par
25 \par
26         c.inserir({\cf22 "15:00:00"}, \{{\cf22 "Ir para faculdade"}, {\cf22 "Terminar o trabalho"}\});\par
27 \par
28         c.inserir({\cf22 "03/12/2023"});\par
29         CHECK_EQ(c.size_agenda(), 2);\par
30     \}\par
31 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Exce\'E7oes/Exce\'E7\'F5es.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Exce\'E7oes/Exce\'E7\'F5es.cpp}
{\xe \v AgendaPDS2/Exce\'E7oes/Exce\'E7\'F5es.cpp}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Exce\'E7\'F5es.hpp"}\par
{\f2 #include <iostream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleExcecao} (const std::exception &e)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lida com as exce\'E7oes geradas pelo programa. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v handleExcecao\:Exce\'E7\'F5es.cpp}
{\xe \v Exce\'E7\'F5es.cpp\:handleExcecao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handleExcecao (const std::exception &  {\i e})}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lida com as exce\'E7oes geradas pelo programa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i e} \cell }{Objeto da exce\'E7ao lan\'E7ado pelo codigo \par
 \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mensagem de erro a ser exibida em caso de excecao gerada\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                                           \{\par
6     \par
8     std::cerr << {\cf22 "Erro: "} << e.what() << std::endl;\par
9 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Exce\'E7oes/Exce\'E7\'F5es.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Exce\'E7oes/Exce\'E7\'F5es.hpp}
{\xe \v AgendaPDS2/Exce\'E7oes/Exce\'E7\'F5es.hpp}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdexcept>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleExcecao} (const std::exception &e)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lida com as exce\'E7oes geradas pelo programa. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v handleExcecao\:Exce\'E7\'F5es.hpp}
{\xe \v Exce\'E7\'F5es.hpp\:handleExcecao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handleExcecao (const std::exception &  {\i e})}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lida com as exce\'E7oes geradas pelo programa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i e} \cell }{Objeto da exce\'E7ao lan\'E7ado pelo codigo \par
 \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mensagem de erro a ser exibida em caso de excecao gerada\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                                           \{\par
6     \par
8     std::cerr << {\cf22 "Erro: "} << e.what() << std::endl;\par
9 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Exce\'E7\'F5es.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Exce\'E7oes/Exce\'E7\'F5es.hpp}
{\xe \v AgendaPDS2/Exce\'E7oes/Exce\'E7\'F5es.hpp}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 \par
3 {\cf21 #include <stdexcept>}\par
4 \par
8 {\cf18 void} handleExcecao({\cf17 const} std::exception& e);\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Lembrete/Lembrete.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Lembrete/Lembrete.cpp}
{\xe \v AgendaPDS2/Lembrete/Lembrete.cpp}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Lembrete.hpp"}\par
{\f2 #include "../Exce\'E7oes/Exce\'E7\'F5es.hpp"}\par
{\f2 #include <string>}\par
{\f2 #include <iostream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <chrono>}\par
{\f2 #include <ctime>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Lembrete/Lembrete.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Lembrete/Lembrete.hpp}
{\xe \v AgendaPDS2/Lembrete/Lembrete.hpp}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <unordered_map>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Lembrete}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListaLembrete}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ImprimirLembretes}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lembrete.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Lembrete/Lembrete.hpp}
{\xe \v AgendaPDS2/Lembrete/Lembrete.hpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 \par
3 {\cf21 #include <string>}\par
4 {\cf21 #include <unordered_map>}\par
5    \par
6 {\cf17 class }Lembrete \{\par
7 {\cf17 public}:\par
8     Lembrete({\cf17 const} std::string& horario, {\cf17 const} std::string& mensagem, {\cf17 const} std::string& data);\par
9 \par
13     std::string getData() {\cf17 const};\par
14     \par
18     std::string getHorario() {\cf17 const};\par
19 \par
23     std::string getMensagem() {\cf17 const};\par
24     \par
30     {\cf18 void} setData({\cf17 const} std::string& novaData);\par
31 \par
37     {\cf18 void} setHorario({\cf17 const} std::string& novoHorario);\par
38 \par
42     {\cf18 void} setMensagem(std::string texto);\par
43     \par
44 {\cf17 private}:\par
45     std::string _data; \par
46     std::string _horario; \par
47     std::string _mensagem; \par
48 \};\par
49 \par
50 {\cf17 class }ListaLembrete \{\par
51 {\cf17 public}:\par
57     {\cf17 static} {\cf18 void} adicionarLembrete(Lembrete* lembrete, std::string* user_email);\par
58     \par
64     {\cf17 static} {\cf18 void} removerLembrete(Lembrete* lembrete, std::string* user_email);\par
65 \par
69     {\cf17 static} Lembrete* buscarLembrete(std::string* mensagem);\par
70 \par
74     {\cf18 unsigned} tamanho();\par
75     \par
76 {\cf17 protected}:\par
77     {\cf17 static} std::unordered_map<std::string, Lembrete*> _listadeLembretes; \par
78 \};\par
79 \par
80 {\cf17 class }ImprimirLembretes : {\cf17 public} ListaLembrete \{\par
81 {\cf17 public}:\par
85     {\cf17 static} {\cf18 void} verLembretes(std::string* user_email);\par
86 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Lembrete/teste_Lembrete.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Lembrete/teste_Lembrete.cpp}
{\xe \v AgendaPDS2/Lembrete/teste_Lembrete.cpp}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include "Lembrete.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Criando uma inst\'E2ncia de Lembrete")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Alterando Um lembrete")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN\:teste_Lembrete.cpp}
{\xe \v teste_Lembrete.cpp\:DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:teste_Lembrete.cpp}
{\xe \v teste_Lembrete.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Alterando Um lembrete" )}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27                                    \{\par
28     Lembrete l({\cf22 "09:40:00"}, {\cf22 "Consulta com o m\'E9dico"}, {\cf22 "30/11/2023"});\par
29 \par
30     l.setData({\cf22 "5/12/2023"});\par
31     l.setHorario({\cf22 "17:00:00"});\par
32     l.setMensagem({\cf22 "Reuni\'E3o"});\par
33     CHECK_EQ(l.getData(), {\cf22 "5/12/2023"});\par
34     CHECK_EQ(l.getHorario(), {\cf22 "17:00:00"});\par
35     CHECK_EQ(l.getMensagem(), {\cf22 "Reuni\'E3o"});\par
36 \}\par
}
}
{\xe \v TEST_CASE\:teste_Lembrete.cpp}
{\xe \v teste_Lembrete.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Criando uma inst\'E2ncia de Lembrete" )}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                                 \{\par
7     Lembrete l({\cf22 "09:40:00"}, {\cf22 "Consulta com o m\'E9dico"}, {\cf22 "30/11/2023"});\par
8 \par
9     SUBCASE({\cf22 "Verificando os campos do objeto"}) \{\par
10         CHECK_EQ(l.getData(), {\cf22 "30/11/2023"});\par
11         CHECK_EQ(l.getHorario(), {\cf22 "09:40:00"});\par
12         CHECK_EQ(l.getMensagem(), {\cf22 "Consulta com o m\'E9dico"});\par
13     \}\par
14 \par
15     SUBCASE({\cf22 "Salvando o objeto na lista de lembretes"}) \{\par
16         ListaLembrete xs;\par
17         std::string str = {\cf22 "pedroperreira31@gmail.com"};\par
18 \par
19         xs.adicionarLembrete(&l, &str);\par
20         CHECK_EQ(xs.tamanho(), 1);\par
21 \par
22         xs.removerLembrete(&l, &str);\par
23         CHECK_EQ(xs.tamanho(), 0);\par
24     \}\par
25 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Menu/CompromissoMenu.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/CompromissoMenu.hpp}
{\xe \v AgendaPDS2/Menu/CompromissoMenu.hpp}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Menu.hpp"}\par
{\f2 #include "UsuarioMenu.hpp"}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CompromissoMenu}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CompromissoMenu.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/CompromissoMenu.hpp}
{\xe \v AgendaPDS2/Menu/CompromissoMenu.hpp}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 \par
3 {\cf21 #include "Menu.hpp"}\par
4 {\cf21 #include "UsuarioMenu.hpp"}\par
5 \par
6 {\cf21 #include <string>}\par
7 \par
8 {\cf17 class }CompromissoMenu : {\cf17 public} PrimeiroMenu \{\par
9 {\cf17 public}:\par
11   CompromissoMenu(std::string *login_email);\par
12 \par
16   PrimeiroMenu *next({\cf18 unsigned} option) {\cf17 override};\par
17 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Menu/LembreteMenu.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/LembreteMenu.cpp}
{\xe \v AgendaPDS2/Menu/LembreteMenu.cpp}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../Lembrete/Lembrete.hpp"}\par
{\f2 #include "UsuarioMenu.hpp"}\par
{\f2 #include "LembreteMenu.hpp"}\par
{\f2 #include "CompromissoMenu.hpp"}\par
{\f2 #include "TarefaMenu.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <string>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Menu/LembreteMenu.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/LembreteMenu.hpp}
{\xe \v AgendaPDS2/Menu/LembreteMenu.hpp}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Menu.hpp"}\par
{\f2 #include "UsuarioMenu.hpp"}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LembreteMenu}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LembreteMenu.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/LembreteMenu.hpp}
{\xe \v AgendaPDS2/Menu/LembreteMenu.hpp}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 \par
3 {\cf21 #include "Menu.hpp"}\par
4 {\cf21 #include "UsuarioMenu.hpp"}\par
5 \par
6 {\cf21 #include <string>}\par
7 \par
8 {\cf17 class }LembreteMenu : {\cf17 public} PrimeiroMenu \{\par
9 {\cf17 public}:\par
11   LembreteMenu(std::string *login_email);\par
12 \par
16   PrimeiroMenu *next({\cf18 unsigned} option) {\cf17 override};\par
17 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Menu/LoginMenu.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/LoginMenu.cpp}
{\xe \v AgendaPDS2/Menu/LoginMenu.cpp}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Menu.hpp"}\par
{\f2 #include "LoginMenu.hpp"}\par
{\f2 #include "UsuarioMenu.hpp"}\par
{\f2 #include "../Usuario/Usuario.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <string>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Menu/LoginMenu.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/LoginMenu.hpp}
{\xe \v AgendaPDS2/Menu/LoginMenu.hpp}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Menu.hpp"}\par
{\f2 #include "UsuarioMenu.hpp"}\par
{\f2 #include "../Usuario/Usuario.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MenuLogin}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LoginMenu.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/LoginMenu.hpp}
{\xe \v AgendaPDS2/Menu/LoginMenu.hpp}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 \par
3 {\cf21 #include "Menu.hpp"}\par
4 {\cf21 #include "UsuarioMenu.hpp"}\par
5 {\cf21 #include "../Usuario/Usuario.hpp"}\par
6 \par
7 {\cf17 class }MenuLogin : {\cf17 public} PrimeiroMenu \{\par
8 {\cf17 public}:\par
10   MenuLogin();\par
11 \par
15   PrimeiroMenu *next({\cf18 unsigned} opcao) {\cf17 override};\par
16 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Menu/Menu.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/Menu.cpp}
{\xe \v AgendaPDS2/Menu/Menu.cpp}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Menu.hpp"}\par
{\f2 #include <iostream>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Menu/Menu.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/Menu.hpp}
{\xe \v AgendaPDS2/Menu/Menu.hpp}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PrimeiroMenu}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Menu.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/Menu.hpp}
{\xe \v AgendaPDS2/Menu/Menu.hpp}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 \par
3 {\cf21 #include <string>}\par
4 {\cf21 #include <vector>}\par
5 \par
6 {\cf17 class }PrimeiroMenu \{\par
7 {\cf17 public}:\par
9   {\cf17 virtual} ~PrimeiroMenu() = {\cf19 default};\par
10 \par
12   {\cf17 virtual} PrimeiroMenu *next({\cf18 unsigned} opcao) = 0;\par
13 \par
17   std::string getUsuario() {\cf17 const};\par
18 \par
22   {\cf18 void} setUsuario(std::string user_email);\par
23 \par
27   {\cf18 void} setTitulo(std::string novoTitulo);\par
28 \par
32   {\cf18 void} setSubtitulo(std::string novoSubtitulo);\par
33 \par
37   {\cf18 void} setOpcoes(std::vector<std::string> novasOpcoes);\par
38 \par
40   {\cf17 virtual} {\cf18 void} renderizar() {\cf17 const};\par
41   \par
42 {\cf17 private}:\par
43   std::string _user_email; \par
44   std::string _titulo = {\cf22 "Gerenciador de Tarefas e Compromissos "}; \par
45   std::string _subtitulo = {\cf22 "Escolha uma op\'E7\'E3o:"}; \par
46   std::vector<std::string> _opcoes = \{{\cf22 "1 --> Entrar"}, {\cf22 "2 --> Sair"}\}; \par
47   PrimeiroMenu *_anterior; \par
48 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Menu/TarefaMenu.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/TarefaMenu.hpp}
{\xe \v AgendaPDS2/Menu/TarefaMenu.hpp}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Menu.hpp"}\par
{\f2 #include "UsuarioMenu.hpp"}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TarefaMenu}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TarefaMenu.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/TarefaMenu.hpp}
{\xe \v AgendaPDS2/Menu/TarefaMenu.hpp}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 \par
3 {\cf21 #include "Menu.hpp"}\par
4 {\cf21 #include "UsuarioMenu.hpp"}\par
5 \par
6 {\cf21 #include <string>}\par
7 \par
8 {\cf17 class }TarefaMenu : {\cf17 public} PrimeiroMenu \{\par
9 {\cf17 public}:\par
11   TarefaMenu(std::string *login_email);\par
12 \par
16   PrimeiroMenu *next({\cf18 unsigned} option) {\cf17 override};\par
17 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Menu/UsuarioMenu.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/UsuarioMenu.cpp}
{\xe \v AgendaPDS2/Menu/UsuarioMenu.cpp}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "UsuarioMenu.hpp"}\par
{\f2 #include "LembreteMenu.hpp"}\par
{\f2 #include "CompromissoMenu.hpp"}\par
{\f2 #include "TarefaMenu.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <ctime>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRING}(num)\~ #num\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v STRING\:UsuarioMenu.cpp}
{\xe \v UsuarioMenu.cpp\:STRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRING( num)\~ #num}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Menu/UsuarioMenu.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/UsuarioMenu.hpp}
{\xe \v AgendaPDS2/Menu/UsuarioMenu.hpp}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "LoginMenu.hpp"}\par
{\f2 #include "Menu.hpp"}\par
{\f2 #include "../Usuario/Usuario.hpp"}\par
{\f2 #include "../Tarefa/Tarefa.hpp"}\par
{\f2 #include "../Lembrete/Lembrete.hpp"}\par
{\f2 #include "../Calendario/Calendario.hpp"}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UsuarioMenu}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UsuarioMenu.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Menu/UsuarioMenu.hpp}
{\xe \v AgendaPDS2/Menu/UsuarioMenu.hpp}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 \par
3 {\cf21 #include "LoginMenu.hpp"}\par
4 {\cf21 #include "Menu.hpp"}\par
5 {\cf21 #include "../Usuario/Usuario.hpp"}\par
6 {\cf21 #include "../Tarefa/Tarefa.hpp"}\par
7 {\cf21 #include "../Lembrete/Lembrete.hpp"}\par
8 {\cf21 #include "../Calendario/Calendario.hpp"}\par
9 \par
10 {\cf21 #include <string>}\par
11 \par
12 {\cf17 class }UsuarioMenu : {\cf17 public} PrimeiroMenu \{\par
13 {\cf17 public}:\par
15   UsuarioMenu(std::string *login_nome, std::string *login_email);\par
16 \par
20   PrimeiroMenu *next({\cf18 unsigned} option) {\cf17 override};\par
21 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Notifica\'E7ao/Notifica\'E7\'E3o.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Notifica\'E7ao/Notifica\'E7\'E3o.cpp}
{\xe \v AgendaPDS2/Notifica\'E7ao/Notifica\'E7\'E3o.cpp}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Notifica\'E7\'E3o.hpp"}\par
{\f2 #include <iostream>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Notifica\'E7ao/Notifica\'E7\'E3o.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Notifica\'E7ao/Notifica\'E7\'E3o.hpp}
{\xe \v AgendaPDS2/Notifica\'E7ao/Notifica\'E7\'E3o.hpp}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../Tarefa/Tarefa.hpp"}\par
{\f2 #include "../Lembrete/Lembrete.hpp"}\par
{\f2 #include <ctime>}\par
{\f2 #include <chrono>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Notificacao}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Notifica\'E7\'E3o.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Notifica\'E7ao/Notifica\'E7\'E3o.hpp}
{\xe \v AgendaPDS2/Notifica\'E7ao/Notifica\'E7\'E3o.hpp}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 \par
3 {\cf21 #include "../Tarefa/Tarefa.hpp"}\par
4 {\cf21 #include "../Lembrete/Lembrete.hpp"}\par
5 \par
6 {\cf21 #include <ctime>}\par
7 {\cf21 #include <chrono>}\par
8 \par
9 {\cf17 class }Notificacao \{\par
10 {\cf17 public}:\par
11     Notificacao({\cf17 const} {\cf18 int} horaAntes, {\cf17 const} {\cf18 int} minAntes);\par
12     \par
16     {\cf18 void} notificar(Compromisso* compromisso);\par
17     \par
21     {\cf18 void} notificar(Lembrete* lembrete);\par
22 \par
24     {\cf18 void} ativarNotificacao();\par
25 \par
27     {\cf18 void} desativarNotificacao();\par
28 \par
32     {\cf18 bool} checkEstado();\par
33 \par
34 {\cf17 private}:\par
35     {\cf18 int} _minAntes; \par
36     {\cf18 int} _horaAntes; \par
37     {\cf18 bool} _estado; \par
38 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Notifica\'E7ao/teste_Notifica\'E7\'E3o.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Notifica\'E7ao/teste_Notifica\'E7\'E3o.cpp}
{\xe \v AgendaPDS2/Notifica\'E7ao/teste_Notifica\'E7\'E3o.cpp}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include "Notifica\'E7\'E3o.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Criando uma inst\'E2ncia de Notificacao")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN\:teste_Notifica\'E7\'E3o.cpp}
{\xe \v teste_Notifica\'E7\'E3o.cpp\:DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:teste_Notifica\'E7\'E3o.cpp}
{\xe \v teste_Notifica\'E7\'E3o.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Criando uma inst\'E2ncia de Notificacao" )}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                                    \{\par
7     Notificacao n(0, 10);\par
8 \par
9     SUBCASE({\cf22 "Desativando a notifica\'E7\'E3o"}) \{\par
10         CHECK(n.checkEstado());\par
11 \par
12         n.desativarNotificacao();\par
13         CHECK_FALSE(n.checkEstado());\par
14     \}\par
15 \par
16     SUBCASE({\cf22 "Ativando a notifica\'E7\'E3o"}) \{\par
17         n.desativarNotificacao();\par
18         CHECK_FALSE(n.checkEstado());\par
19 \par
20         n.ativarNotificacao();\par
21         CHECK(n.checkEstado());\par
22     \}\par
23 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/README.md\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/README.md}
{\xe \v AgendaPDS2/README.md}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Tarefa/Tarefa.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Tarefa/Tarefa.cpp}
{\xe \v AgendaPDS2/Tarefa/Tarefa.cpp}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../Tarefa/Tarefa.hpp"}\par
{\f2 #include "../Exce\'E7oes/Exce\'E7\'F5es.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <chrono>}\par
{\f2 #include <ctime>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b setCorPrioridade} (unsigned prioridade)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obtem a cor para imprimir de acordo com o nivel de prioridade. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v setCorPrioridade\:Tarefa.cpp}
{\xe \v Tarefa.cpp\:setCorPrioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string setCorPrioridade (unsigned  {\i prioridade})}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obtem a cor para imprimir de acordo com o nivel de prioridade. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prioridade 1: Verde, Prioridade 2: Amarelo, Prioridade 3: Vermelho\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prioridade} \cell }{A prioridade da tarefa ou compromisso\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String com o codigo da cor (em formata\'E7ao ANSI) \par
 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 358                                                 \{\par
359 \par
360     {\cf20 // Escolher a cor com base na prioridade}\par
361     std::string cor;\par
362         \par
363     {\cf19 switch} (prioridade) \{\par
364         {\cf19 case} 1:\par
365             cor = {\cf22 "\\033[38;2;29;247;25m"}; {\cf20 // Verde (prioridade 1)}\par
366             {\cf19 return} cor;\par
367 \par
368         {\cf19 case} 2:\par
369             cor = {\cf22 "\\033[38;2;247;228;25m"}; {\cf20 // Amarelo (prioridade 2)}\par
370             {\cf19 return} cor;\par
371 \par
372         {\cf19 case} 3:\par
373             cor = {\cf22 "\\033[38;2;247;25;25m"}; {\cf20 // Vermelho (prioridade 3)}\par
374             {\cf19 return} cor;\par
375 \par
376         {\cf19 default}:\par
377             cor = {\cf22 "\\033[0m"}; {\cf20 // Padr\'E3o (sem cor)}\par
378             {\cf19 return} cor;\par
379     \}\par
380 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Tarefa/Tarefa.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Tarefa/Tarefa.hpp}
{\xe \v AgendaPDS2/Tarefa/Tarefa.hpp}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <unordered_map>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tarefa}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Compromisso}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListaTarefa}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListaCompromisso}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ImprimirTarefas}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ImprimirCompromissos}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b setCorPrioridade} (unsigned prioridade)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obtem a cor para imprimir de acordo com o nivel de prioridade. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v setCorPrioridade\:Tarefa.hpp}
{\xe \v Tarefa.hpp\:setCorPrioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string setCorPrioridade (unsigned  {\i prioridade})}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obtem a cor para imprimir de acordo com o nivel de prioridade. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prioridade 1: Verde, Prioridade 2: Amarelo, Prioridade 3: Vermelho\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prioridade} \cell }{A prioridade da tarefa ou compromisso\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String com o codigo da cor (em formata\'E7ao ANSI) \par
 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 358                                                 \{\par
359 \par
360     {\cf20 // Escolher a cor com base na prioridade}\par
361     std::string cor;\par
362         \par
363     {\cf19 switch} (prioridade) \{\par
364         {\cf19 case} 1:\par
365             cor = {\cf22 "\\033[38;2;29;247;25m"}; {\cf20 // Verde (prioridade 1)}\par
366             {\cf19 return} cor;\par
367 \par
368         {\cf19 case} 2:\par
369             cor = {\cf22 "\\033[38;2;247;228;25m"}; {\cf20 // Amarelo (prioridade 2)}\par
370             {\cf19 return} cor;\par
371 \par
372         {\cf19 case} 3:\par
373             cor = {\cf22 "\\033[38;2;247;25;25m"}; {\cf20 // Vermelho (prioridade 3)}\par
374             {\cf19 return} cor;\par
375 \par
376         {\cf19 default}:\par
377             cor = {\cf22 "\\033[0m"}; {\cf20 // Padr\'E3o (sem cor)}\par
378             {\cf19 return} cor;\par
379     \}\par
380 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tarefa.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Tarefa/Tarefa.hpp}
{\xe \v AgendaPDS2/Tarefa/Tarefa.hpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 \par
3 {\cf21 #include <string>}\par
4 {\cf21 #include <unordered_map>}\par
5 \par
13 std::string setCorPrioridade({\cf18 unsigned} prioridade);\par
14 \par
15 {\cf17 class }Tarefa \{\par
16 {\cf17 public}:\par
17   Tarefa(std::string& titulo, std::string& descricao, std::string& data, {\cf18 unsigned} prioridade, std::string& estado);\par
18     \par
22   std::string getTitulo() {\cf17 const};\par
23 \par
27   std::string getDescricao() {\cf17 const};\par
28 \par
32   std::string getData() {\cf17 const};\par
33 \par
37   {\cf18 unsigned} getPrioridade() {\cf17 const};\par
38     \par
42   std::string getEstado() {\cf17 const}; \par
43   \par
47   {\cf18 void} setTitulo({\cf17 const} std::string& novoTitulo);\par
48 \par
52   {\cf18 void} setDescricao({\cf17 const} std::string& novaDescricao);\par
53 \par
59   {\cf18 void} setData({\cf17 const} std::string& novaData);\par
60 \par
67   {\cf18 void} setPrioridade({\cf18 unsigned} novaPrioridade);\par
68 \par
74   {\cf18 void} setEstado({\cf17 const} std::string& novoEstado);\par
75    \par
76 {\cf17 private}:\par
77   std::string _titulo; \par
78   std::string _descricao; \par
79   std::string _data; \par
80   {\cf18 unsigned} _prioridade; \par
81   std::string _estado; \par
82  \};\par
83 \par
84 {\cf17 class }Compromisso : {\cf17 public} Tarefa \{\par
85 {\cf17 public}:\par
86   Compromisso(std::string& data, std::string& local,std::string& titulo, std::string& descricao, std::string& horario, std::string& estado, {\cf18 unsigned} prioridade);\par
87 \par
91   std::string getCor() {\cf17 const};\par
92 \par
96   std::string getLocal() {\cf17 const};\par
97 \par
101   std::string getHorario() {\cf17 const};\par
102 \par
110   {\cf18 void} setCor({\cf17 const} std::string& novaCor);\par
111 \par
115   {\cf18 void} setLocal({\cf17 const} std::string& novoLocal);\par
116 \par
122   {\cf18 void} setHorario({\cf17 const} std::string& novoHorario);\par
123 \par
124 {\cf17 private}:\par
125   std::string _cor; \par
126   std::string _local; \par
127   std::string _horario; \par
128 \};\par
129 \par
130 {\cf17 class }ListaTarefa \{\par
131 {\cf17 public}:\par
137   {\cf17 static} {\cf18 void} adicionarTarefa(Tarefa* tarefa, std::string* user_email);\par
138 \par
144   {\cf17 static} {\cf18 void} removerTarefa(Tarefa* tarefa, std::string* user_email);\par
145 \par
149   {\cf18 unsigned} tamanho();\par
150   \par
151 {\cf17 protected}:\par
152   {\cf17 static} std::unordered_map<std::string, Tarefa*> _listadeTarefa; \par
153 \};\par
154 \par
155 {\cf17 class }ListaCompromisso \{\par
156 {\cf17 public}:\par
162   {\cf17 static} {\cf18 void} adicionarCompromisso(Compromisso* compromisso, std::string* user_email);\par
163 \par
169   {\cf17 static} {\cf18 void} removerCompromisso(Compromisso* compromisso, std::string* user_email);\par
170 \par
174   {\cf18 unsigned} tamanho();\par
175 \par
176 {\cf17 protected}:\par
177   {\cf17 static} std::unordered_map<std::string, Compromisso*> _listadeCompromisso; \par
178 \};\par
179 \par
180 {\cf17 class }ImprimirTarefas : {\cf17 public} ListaTarefa \{\par
181 {\cf17 public}:\par
185   {\cf17 static} {\cf18 void} verTarefas(std::string* user_email);\par
186 \};\par
187 \par
188 {\cf17 class }ImprimirCompromissos : {\cf17 public} ListaCompromisso \{\par
189 {\cf17 public}:\par
193   {\cf17 static} {\cf18 void} verCompromissos(std::string* user_email);\par
194 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Tarefa/teste_Tarefa.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Tarefa/teste_Tarefa.cpp}
{\xe \v AgendaPDS2/Tarefa/teste_Tarefa.cpp}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include "Tarefa.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Criando uma inst\'E2ncia de Tarefa")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Alterando uma Tarefa")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Criando uma inst\'E2ncia de Compromisso")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Alterando um Compromisso")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN\:teste_Tarefa.cpp}
{\xe \v teste_Tarefa.cpp\:DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:teste_Tarefa.cpp}
{\xe \v teste_Tarefa.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Alterando um Compromisso" )}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82                                       \{\par
83     std::string str1 = {\cf22 "24/11/2023"};\par
84     std::string str2 = {\cf22 "UFMG"};\par
85     std::string str3 = {\cf22 "Reuni\'E3o"};\par
86     std::string str4 = {\cf22 "Reuni\'E3o com o grupo para terminar o trabalho"};\par
87     std::string str5 = {\cf22 "16:30:00"};\par
88     std::string str6 = {\cf22 "n\'E3o feito"};\par
89 \par
90     Compromisso c(str1, str2, str3, str4, str5, str6, 2);\par
91 \par
92     c.setCor({\cf22 "azul"});\par
93     c.setLocal({\cf22 "CEU"});\par
94     c.setHorario({\cf22 "10:00:00"});\par
95 \par
96     CHECK_EQ(c.getCor(), {\cf22 "\\033[38;2;25;84;247m"});\par
97     CHECK_EQ(c.getLocal(), {\cf22 "CEU"});\par
98     CHECK_EQ(c.getHorario(), {\cf22 "10:00:00"});\par
99 \}\par
}
}
{\xe \v TEST_CASE\:teste_Tarefa.cpp}
{\xe \v teste_Tarefa.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Alterando uma Tarefa" )}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34                                   \{\par
35     std::string str1 = {\cf22 "Estudar"};\par
36     std::string str2 = {\cf22 "Estudar para a prova de PDS2"};\par
37     std::string str3 = {\cf22 "29/11/2023"};\par
38     std::string str4 = {\cf22 "n\'E3o feito"};\par
39 \par
40     Tarefa t(str1, str2, str3, 2, str4);\par
41 \par
42     t.setTitulo({\cf22 "VPLs"});\par
43     t.setDescricao({\cf22 "Terminar de fazer as VPLs"});\par
44     t.setData({\cf22 "03/12/2023"});\par
45     t.setPrioridade(2);\par
46     t.setEstado({\cf22 "em progresso"});\par
47 \par
48     CHECK_EQ(t.getTitulo(), {\cf22 "VPLs"});\par
49     CHECK_EQ(t.getDescricao(), {\cf22 "Terminar de fazer as VPLs"});\par
50     CHECK_EQ(t.getData(), {\cf22 "03/12/2023"});\par
51     CHECK_EQ(t.getPrioridade(), 2);\par
52     CHECK_EQ(t.getEstado(), {\cf22 "em progresso"});\par
53 \}\par
}
}
{\xe \v TEST_CASE\:teste_Tarefa.cpp}
{\xe \v teste_Tarefa.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Criando uma inst\'E2ncia de Compromisso" )}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 55                                                    \{\par
56     std::string str1 = {\cf22 "24/11/2023"};\par
57     std::string str2 = {\cf22 "UFMG"};\par
58     std::string str3 = {\cf22 "Reuni\'E3o"};\par
59     std::string str4 = {\cf22 "Reuni\'E3o com o grupo para terminar o trabalho"};\par
60     std::string str5 = {\cf22 "16:30:00"};\par
61     std::string str6 = {\cf22 "n\'E3o feito"};\par
62 \par
63     Compromisso c(str1, str2, str3, str4, str5, str6, 2);\par
64     \par
65     SUBCASE({\cf22 "Verificando os campos do objeto"}) \{\par
66         CHECK_EQ(c.getLocal(), {\cf22 "UFMG"});\par
67         CHECK_EQ(c.getHorario(), {\cf22 "16:30:00"});\par
68     \}\par
69 \par
70     SUBCASE({\cf22 "Salvando o objeto na lista de compromissos"}) \{\par
71         ListaCompromisso xs;\par
72         std::string str = {\cf22 "pedroperreira31@gmail.com"};\par
73 \par
74         xs.adicionarCompromisso(&c, &str);\par
75         CHECK_EQ(xs.tamanho(), 1);\par
76 \par
77         xs.removerCompromisso(&c, &str);\par
78         CHECK_EQ(xs.tamanho(), 0);\par
79     \}\par
80 \}\par
}
}
{\xe \v TEST_CASE\:teste_Tarefa.cpp}
{\xe \v teste_Tarefa.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Criando uma inst\'E2ncia de Tarefa" )}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                               \{\par
7     std::string str1 = {\cf22 "Estudar"};\par
8     std::string str2 = {\cf22 "Estudar para a prova de PDS2"};\par
9     std::string str3 = {\cf22 "29/11/2023"};\par
10     std::string str4 = {\cf22 "n\'E3o feito"};\par
11 \par
12     Tarefa t(str1, str2, str3, 2, str4);\par
13 \par
14     SUBCASE({\cf22 "Verificando os campos do objeto"}) \{\par
15         CHECK_EQ(t.getTitulo(), {\cf22 "Estudar"});\par
16         CHECK_EQ(t.getDescricao(), {\cf22 "Estudar para a prova de PDS2 do dia 30/11"});\par
17         CHECK_EQ(t.getData(), {\cf22 "20/11/2023"});\par
18         CHECK_EQ(t.getPrioridade(), 3);\par
19         CHECK_EQ(t.getEstado(), {\cf22 "n\'E3o feito"});\par
20     \}\par
21 \par
22     SUBCASE({\cf22 "Salvando o objeto na lista de tarefas"}) \{\par
23         ListaTarefa xs;\par
24         std::string str = {\cf22 "pedroperreira31@gmail.com"};\par
25 \par
26         xs.adicionarTarefa(&t, &str);\par
27         CHECK_EQ(xs.tamanho(), 1);\par
28 \par
29         xs.removerTarefa(&t, &str);\par
30         CHECK_EQ(xs.tamanho(), 0);\par
31     \}\par
32 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Usuario/teste_Usuario.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Usuario/teste_Usuario.cpp}
{\xe \v AgendaPDS2/Usuario/teste_Usuario.cpp}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include "Usuario.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Criando uma inst\'E2ncia de Usuario")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Alterando um Usuario")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN\:teste_Usuario.cpp}
{\xe \v teste_Usuario.cpp\:DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:teste_Usuario.cpp}
{\xe \v teste_Usuario.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Alterando um Usuario" )}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                   \{\par
36     std::string str1 = {\cf22 "Pedro"};\par
37     std::string str2 = {\cf22 "Perreira"};\par
38     std::string str3 = {\cf22 "pedroperreira31@gmail.com"};\par
39     std::string str4 = {\cf22 "20"};\par
40 \par
41     Usuario p(str1, str2, str4, str3);\par
42 \par
43     std::string str5 = {\cf22 "18"};\par
44     std::string str6 = {\cf22 "gabrielsouza82@yahoo.com"};\par
45 \par
46     p.setNome({\cf22 "Gabriel"}, {\cf22 "Souza"});\par
47     p.setIdade(&str5);\par
48     p.setEmail(&str6);\par
49 \par
50     CHECK_EQ(p.getNome(), {\cf22 "Gabriel Souza"});\par
51     CHECK_EQ(p.getIdade(), {\cf22 "18"});\par
52     CHECK_EQ(p.getEmail(), {\cf22 "gabrielsouza82@yahoo.com"});\par
53 \}\par
}
}
{\xe \v TEST_CASE\:teste_Usuario.cpp}
{\xe \v teste_Usuario.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Criando uma inst\'E2ncia de Usuario" )}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6                                                \{\par
7     std::string str1 = {\cf22 "Pedro"};\par
8     std::string str2 = {\cf22 "Perreira"};\par
9     std::string str3 = {\cf22 "pedroperreira31@gmail.com"};\par
10     std::string str4 = {\cf22 "20"};\par
11 \par
12     Usuario p(str1, str2, str4, str3);\par
13 \par
14     SUBCASE({\cf22 "Verificando os campos do objeto"}) \{\par
15         CHECK_EQ(p.getNome(), {\cf22 "Pedro Perreira"});\par
16         CHECK_EQ(p.getIdade(), {\cf22 "20"});\par
17         CHECK_EQ(p.getEmail(), {\cf22 "pedroperreira31@gmail.com"});\par
18     \}\par
19 \par
20     SUBCASE({\cf22 "Salvando o objeto na lista de usuarios"}) \{\par
21         std::string str1 = {\cf22 "pedroperreira31@gmail.com"};\par
22         std::string str2 = {\cf22 "Jo\'E3o Bastos"};\par
23 \par
24         ListaUsuario xs;\par
25 \par
26         xs.adicionarUsuario(&p);\par
27         CHECK(xs.checkUsuario(&str1));\par
28         CHECK_FALSE(xs.checkUsuario(&str1, &str2));\par
29 \par
30         xs.removerUsuario(&p);\par
31         CHECK_FALSE(xs.checkUsuario(&str1));\par
32     \}\par
33 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Usuario/Usuario.cpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Usuario/Usuario.cpp}
{\xe \v AgendaPDS2/Usuario/Usuario.cpp}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Usuario.hpp"}\par
{\f2 #include "../Exce\'E7oes/Exce\'E7\'F5es.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <sstream>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo AgendaPDS2/Usuario/Usuario.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Usuario/Usuario.hpp}
{\xe \v AgendaPDS2/Usuario/Usuario.hpp}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <unordered_map>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Usuario}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListaUsuario}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Usuario.hpp\par \pard\plain 
{\tc\tcl2 \v AgendaPDS2/Usuario/Usuario.hpp}
{\xe \v AgendaPDS2/Usuario/Usuario.hpp}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 \par
3 {\cf21 #include <string>}\par
4 {\cf21 #include <unordered_map>}\par
5    \par
6 {\cf17 class }Usuario : {\cf17 public} ListaUsuario \{\par
7 {\cf17 public}:\par
8   Usuario(std::string& nome, std::string& sobrenome, std::string& idade, std::string& email);\par
9       \par
13   std::string getNome() {\cf17 const};\par
14 \par
18   std::string getIdade() {\cf17 const};\par
19     \par
23   std::string getEmail() {\cf17 const}; \par
24 \par
30   {\cf18 void} setNome(std::string nome, std::string sobrenome);\par
31 \par
35   {\cf18 void} setIdade(std::string* idade);\par
36       \par
40   {\cf18 void} setEmail(std::string* email);\par
41         \par
42 {\cf17 private}:\par
43   std::string _nome; \par
44   std::string _sobrenome; \par
45   std::string _idade; \par
46   std::string _email; \par
47 \};\par
48 \par
49 {\cf17 class }ListaUsuario \{\par
50 {\cf17 public}:\par
54   {\cf17 static} {\cf18 void} adicionarUsuario(Usuario* usuario);\par
55 \par
59   {\cf17 static} {\cf18 void} removerUsuario(Usuario* usuario);\par
60 \par
70   {\cf17 static} {\cf18 bool} checkUsuario(std::string* email);\par
71 \par
81   {\cf17 static} {\cf18 bool} checkUsuario(std::string* email, std::string* nome);\par
82 \par
83 {\cf17 private}:\par
84   {\cf17 static} std::unordered_map<std::string, Usuario> _listadeusuario; \par
85 \};  \par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par 
\pard\plain 
{\tc \v Sum\'E1rio}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
