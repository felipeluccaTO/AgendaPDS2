{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Documenta\'E7\'E3o AgendaPDS2  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
2.0 \par
}}Documenta\'E7\'E3o AgendaPDS2}
{\comment Gerado por doxygen 1.9.8.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Documenta\'E7\'E3o AgendaPDS2}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 2.0\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\par \pard\plain 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
AgendaPDS2\par \pard\plain 
{\tc\tcl1 \v AgendaPDS2}
{\xe \v AgendaPDS2}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
Um projeto de PDS2 dos alunos da UFMG, um gerenciador de tarefas e compromissos! Esse gerenciador \'E9 uma aplica\'E7\'E3o projetada para ajudar os usu\'E1rios a organizar suas atividades di\'E1rias, seja no ambiente de trabalho, estudo ou vida pessoal. O objetivo principal desse tipo de projeto \'E9 oferecer uma plataforma intuitiva e eficiente para o acompanhamento e planejamento de tarefas e compromissos.\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
:hammer: Funcionalidades do projeto
\par}
{\tc\tcl2 \v :hammer: Funcionalidades do projeto}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Agendamento de Tarefas e Compromissos} : Permite que os usu\'E1rios criem eventos, compromissos e tarefas em datas e hor\'E1rios espec\'EDficos.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Prioriza\'E7\'E3o de Tarefas} : Classifica tarefas com base na sua import\'E2ncia e urg\'EAncia.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Lembretes} : Emite mensagens para ajudar os usu\'E1rios a n\'E3o perder compromissos ou prazos importantes.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Outros} : outras funcionalidades ser\'E3o adicionadas ao longo do projeto.\par}
\par
\par}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Instru\'E7\'F5es de Compilamento e uso
\par}
{\tc\tcl2 \v Instru\'E7\'F5es de Compilamento e uso}
{\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \zwj- !Pr\'E9-requisitos!:Certifique-se de ter o Make instalado no seu sistema. Tenha um compilador C++ (como o g++) instalado. \par
}>- Via MakeFile: \par
{\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \zwjDigite os comandos a seguir para uso do Progama: \par
}make (Padr\'E3o): Este comando chama automaticamente o alvo all, que, por sua vez, chama build. Ele compila todos os arquivos-fonte e gera o execut\'E1vel na pasta bin make build: Compila todos os arquivos-fonte e gera o execut\'E1vel na pasta bin make run: Compila e executa o programa. make test: Compila e executa testes (substitua pela l\'F3gica espec\'EDfica do seu projeto). make clean: Remove os diret\'F3rios build e bin, limpando os arquivos gerados.\par
{\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \zwj- Via MINGW: Voc\'EA pode compilar manualmente usando c\'F3digo 'g++ -Iinclude/core -Iinclude/menu {\b src/core/Calendario.cpp} {\b src/core/Excecoes.cpp} {\b src/core/Lembrete.cpp} {\b src/core/Notificacao.cpp} {\b src/core/Tarefa.cpp} {\b src/core/Usuario.cpp} {\b src/menu/Menu.cpp} {\b main.cpp} -o progama.exe' e './progama.exe' no terminal de comando\par
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Via PROGAMA.bat: Caso deseje basta clicar no arquivo arquivo PROGAMA.bat e o arquivo compilar\'E1 e execultar\'E1 automaticamente \par}
}\par}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Autores (Grupo 5)
\par}
{\tc\tcl2 \v Autores (Grupo 5)}
{\f2 Felipe Lucca Taumaturgo de Oliveira}  {\f2 Samuel Lima Horta}  {\f2 Thiago Tobias Valente de Oliveira Santos}  {\f2 Roberto J\'FAnior Cassimiro Campolina}  {\f2 Daniel Bozi Portes}  \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice Hier\'E1rquico\par \pard\plain 
{\tc \v \'CDndice Hier\'E1rquico}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Hierarquia de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta lista de hierarquias est\'E1 parcialmente ordenada (ordem alfab\'E9tica):}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Calendario\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Lembrete\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ListaCompromisso\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ImprimirCompromissos\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ListaLembrete\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ImprimirLembretes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ListaTarefa\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ImprimirTarefas\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ListaUsuario\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Notificacao\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PrimeiroMenu\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CompromissoMenu\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
LembreteMenu\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MenuLogin\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TarefaMenu\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
UsuarioMenu\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Tarefa\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFB \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Compromisso\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Usuario\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Componentes\par \pard\plain 
{\tc \v \'CDndice dos Componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as classes, estruturas, uni\'F5es e interfaces e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Calendario} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Compromisso} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CompromissoMenu} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ImprimirCompromissos} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ImprimirLembretes} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ImprimirTarefas} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Lembrete} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LembreteMenu} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListaCompromisso} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListaLembrete} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListaTarefa} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ListaUsuario} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MenuLogin} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Notificacao} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PrimeiroMenu} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tarefa} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TarefaMenu} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Usuario} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UsuarioMenu} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Calendario.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Excecoes.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Lembrete.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Notificacao.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Tarefa.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Usuario.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/menu/{\b Menu.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Calendario.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Excecoes.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Lembrete.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Notificacao.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Tarefa.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Usuario.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/menu/{\b Menu.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/{\b Calendario.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/{\b Lembrete.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/{\b Notifica\'E7\'E3o.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/{\b Tarefa.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/{\b Usuario.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/storage/{\b driver.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Classes{\tc \v Classes}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Calendario\par \pard\plain 
{\tc\tcl2 \v Calendario}
{\xe \v Calendario}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
{
{\f2 #include <Calendario.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserir} (std::string key, std::vector< std::string > value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere um grupo de atividades em um determinado hor\'E1rio. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b sizeMapaHorario} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho do mapa de hor\'E1rios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inserir} (std::string key)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere um hor\'E1rio com atividades(ou n\'E3o) em um determinado dia. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b sizeAgenda} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da agenda. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirCalendario} (std::string data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o calendario de 7 dias a partir do dia escolhido (Contando com ele) }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v imprimirCalendario\:Calendario}
{\xe \v Calendario\:imprimirCalendario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Calendario::imprimirCalendario (std::string  {\i data})}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime o calendario de 7 dias a partir do dia escolhido (Contando com ele) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{O primero dia da sequ\'EAncia a ser mostrada \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                                   \{\par
27 \par
28     {\cf18 int} dia = int({\cf18 char}(data[0]) + {\cf18 char}(data[1])) - 1;\par
29     {\cf18 int} mes = char(data[3]) + char(data[4]);\par
30     {\cf18 int} ano = char(data[6]) + char(data[7]) + char(data[8]) + char(data[9]);\par
31 \par
32     {\cf19 for} ({\cf18 unsigned} cont=0; cont<7; cont++ ) \{\par
33         dia ++;\par
34 \par
35         {\cf19 if} (dia > 30) \{\par
36             dia -= 30;\par
37             mes ++;\par
38         \}\par
39 \par
40         {\cf19 if} (mes > 12) \{\par
41             mes -= 12;\par
42             ano ++;\par
43         \}\par
44 \par
45         std::string dia_Atual = STRING(dia);\par
46         dia_Atual += {\cf23 '/'};\par
47         dia_Atual += STRING(mes);\par
48         dia_Atual += {\cf23 '/'};\par
49         dia_Atual += STRING(ano);\par
50 \par
51         {\cf17 auto} it = (_agenda.find(dia_Atual)->second).begin();\par
52 \par
53         std::cout << {\cf22 "Atividades do dia "} << dia_Atual << {\cf22 ": "} << std::endl << std::endl;\par
54 \par
55         {\cf19 while} (it != (_agenda.find(dia_Atual)->second).end()) \{\par
56             std::cout << {\cf22 "Horario: "} << it->first << std::endl << std::endl << {\cf22 "Atividades: "} << std::endl << std::endl;\par
57 \par
58             {\cf19 if} ((it->second).size() == 0) \{\par
59                 std::cout << {\cf22 "Nenhuma atividade registrada!"} << std::endl << std::endl;\par
60             \}\par
61 \par
62             {\cf19 for} ({\cf18 unsigned} i=0; i < (it->second).size(); i++) \{\par
63                 \par
64                 std::cout << (it->second)[i] << std::endl;\par
65             \}\par
66             it++;\par
67         \}\par
68     \}\par
69 \}\par
}
}
{\xe \v inserir\:Calendario}
{\xe \v Calendario\:inserir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Calendario::inserir (std::string  {\i key})}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere um hor\'E1rio com atividades(ou n\'E3o) em um determinado dia. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{O dia\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{As atividades que ser\'E3o inseridas \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                                       \{\par
16 \par
17     _agenda.insert(std::pair<std::string, std::map<std::string, std::vector<std::string>>>(key, _mapa_Horario));\par
18     _mapa_Horario.clear();\par
19 \}\par
}
}
{\xe \v inserir\:Calendario}
{\xe \v Calendario\:inserir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Calendario::inserir (std::string  {\i key}, std::vector< std::string >  {\i value})}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere um grupo de atividades em um determinado hor\'E1rio. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{O horario das atividades\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{As atividades que ser\'E3o inseridas \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                                                                   \{\par
6 \par
7     _mapa_Horario.insert(std::pair<std::string, std::vector<std::string>>(key, value));\par
8 \}\par
}
}
{\xe \v sizeAgenda\:Calendario}
{\xe \v Calendario\:sizeAgenda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned Calendario::sizeAgenda ()}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da agenda. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um unsigned com o tamanho \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                 \{\par
22 \par
23     {\cf19 return} _agenda.size();\par
24 \}\par
}
}
{\xe \v sizeMapaHorario\:Calendario}
{\xe \v Calendario\:sizeMapaHorario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned Calendario::sizeMapaHorario ()}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho do mapa de hor\'E1rios. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um unsigned com o tamanho \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                                      \{\par
11 \par
12     {\cf19 return} _mapa_Horario.size();\par
13 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Calendario.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Calendario.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Compromisso\par \pard\plain 
{\tc\tcl2 \v Compromisso}
{\xe \v Compromisso}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\par
{
{\f2 #include <Tarefa.hpp>}}\par
Diagrama de hierarquia da classe Compromisso:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_compromisso.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Compromisso} (std::string &data, std::string &local, std::string &titulo, std::string &descricao, std::string &horario, std::string &estado, unsigned prioridade)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getCor} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela cor do compromisso. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getLocal} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo local do compromisso. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getHorario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo horario do compromisso. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCor} (const std::string &nova_Cor)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a cor de um compromisso. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLocal} (const std::string &novo_Local)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o local de um compromisso. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setHorario} (const std::string &novo_Horario)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o horario de um compromisso. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b Tarefa}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Tarefa} (std::string &titulo, std::string &descricao, std::string &data, unsigned prioridade, std::string &estado)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getTitulo} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo titulo da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getDescricao} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela descri\'E7ao da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getData} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela data da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b getPrioridade} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela prioridade da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getEstado} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo estado da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (const std::string &novo_Titulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDescricao} (const std::string &nova_Descricao)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a descri\'E7ao de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const std::string &nova_Data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a data de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPrioridade} (unsigned nova_Prioridade)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a prioridade de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEstado} (const std::string &novo_Estado)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o estado de uma tarefa. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Compromisso\:Compromisso}
{\xe \v Compromisso\:Compromisso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Compromisso::Compromisso (std::string &  {\i data}, std::string &  {\i local}, std::string &  {\i titulo}, std::string &  {\i descricao}, std::string &  {\i horario}, std::string &  {\i estado}, unsigned  {\i prioridade})}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 196                                                     : Tarefa(titulo, descricao, data, prioridade, estado) \{\par
197     _local = local;\par
198     _horario = horario;\par
199 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getCor\:Compromisso}
{\xe \v Compromisso\:getCor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Compromisso::getCor () const}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela cor do compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String com o codigo em formata\'E7ao ANSI da cor \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a cor\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 201                                     \{\par
202 \par
203     {\cf19 return} this->_cor; \par
204 \}\par
}
}
{\xe \v getHorario\:Compromisso}
{\xe \v Compromisso\:getHorario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Compromisso::getHorario () const}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo horario do compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do horario \par
 \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o horario\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 211                                         \{\par
212 \par
213     {\cf19 return} this->_horario; \par
214 \}\par
}
}
{\xe \v getLocal\:Compromisso}
{\xe \v Compromisso\:getLocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Compromisso::getLocal () const}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo local do compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do local \par
 \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o local\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 206                                       \{\par
207 \par
208     {\cf19 return} this->_local; \par
209 \}\par
}
}
{\xe \v setCor\:Compromisso}
{\xe \v Compromisso\:setCor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Compromisso::setCor (const std::string &  {\i nova_Cor})}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a cor de um compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Necessario para organiza\'E7ao dos compromissos por cor\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Cores aceitas: 'laranja', 'azul', 'roxo', 'rosa'\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nova_Cor} \cell }{A nova cor a ser adicionada \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Atribui a cor laranja\par
< Atribui a cor azul\par
< Atribui a cor roxa\par
< Atribui a cor rosa\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 216                                                   \{\par
217 \par
218     {\cf19 try} \{\par
219 \par
220         {\cf20 // Escolher a cor com base na prioridade}\par
221         std::string cor;\par
222         \par
223         {\cf19 if} (nova_Cor == {\cf22 "laranja"}) \{\par
224 \par
225             this->_cor = {\cf22 "\\033[38;2;247;99;25m"}; \par
226         \}\par
227         {\cf19 else} {\cf19 if} (nova_Cor == {\cf22 "azul"}) \{\par
228 \par
229             this->_cor = {\cf22 "\\033[38;2;25;84;247m"}; \par
230         \}\par
231         {\cf19 else} {\cf19 if} (nova_Cor == {\cf22 "roxo"}) \{\par
232 \par
233             this->_cor = {\cf22 "\\033[38;2;140;25;247m"}; \par
234         \}\par
235         {\cf19 else} {\cf19 if} (nova_Cor == {\cf22 "rosa"}) \{\par
236 \par
237             this->_cor = {\cf22 "\\033[38;2;247;25;180m"}; \par
238         \}\par
239         {\cf19 else} {\cf19 if} (!nova_Cor.empty()) \{\par
240 \par
241             {\cf19 throw} std::invalid_argument({\cf22 "Cor invalida"});\par
242         \}\par
243     \}\par
244     {\cf19 catch} (std::exception& e) \{\par
245 \par
246         std::cout << {\cf22 "Cores aceitas:"} << std::endl\par
247         << {\cf22 "    - 'laranja'"} << std::endl\par
248         << {\cf22 "    - 'azul'"} << std::endl\par
249         << {\cf22 "    - 'roxo'"} << std::endl\par
250         << {\cf22 "    - 'rosa'"} << std::endl;\par
251 \par
252         handleExcecao(e);\par
253     \}\par
254 \}\par
}
}
{\xe \v setHorario\:Compromisso}
{\xe \v Compromisso\:setHorario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Compromisso::setHorario (const std::string &  {\i novo_Horario})}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o horario de um compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novo_Horario} \cell }{O novo horario a ser colocado\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O horario informado deve estar no formato: HH:MM:SS \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica o formato do novo horario\par
< Limitador deve ser ':'\par
Obtem a data do compromisso\par
< Limitador deve ser '/'\par
< Inicializa o struct da data\par
< Atribui o dia da data\par
< Atribui o mes da data (os meses s\'E3o de 0 a 11)\par
< Atribui o ano da data (os anos sao contados a partir de 1900)\par
< Atribui a nova hora do compromisso\par
< Atribui os novos minutos do compromisso\par
< Atribui os novos segundos do compromisso\par
Converte a data de time_t para time_point\par
Obtem a data atual do sistema\par
Converte time_point para time_t\par
Converte time_t para uma struct tm\par
< Atribui o novo horario\par
< Atribui o novo horario\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 279                                                           \{\par
280 \par
281         {\cf19 try} \{\par
283         std::istringstream iss(novo_Horario);\par
284         {\cf18 int} HH, MM, SS;\par
285         {\cf18 char} limitador; \par
286 \par
287         {\cf19 if} (!(iss >> HH >> limitador >> MM >> limitador >> SS) || limitador != {\cf23 ':'}) \{\par
288             \par
289             {\cf19 throw} std::invalid_argument({\cf22 "Formato do horario invalido"});\par
290         \}\par
291 \par
293         std::string data_compromisso = getData();\par
294 \par
295         {\cf19 if} (!data_compromisso.empty()) \{\par
296             \par
297             std::istringstream iss(data_compromisso);\par
298             {\cf18 int} dia, mes, ano;\par
299             {\cf18 char} limitador; \par
300 \par
301             iss >> HH >> limitador >> MM >> limitador >> SS;\par
302 \par
303             {\cf20 // Cria uma representacao da data do compromisso}\par
304             std::tm tmDataCompromisso = \{0\}; \par
305             \par
306             tmDataCompromisso.tm_mday = dia; \par
307             \par
308             tmDataCompromisso.tm_mon = mes - 1; \par
309             \par
310             tmDataCompromisso.tm_year = ano - 1900; \par
311 \par
312             tmDataCompromisso.tm_hour = HH; \par
313 \par
314             tmDataCompromisso.tm_min = MM; \par
315 \par
316             tmDataCompromisso.tm_sec = SS; \par
317 \par
319             {\cf17 auto} timepoint_data_compromisso = std::chrono::system_clock::from_time_t(std::mktime(&tmDataCompromisso));\par
320 \par
322             {\cf17 auto} timepoint_agora = std::chrono::system_clock::now();\par
323 \par
325             std::time_t time_t_agora = std::chrono::system_clock::to_time_t(timepoint_agora);\par
326     \par
328             {\cf17 struct }std::tm* tmAtual = std::localtime(&time_t_agora);\par
329 \par
330             {\cf20 // Verifica se o novo horario eh no dia}\par
331             {\cf19 if} (timepoint_data_compromisso <= timepoint_agora) \{\par
332         \par
333                 {\cf19 throw} std::logic_error({\cf22 "Horario no passado"});\par
334             \}\par
335 \par
336             this->_horario = novo_Horario; \par
337         \}\par
338         {\cf19 else} \{\par
339 \par
340             this->_horario = novo_Horario; \par
341         \}\par
342     \}\par
343     {\cf19 catch} ({\cf17 const} std::invalid_argument& e) \{\par
344         \par
345         std::cout << {\cf22 "Horario deve estar no formato HH:MM:SS"} << std::endl;\par
346         \par
347         handleExcecao(e);\par
348     \}\par
349     {\cf19 catch} ({\cf17 const} std::logic_error& e) \{\par
350 \par
351         std::cout << {\cf22 "Impossivel adicionar uma tarefa ou compromisso para datas anteriores a atual"} << std::endl;\par
352         \par
353         handleExcecao(e);\par
354     \}\par
355     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
356     \par
357         handleExcecao(e);\par
358     \}\par
359 \}\par
}
}
{\xe \v setLocal\:Compromisso}
{\xe \v Compromisso\:setLocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Compromisso::setLocal (const std::string &  {\i novo_Local})}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o local de um compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novo_Local} \cell }{O novo local a ser colocado \par
 \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Limite de caracteres para o novo local\par
Verifica se o novo local eh valido\par
< Atribui o novo local\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 256                                                       \{\par
257 \par
258     {\cf19 try} \{\par
259         {\cf17 const} {\cf18 size_t} MAX_CARACTERES = 100; \par
260 \par
262         {\cf19 if} (!novo_Local.length() >= MAX_CARACTERES || !novo_Local.empty()) \{\par
263 \par
264             this->_local = novo_Local; \par
265         \}\par
266         {\cf19 else} \{\par
267 \par
268             {\cf19 throw} std::invalid_argument({\cf22 "Local invalido"});\par
269         \}\par
270     \} \par
271     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
272         \par
273         std::cout << {\cf22 "Local deve possuir entre 1 e 100 caracteres"} << std::endl;\par
274         \par
275         handleExcecao(e);\par
276     \}\par
277 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Tarefa.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Tarefa.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CompromissoMenu\par \pard\plain 
{\tc\tcl2 \v CompromissoMenu}
{\xe \v CompromissoMenu}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
{
{\f2 #include <Menu.hpp>}}\par
Diagrama de hierarquia da classe CompromissoMenu:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_compromisso_menu.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CompromissoMenu} (std::string *login_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu dos compromissos \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PrimeiroMenu} * {\b next} (unsigned option, {\b PrimeiroMenu} *old_menu) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b PrimeiroMenu}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PrimeiroMenu} ()=default\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getUsuario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsuario} (std::string user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string novo_Titulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubtitulo} (std::string novo_Subtitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOpcoes} (std::vector< std::string > novasOpcoes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderizar} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CompromissoMenu\:CompromissoMenu}
{\xe \v CompromissoMenu\:CompromissoMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CompromissoMenu::CompromissoMenu (std::string *  {\i login_email})}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu dos compromissos \par
 }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 472                                                        \{\par
473     \par
474     setTitulo({\cf22 "Menu de Compromissos"});\par
475     setSubtitulo({\cf22 "Escolha uma op\'E7\'E3o:"});\par
476     setOpcoes(\{{\cf22 "1 --> Adicionar novo Compromisso"}, {\cf22 "2 --> Remover Compromisso"}, {\cf22 "5 --> Editar Compromisso "} {\cf22 "4 --> Voltar"}, {\cf22 "5 --> Sair"}\});\par
477     setUsuario(*login_email);\par
478 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v next\:CompromissoMenu}
{\xe \v CompromissoMenu\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PrimeiroMenu} * CompromissoMenu::next (unsigned  {\i option}, {\b PrimeiroMenu} *  {\i old_menu}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i opcao} \cell }{A op\'E7\'E3o que o usu\'E1rio escolheu\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i old_menu} \cell }{Um ponteiro que aponta para o menu anterior\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um ponteiro para o pr\'F3ximo menu \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Removendo a compromisso\par
}{
Implementa {\b PrimeiroMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 480                                                                            \{\par
481     \par
482     std::string usuario_atual = getUsuario();\par
483 \par
484     {\cf19 switch} (option) \{\par
485         {\cf19 case} 1: \{\par
486 \par
487             std::string nova_compromisso_titulo;\par
488             std::cout << {\cf22 "Insira um titulo para seu Compromisso"} << std::endl;\par
489             std::cin >> nova_compromisso_titulo;\par
490 \par
491             std::string nova_compromisso_descricao;\par
492             std::cout << {\cf22 "Insira uma descricao para seu Compromisso"} << std::endl;\par
493             std::cin >> nova_compromisso_descricao;\par
494 \par
495             std::string nova_compromisso_data;\par
496             std::cout << {\cf22 "Insira uma data para seu compromisso no formato DD/MM/AAA"} << std::endl;\par
497             std::cin >> nova_compromisso_data;\par
498 \par
499             {\cf18 unsigned} nova_compromisso_prioridade;\par
500             std::cout << {\cf22 "Insira uma prioridade para sua compromisso: "} << std::endl;\par
501             std::cout << {\cf22 "1 --> menos importante, 2 --> importante, 3 --> muito importante"} << std::endl;\par
502             std::cin >> nova_compromisso_prioridade;\par
503 \par
504             std::string nova_compromisso_estado;\par
505             std::cout << {\cf22 "Insira um estado para sua compromisso: "} << std::endl;\par
506             std::cout << {\cf22 "feito , em progresso, n\'E3o feito "} << std::endl;\par
507             std::cin >> nova_compromisso_estado;\par
508 \par
509             std::string nova_compromisso_local;\par
510             std::cout << {\cf22 "Insira um local para seu compromisso: "} << std::endl;\par
511             std::cin >> nova_compromisso_local;\par
512 \par
513             std::string nova_compromisso_horario;\par
514             std::cout << {\cf22 "Insira um horario para seu compromisso no formato HH:MM:SS : "} << std::endl;\par
515             std::cin >> nova_compromisso_horario;\par
516             \par
517             std::cout << {\cf22 "Adicionando compromisso..."} << std::endl;\par
518 \par
519             Compromisso* new_compromisso = {\cf17 new} Compromisso(nova_compromisso_data, nova_compromisso_local, nova_compromisso_titulo, nova_compromisso_descricao, nova_compromisso_horario, nova_compromisso_estado,  nova_compromisso_prioridade );\par
520 \par
521             ListaCompromisso::adicionarCompromisso(new_compromisso, &usuario_atual);\par
522 \par
523         {\cf20 // n\'E3o achei uma fun\'E7\'E3o dessa para compromisso}\par
524             {\cf19 if} (ListaCompromisso::buscarCompromisso(nova_compromisso_titulo) != {\cf17 nullptr}) \{\par
525 \par
526                 std::cout << {\cf22 "A compromisso adicionada com sucesso!"} << std::endl;\par
527             \}\par
528             {\cf19 else} \{\par
529 \par
530                 std::cout << {\cf22 "Nao foi possivel adicionar A nova compromisso."} << std::endl;\par
531             \}\par
532 \par
533             {\cf19 return} {\cf17 new} CompromissoMenu(&usuario_atual);\par
534         \}\par
535         {\cf19 case} 2: \{\par
536        \par
537             std::string titulo_Compromisso;\par
538             std::cout << std::endl << {\cf22 "Digite o titulo da compromisso que deseja remover: "} << std::endl;\par
539             std::cin >> titulo_Compromisso;\par
540 \par
541             std::cout << {\cf22 "Buscando pelo Compromisso..."} << std::endl;\par
542             \par
543             {\cf20 //precisa criar a fun\'E7\'E3o a baixo}\par
544             Compromisso* compromisso = ListaCompromisso::buscarCompromisso(titulo_Compromisso);\par
545 \par
546             {\cf19 if} (compromisso != {\cf17 nullptr}) \{\par
547                 \par
548                 ListaCompromisso::removerCompromisso(compromisso, &usuario_atual); \par
549 \par
550                 std::cout << {\cf22 "A compromisso com Titulo '"} << titulo_Compromisso << {\cf22 "' foi removido com sucesso!"} << std::endl;\par
551             \}\par
552             {\cf19 else} \{\par
553 \par
554                 std::cout << {\cf22 "A compromisso com Titulo '"} << titulo_Compromisso << {\cf22 "' nao foi encontrado."} << std::endl;\par
555             \}\par
556 \par
557                 {\cf19 return} {\cf17 new} CompromissoMenu(&usuario_atual);\par
558             \}\par
559 \par
560         {\cf19 case} 3: \{\par
561 \par
562             std::string titulo_compromisso;\par
563             std::cout << std::endl << {\cf22 "Digite o titulo do Compromisso que deseja editar: "} << std::endl;\par
564             std::cin >> titulo_compromisso;\par
565 \par
566             std::cout << {\cf22 "Buscando pela compromisso..."} << std::endl;\par
567             \par
568             Compromisso* compromisso = ListaCompromisso::buscarCompromisso(titulo_compromisso);\par
569 \par
570             {\cf19 if} (compromisso != {\cf17 nullptr}) \{\par
571 \par
572                 std::cout << {\cf22 "Alterando o compromisso..."} << std::endl\par
573                 << {\cf22 "Titulo: "} << compromisso->getTitulo() << std::endl\par
574                 << {\cf22 "Descricao: "} << compromisso->getDescricao() << std::endl\par
575                 << {\cf22 "Data: "} << compromisso->getData() << std::endl\par
576                 << {\cf22 "Prioridade: "} << compromisso->getPrioridade() << std::endl\par
577                 << {\cf22 "Estado: "} << compromisso->getEstado() << std::endl\par
578                 << {\cf22 "Local: "} << compromisso->getLocal() << std::endl\par
579                 << {\cf22 "horario: "} << compromisso->getHorario() << std::endl;\par
580                 \par
581                 std::cout << std::endl << {\cf22 "Voce deseja..."} << std::endl\par
582                 << {\cf22 "1 --> Editar Titulo"} << std::endl\par
583                 << {\cf22 "2 --> Editar Descricao"} << std::endl\par
584                 << {\cf22 "3 --> Editar Data"} << std::endl\par
585                 << {\cf22 "4 --> Editar Prioridade"} << std::endl\par
586                 << {\cf22 "5 --> Editar Estado"}<< std::endl\par
587                 << {\cf22 "6 --> Editar Local"}<< std::endl\par
588                 << {\cf22 "7 --> Editar horario"}<< std::endl;\par
589 \par
590                 {\cf18 unsigned} opcao_editar;\par
591 \par
592                 {\cf19 switch} (opcao_editar) \{\par
593                     {\cf19 case} 1: \{\par
594 \par
595                         std::string novo_titulo;\par
596                         std::cout << {\cf22 "Digite um novo Titulo pata a compromisso:"} << std::endl;\par
597                         std::cin >> novo_titulo;\par
598 \par
599                         std::cout << {\cf22 "Alterando Titulo..."};\par
600 \par
601                         compromisso->setTitulo(novo_titulo);\par
602 \par
603                         Compromisso* compromisso_alterado = ListaCompromisso::buscarCompromisso(novo_titulo);  \par
604 \par
605                         {\cf19 if} (compromisso_alterado != {\cf17 nullptr} && compromisso_alterado->getData() == compromisso->getData() && compromisso_alterado->getDescricao() == compromisso->getDescricao()) \{\par
606 \par
607                             std::cout << {\cf22 "O Titulo do Compromisso foi alterado com sucesso para: "} << compromisso->getTitulo() << {\cf22 "!"} << std::endl;\par
608                         \}\par
609                         {\cf19 else} \{\par
610 \par
611                             std::cout << {\cf22 "Nao foi possivel alterar o Titulo do compromisso."} << std::endl;\par
612                         \}\par
613                     \}\par
614                     \par
615                     {\cf19 case} 2: \{\par
616 \par
617                         std::string novo_descricao;\par
618                         std::cout << {\cf22 "Digite uma nova Descricao para o compromisso:"} << std::endl;\par
619                         std::cin >> novo_descricao;\par
620 \par
621                         std::cout << {\cf22 "Alterando Descricao..."};\par
622 \par
623                         compromisso->setDescricao(novo_descricao);  \par
624 \par
625                         {\cf19 if} (compromisso->getDescricao() == novo_descricao) \{\par
626 \par
627                             std::cout << {\cf22 "A Descricao da compromisso foi alterada com sucesso para: "} << compromisso->getDescricao() << {\cf22 "!"} << std::endl;\par
628                         \}\par
629                         {\cf19 else} \{\par
630 \par
631                             std::cout << {\cf22 "Nao foi possivel alterar a Descricao do compromisso."} << std::endl;\par
632                         \}\par
633                     \}\par
634 \par
635                     {\cf19 case} 3: \{\par
636 \par
637                         std::string nova_data;\par
638                         std::cout << {\cf22 "Digite uma nova data para o compromisso (no formato: DD/MM/AAAA):"} << std::endl;\par
639                         std::cin >> nova_data;\par
640 \par
641                         std::cout << {\cf22 "Alterando data..."};\par
642 \par
643                         compromisso->setData(nova_data);  \par
644 \par
645                         {\cf19 if} (compromisso->getData() == nova_data) \{\par
646 \par
647                             std::cout << {\cf22 "A data do compromisso foi alterada com sucesso para: "} << compromisso->getData() << {\cf22 "!"} << std::endl;\par
648                         \}\par
649                         {\cf19 else} \{\par
650 \par
651                             std::cout << {\cf22 "Nao foi possivel alterar a data do compromisso."} << std::endl;\par
652                         \}\par
653                     \}\par
654 \par
655                     {\cf19 case} 4: \{ \par
656 \par
657                         {\cf18 unsigned} nova_prioridade;\par
658                         std::cout << {\cf22 "Digite a nova prioridade do compromisso entre:"} << std::endl;\par
659                         std::cout << {\cf22 "'1 --> menos importante, 2 --> importante, 3 --> muito importante'"} << std:: endl;\par
660                         std::cin >> nova_prioridade;\par
661 \par
662                         std::cout << {\cf22 "Alterando prioridade..."};\par
663 \par
664                         compromisso->setPrioridade(nova_prioridade);  \par
665 \par
666                         {\cf19 if} (compromisso->getPrioridade() == nova_prioridade) \{\par
667                         \par
668                         std::cout << {\cf22 "A prioridade do compromisso foi alterada com sucesso para: "} << compromisso->getPrioridade() << {\cf22 "!"} << std::endl;\par
669                         \par
670                         \}\par
671                         {\cf19 else} \{\par
672 \par
673                             std::cout << {\cf22 "Nao foi possivel alterar a prioridade do compromisso."} << std::endl;\par
674                         \}\par
675                     \}\par
676 \par
677                     {\cf19 case} 5: \{ \par
678 \par
679                         std::string nova_estado;\par
680                         std::cout << {\cf22 "Digite uma novo estado para o compromisso entre : "} << std::endl;\par
681                         std::cout << {\cf22 "'feito , em progresso, n\'E3o feito' "} << std::endl;\par
682                         std::cin >> nova_estado;\par
683 \par
684                         std::cout << {\cf22 "Alterando estado..."};\par
685 \par
686                         compromisso->setEstado(nova_estado);\par
687     \par
688 \par
689                         {\cf19 if} (compromisso->getEstado() == nova_estado) \{\par
690 \par
691                             std::cout << {\cf22 "O esatado do compromisso foi alterado com sucesso para: "} << compromisso->getEstado() << {\cf22 "!"} << std::endl;\par
692                         \}\par
693                         {\cf19 else} \{\par
694 \par
695                             std::cout << {\cf22 "Nao foi possivel alterar o estado do compromisso."} << std::endl;\par
696                         \}\par
697                     \}\par
698                     {\cf19 case} 6: \{\par
699 \par
700                         std::string novo_local;\par
701                         std::cout << {\cf22 "Digite um novo Local para o compromisso:"} << std::endl;\par
702                         std::cin >> novo_local;\par
703 \par
704                         std::cout << {\cf22 "Alterando Local..."};\par
705 \par
706                         compromisso->setLocal(novo_local);  \par
707 \par
708                         {\cf19 if} (compromisso->getLocal() == novo_local) \{\par
709 \par
710                             std::cout << {\cf22 "O Local do compromisso foi alterada com sucesso para: "} << compromisso->getLocal() << {\cf22 "!"} << std::endl;\par
711                         \}\par
712                         {\cf19 else} \{\par
713 \par
714                             std::cout << {\cf22 "Nao foi possivel alterar o Local do compromisso."} << std::endl;\par
715                         \}\par
716 \par
717                     \}\par
718 \par
719                     {\cf19 case} 7: \{\par
720 \par
721                         std::string nova_horario;\par
722                         std::cout << {\cf22 "Digite um novo horario para o compromisso (no formato: HH:MM:SS):"} << std::endl;\par
723                         std::cin >> nova_horario;\par
724 \par
725                         std::cout << {\cf22 "Alterando horario..."};\par
726 \par
727                         compromisso->setHorario(nova_horario);  \par
728 \par
729                         {\cf19 if} (compromisso->getHorario() == nova_horario) \{\par
730 \par
731                             std::cout << {\cf22 "O horario do compromisso foi alterada com sucesso para: "} << compromisso->getHorario() << {\cf22 "!"} << std::endl;\par
732                         \}\par
733                         {\cf19 else} \{\par
734 \par
735                             std::cout << {\cf22 "Nao foi possivel alterar o horario do compromisso."} << std::endl;\par
736                         \}\par
737 \par
738                     \}\par
739 \par
740                 \} \par
741             \}\par
742             {\cf19 else} \{\par
743 \par
744                 std::cout << {\cf22 "O compromisso com Titulo '"} << titulo_compromisso << {\cf22 "' nao foi encontrado."} << std::endl;\par
745             \}\par
746 \par
747                 {\cf19 return} {\cf17 new} CompromissoMenu(&usuario_atual);\par
748             \}\par
749 \par
750         {\cf19 case} 4: \{\par
751 \par
752             std::cout << {\cf22 "Voltando..."} << std::endl;\par
753             {\cf19 return} old_menu;\par
754         \}\par
755 \par
756         {\cf19 case} 5: \{\par
757       \par
758             std::cout << {\cf22 "Saindo do progama..."} << std::endl;\par
759             {\cf19 return} {\cf17 nullptr};\par
760         \}\par
761         \par
762         {\cf19 default}: \{\par
763 \par
764             std::cout << {\cf22 "Opcao invalida!"} << std::endl;\par
765             std::cout << {\cf22 "Escolha uma opcao valida!"} << std::endl;\par
766             {\cf19 return} {\cf17 new} CompromissoMenu(&usuario_atual);\par
767         \}\par
768     \}\par
769 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/menu/{\b Menu.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/menu/{\b Menu.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ImprimirCompromissos\par \pard\plain 
{\tc\tcl2 \v ImprimirCompromissos}
{\xe \v ImprimirCompromissos}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\par
{
{\f2 #include <Tarefa.hpp>}}\par
Diagrama de hierarquia da classe ImprimirCompromissos:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_imprimir_compromissos.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b verCompromissos} (std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra a lista de compromissos do usuario logado. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b ListaCompromisso}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarCompromisso} ({\b Compromisso} *compromisso, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um compromisso a lista de compromissos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerCompromisso} ({\b Compromisso} *compromisso, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um compromisso da lista de compromissos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Compromisso} * {\b buscarCompromisso} (const std::string &compromisso_titulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca uma {\b Compromisso} pelo seu T\'EDtulo. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b ListaCompromisso}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaCompromisso} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b tamanho} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da lista. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v verCompromissos\:ImprimirCompromissos}
{\xe \v ImprimirCompromissos\:verCompromissos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ImprimirCompromissos::verCompromissos (std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra a lista de compromissos do usuario logado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os compromissos atuais da lista\par
Verifica se o compromisso pertence ao usuario\par
Obtem a prioridade\par
Obtem a cor\par
< Muda a cor do texto, de acordo com a prioridade\par
Verifica se o compromisso tem uma cor definida pelo usuario Se nao tem, volta para a cor padrao do texto\par
< Muda a cor do texto para a cor escolhida pelo usuario\par
< Restaura a cor padrao do texto\par
< Restaura a cor padrao do texto\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 489                                                                 \{\par
490 \par
492     {\cf19 for} ({\cf17 const} {\cf17 auto}& compromisso : _listadeCompromisso) \{\par
493         \par
495         {\cf19 if} (compromisso.first == *user_email) \{\par
496             \par
498             {\cf18 unsigned} prioridade = compromisso.second->getPrioridade();\par
499 \par
501             std::string cor_prioridade = setCorPrioridade(prioridade);\par
502 \par
503             std::string cor_compromisso = compromisso.second->getCor();\par
504             \par
505             std::cout << {\cf22 "----------"} << std::endl\par
506 \par
507             << cor_prioridade \par
508             \par
509             << {\cf22 "Titulo: "} << compromisso.second->getTitulo() << std::endl;\par
510 \par
513             {\cf19 if} (!cor_compromisso.empty()) \{\par
514 \par
515                 std::cout << cor_compromisso; \par
516             \}\par
517             {\cf19 else} \{\par
518 \par
519                 std::cout << {\cf22 "\\033[0m"}; \par
520             \}\par
521             \par
522             std::cout << {\cf22 "Descri\'E7ao: "} << compromisso.second->getDescricao() << std::endl\par
523             \par
524             << {\cf22 "Data: "} << compromisso.second->getData() << {\cf22 ", \'E0s "} << compromisso.second->getHorario() << std::endl\par
525             \par
526             << {\cf22 "Local: "} << compromisso.second->getLocal() << std::endl\par
527             \par
528             << {\cf22 "Prioridade: "} << prioridade << std::endl\par
529 \par
530             << {\cf22 "Estado: "} << compromisso.second->getEstado() << std::endl\par
531             \par
532             << {\cf22 "\\033[0m"} \par
533 \par
534             << std::endl;\par
535         \}        \par
536     \}\par
537 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Tarefa.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Tarefa.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ImprimirLembretes\par \pard\plain 
{\tc\tcl2 \v ImprimirLembretes}
{\xe \v ImprimirLembretes}
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\par
{
{\f2 #include <Lembrete.hpp>}}\par
Diagrama de hierarquia da classe ImprimirLembretes:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_imprimir_lembretes.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b verLembretes} (std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime todos lembretes da lista. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b ListaLembrete}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarLembrete} ({\b Lembrete} *lembrete, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um {\b Lembrete} a lista de Lembretes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerLembrete} ({\b Lembrete} *lembrete, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um lembrete da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Lembrete} * {\b buscarLembrete} (std::string *mensagem)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Procura pelo lembrete pela mensagem. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b ListaLembrete}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaLembrete} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b tamanho} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho do mapa. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v verLembretes\:ImprimirLembretes}
{\xe \v ImprimirLembretes\:verLembretes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ImprimirLembretes::verLembretes (std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime todos lembretes da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os lembretes atuais da lista\par
Verifica se o lembrete pertence ao usuario logado\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 228                                                           \{\par
229     \par
231     {\cf19 for} ({\cf17 const} {\cf17 auto}& lembrete : _listadeLembretes) \{\par
232 \par
234         {\cf19 if} (lembrete.first == *user_email) \{\par
235 \par
236             std::cout << {\cf22 "Lembrete: "} << lembrete.second->getMensagem() << std::endl \par
237             << {\cf22 "Data: "} << lembrete.second->getData() << std::endl\par
238             << {\cf22 "Horario: "} << lembrete.second->getHorario() << std::endl;\par
239             std::cout << {\cf22 "------------------------"} << std::endl;\par
240         \}\par
241     \}\par
242 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Lembrete.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Lembrete.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ImprimirTarefas\par \pard\plain 
{\tc\tcl2 \v ImprimirTarefas}
{\xe \v ImprimirTarefas}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\par
{
{\f2 #include <Tarefa.hpp>}}\par
Diagrama de hierarquia da classe ImprimirTarefas:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_imprimir_tarefas.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b verTarefas} (std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra a lista de tarefas do usuario logado. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b ListaTarefa}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarTarefa} ({\b Tarefa} *tarefa, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona uma tarefa na lista de tarefas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerTarefa} ({\b Tarefa} *tarefa, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove uma tarefa da lista de tarefas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Tarefa} * {\b buscarTarefa} (const std::string &tarefa_titulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca uma {\b Tarefa} pelo seu T\'EDtulo. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b ListaTarefa}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaTarefa} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b tamanho} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da lista. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v verTarefas\:ImprimirTarefas}
{\xe \v ImprimirTarefas\:verTarefas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ImprimirTarefas::verTarefas (std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostra a lista de tarefas do usuario logado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime as tarefas atuais da lista\par
Verifica se a tarefa pertence ao usuario\par
Obtem a prioridade\par
Obtem a cor\par
< Restaura a cor padrao do texto\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 419                                                       \{\par
420     \par
422     {\cf19 for} ({\cf17 const} {\cf17 auto}& tarefa : _listadeTarefa) \{\par
423 \par
425         {\cf19 if} (tarefa.first == *user_email) \{\par
426             \par
428             {\cf18 unsigned} prioridade = tarefa.second->getPrioridade();\par
429 \par
431             std::string cor = setCorPrioridade(prioridade);\par
432             \par
433             std::cout << {\cf22 "----------"} << std::endl\par
434 \par
435             << cor\par
436 \par
437             << {\cf22 "Titulo: "} << tarefa.second->getTitulo() << std::endl\par
438 \par
439             << {\cf22 "\\033[0m"} \par
440             \par
441             << {\cf22 "Descri\'E7ao: "} << tarefa.second->getDescricao() << std::endl\par
442             \par
443             << {\cf22 "Data: "} << tarefa.second->getData() << std::endl\par
444 \par
445             << {\cf22 "Prioridade: "} << tarefa.second->getPrioridade() << std::endl\par
446             \par
447             << {\cf22 "Estado: "} << tarefa.second->getEstado() << std::endl\par
448 \par
449             << std::endl;\par
450         \}        \par
451     \}\par
452 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Tarefa.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Tarefa.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Lembrete\par \pard\plain 
{\tc\tcl2 \v Lembrete}
{\xe \v Lembrete}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\par
{
{\f2 #include <Lembrete.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Lembrete} (const std::string &horario, const std::string &mensagem, const std::string &data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getData} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela data do lembrete. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getHorario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo horario do lembrete. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getMensagem} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela mensagem do lembrete. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const std::string &nova_Data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a data de um lembrete. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setHorario} (const std::string &novo_Horario)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o horario de um compromisso. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMensagem} (std::string texto)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona uma mensagem para um lembrete. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Lembrete\:Lembrete}
{\xe \v Lembrete\:Lembrete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Lembrete::Lembrete (const std::string &  {\i horario}, const std::string &  {\i mensagem}, const std::string &  {\i data})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                                                                              \{\par
14     _data = data;\par
15     _horario = horario;\par
16     _mensagem = mensagem;\par
17 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getData\:Lembrete}
{\xe \v Lembrete\:getData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Lembrete::getData () const}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela data do lembrete. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String da data \par
 \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a data\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                   \{\par
20 \par
21     {\cf19 return} this->_data; \par
22 \}\par
}
}
{\xe \v getHorario\:Lembrete}
{\xe \v Lembrete\:getHorario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Lembrete::getHorario () const}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo horario do lembrete. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do horario \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o horario\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                      \{\par
25 \par
26     {\cf19 return} this->_horario; \par
27 \}\par
}
}
{\xe \v getMensagem\:Lembrete}
{\xe \v Lembrete\:getMensagem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Lembrete::getMensagem () const}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela mensagem do lembrete. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String da mensagem \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a mensagem\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                                       \{\par
30 \par
31     {\cf19 return} this->_mensagem; \par
32 \}\par
}
}
{\xe \v setData\:Lembrete}
{\xe \v Lembrete\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Lembrete::setData (const std::string &  {\i nova_Data})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a data de um lembrete. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nova_Data} \cell }{A nova data a ser adicionada\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A data informada deve estar no formato: DD/MM/AAAA \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica o formato da nova data\par
< Limitador deve ser '/'\par
Obtem a data atual do sistema\par
Converte time_point para time_t\par
Converte time_t para uma struct tm\par
< Inicializa o struct da nova data\par
< Atribui o dia da nova data\par
< Atribui o mes da nova data (os meses s\'E3o de 0 a 11)\par
< Atribui o ano da nova data (os anos s\'E3o contados a partir de 1900)\par
Converte a nova data de time_t para time_point\par
< Atribui a nova data\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34                                                  \{\par
35     {\cf19 try} \{\par
37         std::istringstream iss(nova_Data);\par
38         {\cf18 int} dia, mes, ano;\par
39         {\cf18 char} limitador; \par
40 \par
41         {\cf19 if} (!(iss >> dia >> limitador >> mes >> limitador >> ano) || limitador != {\cf23 '/'}) \{\par
42             \par
43             {\cf19 throw} std::invalid_argument({\cf22 "Formato da data invalido"});\par
44         \}\par
45 \par
47         {\cf17 auto} timepoint_agora = std::chrono::system_clock::now();\par
48     \par
50         std::time_t time_t_agora = std::chrono::system_clock::to_time_t(timepoint_agora);\par
51     \par
53         {\cf17 struct }std::tm* tmAtual = std::localtime(&time_t_agora);\par
54 \par
55         {\cf20 // Cria uma representacao da nova data}\par
56         std::tm tmNovaData = \{0\}; \par
57         tmNovaData.tm_mday = dia; \par
58         tmNovaData.tm_mon = mes - 1; \par
59         tmNovaData.tm_year = ano - 1900; \par
60 \par
62         {\cf17 auto} timepoint_novadata = std::chrono::system_clock::from_time_t(std::mktime(&tmNovaData));\par
63 \par
64         {\cf20 // Verifica se a nova data esta no futuro}\par
65         {\cf19 if} (timepoint_novadata <= timepoint_agora) \{\par
66         \par
67             {\cf19 throw} std::logic_error({\cf22 "Data no passado"});\par
68         \}\par
69 \par
70         this->_data = nova_Data; \par
71     \}\par
72     {\cf19 catch} ({\cf17 const} std::invalid_argument& e) \{\par
73         \par
74         std::cout << {\cf22 "Data deve estar no formato DD/MM/AAAA"} << std::endl;\par
75         \par
76         handleExcecao(e);\par
77     \}\par
78     {\cf19 catch} ({\cf17 const} std::logic_error& e) \{\par
79 \par
80         std::cout << {\cf22 "Impossivel adicionar um lembrete para datas anteriores a atual"} << std::endl;\par
81         \par
82         handleExcecao(e);\par
83     \}\par
84     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
85     \par
86         handleExcecao(e);\par
87     \}\par
88 \}\par
}
}
{\xe \v setHorario\:Lembrete}
{\xe \v Lembrete\:setHorario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Lembrete::setHorario (const std::string &  {\i novo_Horario})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o horario de um compromisso. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novo_Horario} \cell }{O novo horario a ser colocado\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O horario informado deve estar no formato: HH:MM:SS \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica o formato do novo horario\par
< Limitador deve ser ':'\par
Obtem a data do lembrete\par
< Limitador deve ser '/'\par
< Inicializa o struct da data\par
< Atribui o dia da data\par
< Atribui o mes da data (os meses s\'E3o de 0 a 11)\par
< Atribui o ano da data (os anos sao contados a partir de 1900)\par
< Atribui a nova hora dolembrete\par
< Atribui os novos minutos dolembrete\par
< Atribui os novos segundos do lembrete\par
Converte a data de time_t para time_point\par
Obtem a data atual do sistema\par
Converte time_point para time_t\par
Converte time_t para uma struct tm\par
< Atribui o novo horario\par
< Atribui o novo horario\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90                                                        \{\par
91     \par
92     {\cf19 try} \{\par
94         std::istringstream iss(novo_Horario);\par
95         {\cf18 int} HH, MM, SS;\par
96         {\cf18 char} limitador; \par
97 \par
98         {\cf19 if} (!(iss >> HH >> limitador >> MM >> limitador >> SS) || limitador != {\cf23 ':'}) \{\par
99             \par
100             {\cf19 throw} std::invalid_argument({\cf22 "Formato do horario invalido"});\par
101         \}\par
102 \par
104         std::string data_lembrete = getData();\par
105 \par
106         {\cf19 if} (!data_lembrete.empty()) \{\par
107             \par
108             std::istringstream iss(data_lembrete);\par
109             {\cf18 int} dia, mes, ano;\par
110             {\cf18 char} limitador; \par
111 \par
112             iss >> HH >> limitador >> MM >> limitador >> SS;\par
113 \par
114             {\cf20 // Cria uma representacao da data do lembrete            }\par
115             std::tm tmDataLembrete = \{0\}; \par
116             \par
117             tmDataLembrete.tm_mday = dia; \par
118             \par
119             tmDataLembrete.tm_mon = mes - 1; \par
120             \par
121             tmDataLembrete.tm_year = ano - 1900; \par
122 \par
123             tmDataLembrete.tm_hour = HH; \par
124 \par
125             tmDataLembrete.tm_min = MM; \par
126 \par
127             tmDataLembrete.tm_sec = SS; \par
129             {\cf17 auto} timepoint_data_lembrete = std::chrono::system_clock::from_time_t(std::mktime(&tmDataLembrete));\par
130 \par
132             {\cf17 auto} timepoint_agora = std::chrono::system_clock::now();\par
133 \par
135             std::time_t time_t_agora = std::chrono::system_clock::to_time_t(timepoint_agora);\par
136     \par
138             {\cf17 struct }std::tm* tmAtual = std::localtime(&time_t_agora);\par
139 \par
140             {\cf20 // Verifica se o novo horario eh no dia}\par
141             {\cf19 if} (timepoint_data_lembrete <= timepoint_agora) \{\par
142         \par
143                 {\cf19 throw} std::logic_error({\cf22 "Horario no passado"});\par
144             \}\par
145 \par
146             this->_horario = novo_Horario; \par
147         \}\par
148         {\cf19 else} \{\par
149 \par
150             this->_horario = novo_Horario; \par
151         \}\par
152     \}\par
153     {\cf19 catch} ({\cf17 const} std::invalid_argument& e) \{\par
154         \par
155         std::cout << {\cf22 "Horario deve estar no formato HH:MM:SS"} << std::endl;\par
156         \par
157         handleExcecao(e);\par
158     \}\par
159     {\cf19 catch} ({\cf17 const} std::logic_error& e) \{\par
160 \par
161         std::cout << {\cf22 "Impossivel adicionar uma tarefa ou compromisso para datas anteriores a atual"} << std::endl;\par
162         \par
163         handleExcecao(e);\par
164     \}\par
165     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
166     \par
167         handleExcecao(e);\par
168     \}\par
169 \}\par
}
}
{\xe \v setMensagem\:Lembrete}
{\xe \v Lembrete\:setMensagem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Lembrete::setMensagem (std::string  {\i texto})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona uma mensagem para um lembrete. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i texto} \cell }{A mensagem a ser adicionada \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Limite de caracteres para a mensagem do lembrete\par
Verifica se a nova mensagem esta vazia, se a nova mensagem eh igual a mensagem atual ou ultrapassa o limite de caracteres\par
< Atribui a nova mensagem\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 171                                                   \{\par
172     \par
173     {\cf19 try} \{\par
174         {\cf17 const} {\cf18 size_t} MAX_CARACTERES = 45; \par
175         \par
177         {\cf19 if} (!nova_Mensagem.empty() || nova_Mensagem != this->_mensagem || nova_Mensagem.length() < MAX_CARACTERES) \{\par
178 \par
179             this->_mensagem = nova_Mensagem; \par
180         \} \par
181         {\cf19 else} \{\par
182 \par
183             {\cf19 throw} std::invalid_argument({\cf22 "Mensagem invalida"});\par
184         \}\par
185     \}\par
186     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
187 \par
188         std::cout << {\cf22 "A mensagem deve ser diferente da mensagem atual e possuir no maximo 45 caracteres"} << std::endl;\par
189 \par
190         handleExcecao(e);\par
191     \}\par
192 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Lembrete.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Lembrete.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe LembreteMenu\par \pard\plain 
{\tc\tcl2 \v LembreteMenu}
{\xe \v LembreteMenu}
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\par
{
{\f2 #include <Menu.hpp>}}\par
Diagrama de hierarquia da classe LembreteMenu:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_lembrete_menu.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LembreteMenu} (std::string *login_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu dos lembretes \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PrimeiroMenu} * {\b next} (unsigned option, {\b PrimeiroMenu} *old_menu) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b PrimeiroMenu}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PrimeiroMenu} ()=default\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getUsuario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsuario} (std::string user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string novo_Titulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubtitulo} (std::string novo_Subtitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOpcoes} (std::vector< std::string > novasOpcoes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderizar} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v LembreteMenu\:LembreteMenu}
{\xe \v LembreteMenu\:LembreteMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
LembreteMenu::LembreteMenu (std::string *  {\i login_email})}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu dos lembretes \par
 }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 771                                                 \{\par
772   \par
773   setTitulo({\cf22 "Menu de Lembretes! "});\par
774   setSubtitulo({\cf22 "Escolha uma op\'E7ao:"});\par
775   setOpcoes(\{{\cf22 "1 --> Adicionar um novo lembrete"}, {\cf22 "2 --> Remover um lembrete"}, {\cf22 "3 --> Editar um lembrete"}, {\cf22 "4 --> Voltar"}, {\cf22 "5 --> Sair"}\});\par
776   setUsuario(*user_email);\par
777 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v next\:LembreteMenu}
{\xe \v LembreteMenu\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PrimeiroMenu} * LembreteMenu::next (unsigned  {\i option}, {\b PrimeiroMenu} *  {\i old_menu}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i opcao} \cell }{A op\'E7\'E3o que o usu\'E1rio escolheu\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i old_menu} \cell }{Um ponteiro que aponta para o menu anterior\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um ponteiro para o pr\'F3ximo menu \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Removendo o lembrete\par
}{
Implementa {\b PrimeiroMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 779                                                                         \{\par
780 \par
781     std::string usuario_atual = getUsuario();\par
782   \par
783   {\cf19 switch} (option) \{\par
784     {\cf19 case} 1: \{\par
785 \par
786         std::string novo_lembrete_data;\par
787         std::cout << {\cf22 "Insira uma data para seu lembrete"} << std::endl;\par
788         std::cin >> novo_lembrete_data;\par
789 \par
790         std::string novo_lembrete_horario;\par
791         std::cout << {\cf22 "Insira um horario para seu lembrete"} << std::endl;\par
792         std::cin >> novo_lembrete_horario;\par
793 \par
794         std::string novo_lembrete_mensagem;\par
795         std::cout << {\cf22 "Insira uma mensagem para seu lembrete"} << std::endl;\par
796         std::cin >> novo_lembrete_mensagem;\par
797 \par
798         std::cout << {\cf22 "Adicionando lembrete..."} << std::endl;\par
799 \par
800         Lembrete* new_lembrete = {\cf17 new} Lembrete(novo_lembrete_horario, novo_lembrete_mensagem, novo_lembrete_data);\par
801 \par
802         ListaLembrete::adicionarLembrete(new_lembrete, &usuario_atual);\par
803 \par
804         {\cf19 if} (ListaLembrete::buscarLembrete(&novo_lembrete_mensagem) != {\cf17 nullptr}) \{\par
805 \par
806             std::cout << {\cf22 "O lembrete foi adicionado com sucesso!"} << std::endl;\par
807         \}\par
808         {\cf19 else} \{\par
809 \par
810             std::cout << {\cf22 "Nao foi possivel adicionar o novo lembrete."} << std::endl;\par
811         \}\par
812         \par
813         {\cf19 return} {\cf17 new} LembreteMenu(&usuario_atual);\par
814     \}\par
815     {\cf19 case} 2: \{\par
816 \par
817         std::string mensagem_lembrete;\par
818         std::cout << std::endl << {\cf22 "Digite a mensagem do lembrete que deseja remover: "} << std::endl;\par
819         std::cin >> mensagem_lembrete;\par
820 \par
821         std::cout << {\cf22 "Buscando por lembrete..."} << std::endl;\par
822         \par
823         Lembrete* lembrete = ListaLembrete::buscarLembrete(&mensagem_lembrete);\par
824 \par
825         {\cf19 if} (lembrete != {\cf17 nullptr}) \{\par
826 \par
827             ListaLembrete::removerLembrete(lembrete, &usuario_atual); \par
828 \par
829             std::cout << {\cf22 "O lembrete com mensagem '"} << mensagem_lembrete << {\cf22 "' foi removido com sucesso!"} << std::endl;\par
830         \}\par
831         {\cf19 else} \{\par
832 \par
833             std::cout << {\cf22 "O lembrete com mensagem '"} << mensagem_lembrete << {\cf22 "' nao foi encontrado."} << std::endl;\par
834         \}\par
835 \par
836         {\cf19 return} {\cf17 new} LembreteMenu(&usuario_atual);\par
837     \}\par
838     {\cf19 case} 3: \{\par
839 \par
840         std::string mensagem_lembrete;\par
841         std::cout << std::endl << {\cf22 "Digite a mensagem do lembrete que deseja editar: "} << std::endl;\par
842         std::cin >> mensagem_lembrete;\par
843 \par
844         std::cout << {\cf22 "Buscando por lembrete..."} << std::endl;\par
845         \par
846         Lembrete* lembrete = ListaLembrete::buscarLembrete(&mensagem_lembrete);\par
847 \par
848         {\cf19 if} (lembrete != {\cf17 nullptr}) \{\par
849 \par
850             std::cout << {\cf22 "Alterando o lembrete..."} << std::endl\par
851             << {\cf22 "Mensagem: "} << lembrete->getMensagem() << std::endl\par
852             << {\cf22 "Data: "} << lembrete->getData() << std::endl\par
853             << {\cf22 "Horario: "} << lembrete->getHorario() << std::endl;\par
854             \par
855             std::cout << std::endl << {\cf22 "Voce deseja..."} << std::endl\par
856             << {\cf22 "1 --> Editar mensagem"} << std::endl\par
857             << {\cf22 "2 --> Editar data"} << std::endl\par
858             << {\cf22 "3 --> Editar horario"} << std::endl;\par
859 \par
860             {\cf18 unsigned} opcao_editar;\par
861 \par
862             {\cf19 switch} (opcao_editar) \{\par
863                 {\cf19 case} 1: \{\par
864 \par
865                     std::string nova_mensagem;\par
866                     std::cout << {\cf22 "Digite uma nova mensagem para o lembrete:"} << std::endl;\par
867                     std::cin >> nova_mensagem;\par
868 \par
869                     std::cout << {\cf22 "Alterando mensagem..."};\par
870 \par
871                     lembrete->setMensagem(nova_mensagem);\par
872 \par
873                     Lembrete* lembrete_alterado = ListaLembrete::buscarLembrete(&nova_mensagem);  \par
874 \par
875                     {\cf19 if} (lembrete_alterado != {\cf17 nullptr} && lembrete_alterado->getData() == lembrete->getData() && lembrete_alterado->getHorario() == lembrete->getHorario()) \{\par
876 \par
877                         std::cout << {\cf22 "A mensagem do lembrete foi alterada com sucesso para: "} << lembrete->getMensagem() << {\cf22 "!"} << std::endl;\par
878                     \}\par
879                     {\cf19 else} \{\par
880 \par
881                         std::cout << {\cf22 "Nao foi possivel alterar a mensagem do lembrete."} << std::endl;\par
882                     \}\par
883                 \}\par
884                 {\cf19 case} 2: \{\par
885 \par
886                     std::string nova_data;\par
887                     std::cout << {\cf22 "Digite uma nova data para o lembrete (no formato: DD/MM/AAAA):"} << std::endl;\par
888                     std::cin >> nova_data;\par
889 \par
890                     std::cout << {\cf22 "Alterando data..."};\par
891 \par
892                     lembrete->setData(nova_data);  \par
893 \par
894                     {\cf19 if} (lembrete->getData() == nova_data) \{\par
895 \par
896                         std::cout << {\cf22 "A data do lembrete foi alterada com sucesso para: "} << lembrete->getData() << {\cf22 "!"} << std::endl;\par
897                     \}\par
898                     {\cf19 else} \{\par
899 \par
900                         std::cout << {\cf22 "Nao foi possivel alterar a data do lembrete."} << std::endl;\par
901                     \}\par
902                 \}\par
903                 {\cf19 case} 3: \{\par
904 \par
905                     std::string novo_horario;\par
906                     std::cout << {\cf22 "Digite um novo horario para o lembrete (no formato: HH:MM:SS):"} << std::endl;\par
907                     std::cin >> novo_horario;\par
908 \par
909                     std::cout << {\cf22 "Alterando horario..."};\par
910 \par
911                     lembrete->setHorario(novo_horario);  \par
912 \par
913                     {\cf19 if} (lembrete->getHorario() == novo_horario) \{\par
914 \par
915                         std::cout << {\cf22 "O horario do lembrete foi alterado com sucesso para: "} << lembrete->getHorario() << {\cf22 "!"} << std::endl;\par
916                     \}\par
917                     {\cf19 else} \{\par
918 \par
919                         std::cout << {\cf22 "Nao foi possivel alterar o horario do lembrete."} << std::endl;\par
920                     \}\par
921                 \}\par
922             \} \par
923         \}\par
924         {\cf19 else} \{\par
925 \par
926             std::cout << {\cf22 "O lembrete com mensagem '"} << mensagem_lembrete << {\cf22 "' nao foi encontrado."} << std::endl;\par
927         \}\par
928 \par
929         {\cf19 return} {\cf17 new} LembreteMenu(&usuario_atual);\par
930     \}\par
931     {\cf19 case} 4: \{\par
932 \par
933         std::cout << {\cf22 "Voltando..."} << std::endl;\par
934         {\cf19 return} old_menu;\par
935     \}\par
936     \par
937     {\cf19 case} 5: \{\par
938       \par
939       std::cout << {\cf22 "Saindo do progama..."} << std::endl;\par
940       {\cf19 return} {\cf17 nullptr};\par
941     \}\par
942 \par
943     {\cf19 default}: \{\par
944         \par
945         std::cout << {\cf22 "Opcao invalida!"} << std::endl;\par
946         std::cout << {\cf22 "Escolha uma opcao valida!"} << std::endl;\par
947         {\cf19 return} {\cf17 new} LembreteMenu(&usuario_atual);\par
948     \}\par
949   \}\par
950 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/menu/{\b Menu.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/menu/{\b Menu.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ListaCompromisso\par \pard\plain 
{\tc\tcl2 \v ListaCompromisso}
{\xe \v ListaCompromisso}
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\par
{
{\f2 #include <Tarefa.hpp>}}\par
Diagrama de hierarquia da classe ListaCompromisso:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_lista_compromisso.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaCompromisso} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b tamanho} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da lista. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarCompromisso} ({\b Compromisso} *compromisso, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um compromisso a lista de compromissos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerCompromisso} ({\b Compromisso} *compromisso, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um compromisso da lista de compromissos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Compromisso} * {\b buscarCompromisso} (const std::string &compromisso_titulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca uma {\b Compromisso} pelo seu T\'EDtulo. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ListaCompromisso\:ListaCompromisso}
{\xe \v ListaCompromisso\:ListaCompromisso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ListaCompromisso::ListaCompromisso (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 165 \{ {\cf17 const} {\cf17 auto} _listadeCompromisso = std::unordered_map<std::string, Compromisso*>(); \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarCompromisso\:ListaCompromisso}
{\xe \v ListaCompromisso\:adicionarCompromisso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaCompromisso::adicionarCompromisso ({\b Compromisso} *  {\i compromisso}, std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um compromisso a lista de compromissos. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i compromisso} \cell }{O compromisso a ser adicionado\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Adicionando o compromisso na lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 454                                                                                            \{\par
455     \par
456     _listadeCompromisso.insert(std::make_pair(*user_email, compromisso)); \par
457 \}\par
}
}
{\xe \v buscarCompromisso\:ListaCompromisso}
{\xe \v ListaCompromisso\:buscarCompromisso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Compromisso} * ListaCompromisso::buscarCompromisso (const std::string &  {\i compromisso_titulo}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca uma {\b Compromisso} pelo seu T\'EDtulo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i compromisso_titulo} \cell }{O T\'EDtulo do {\b Compromisso} a ser buscado \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 475                                                                                     \{\par
476         {\cf17 auto} it = _listadeCompromisso.find(compromisso_titulo);\par
477         {\cf19 if} (it != _listadeCompromisso.end()) \{\par
478             {\cf19 return} (it->second);\par
479         \} {\cf19 else} \{\par
480             {\cf19 return} {\cf17 nullptr}; {\cf20 // Compromisso n\'E3o encontrado}\par
481         \}\par
482     \}\par
}
}
{\xe \v removerCompromisso\:ListaCompromisso}
{\xe \v ListaCompromisso\:removerCompromisso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaCompromisso::removerCompromisso ({\b Compromisso} *  {\i compromisso}, std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um compromisso da lista de compromissos. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i compromisso} \cell }{O compromisso a ser removido\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 460                                                                                          \{\par
461     {\cf17 auto} it = std::find_if(\par
462         _listadeCompromisso.begin(),\par
463         _listadeCompromisso.end(),\par
464         [user_email, compromisso]({\cf17 const} {\cf17 auto} & p) \{\par
465             return (p.first == *user_email && p.second == compromisso);\par
466             {\cf20 // Use p.first e p.second em vez de p->first e p->second}\par
467         \}\par
468     );\par
469 \par
470     {\cf19 if} (it != _listadeCompromisso.end()) \{\par
471         _listadeCompromisso.erase(it);\par
472     \}\par
473 \}\par
}
}
{\xe \v tamanho\:ListaCompromisso}
{\xe \v ListaCompromisso\:tamanho}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned ListaCompromisso::tamanho ()}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um unsigned com o tamanho \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retornando o tamanho da lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 484                                    \{\par
485 \par
486     {\cf19 return} _listadeCompromisso.size(); \par
487 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Tarefa.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Tarefa.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ListaLembrete\par \pard\plain 
{\tc\tcl2 \v ListaLembrete}
{\xe \v ListaLembrete}
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\par
{
{\f2 #include <Lembrete.hpp>}}\par
Diagrama de hierarquia da classe ListaLembrete:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_lista_lembrete.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaLembrete} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b tamanho} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho do mapa. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarLembrete} ({\b Lembrete} *lembrete, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um {\b Lembrete} a lista de Lembretes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerLembrete} ({\b Lembrete} *lembrete, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um lembrete da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Lembrete} * {\b buscarLembrete} (std::string *mensagem)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Procura pelo lembrete pela mensagem. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ListaLembrete\:ListaLembrete}
{\xe \v ListaLembrete\:ListaLembrete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ListaLembrete::ListaLembrete (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 54 \{ {\cf17 const} {\cf17 auto} _listadeLembretes = std::unordered_map<std::string, Lembrete*>(); \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarLembrete\:ListaLembrete}
{\xe \v ListaLembrete\:adicionarLembrete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaLembrete::adicionarLembrete ({\b Lembrete} *  {\i lembrete}, std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um {\b Lembrete} a lista de Lembretes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lembrete} \cell }{O lembrete a ser adicionado\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usu\'E1rio logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Adicionando o lembrete na lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 194                                                                                \{\par
195 \par
196     _listadeLembretes.insert(std::make_pair(*user_email, lembrete)); \par
197 \}\par
}
}
{\xe \v buscarLembrete\:ListaLembrete}
{\xe \v ListaLembrete\:buscarLembrete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Lembrete} * ListaLembrete::buscarLembrete (std::string *  {\i mensagem}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Procura pelo lembrete pela mensagem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mensagem} \cell }{A mensagem do lembrete a ser buscado \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 213                                                            \{\par
214     {\cf17 auto} it = std::find_if(\par
215         _listadeLembretes.begin(),\par
216         _listadeLembretes.end(),\par
217         [mensagem]({\cf17 const} {\cf17 auto} & p) \{ return (p.second->getMensagem() == *mensagem); \}\par
218         {\cf20 // Corrigido para acessar a mensagem corretamente com p.second->getMensagem()}\par
219     );\par
220 \par
221     {\cf19 if} (it != _listadeLembretes.end()) \{\par
222         {\cf19 return} it->second;\par
223     \} {\cf19 else} \{\par
224         {\cf19 return} {\cf17 nullptr};\par
225     \}\par
226 \}\par
}
}
{\xe \v removerLembrete\:ListaLembrete}
{\xe \v ListaLembrete\:removerLembrete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaLembrete::removerLembrete ({\b Lembrete} *  {\i lembrete}, std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um lembrete da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lembrete} \cell }{O lembrete a ser removido\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usu\'E1rio logado \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 199                                                                              \{\par
200     \par
201     {\cf17 auto} it = std::find_if(\par
202         _listadeLembretes.begin(), _listadeLembretes.end(), \par
203         [user_email, lembrete]({\cf17 const} {\cf17 auto} & p) \par
204         \{ return (p.first == *user_email && p.second == lembrete); \}\par
205         {\cf20 // Utilize p.first e p.second para acessar os elementos do par corretamente}\par
206     );\par
207 \par
208     {\cf19 if} (it != _listadeLembretes.end()) \{\par
209         _listadeLembretes.erase(it);\par
210     \}\par
211 \}\par
}
}
{\xe \v tamanho\:ListaLembrete}
{\xe \v ListaLembrete\:tamanho}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned ListaLembrete::tamanho ()}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho do mapa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um unsigned com o tamanho \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Lembrete.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Lembrete.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ListaTarefa\par \pard\plain 
{\tc\tcl2 \v ListaTarefa}
{\xe \v ListaTarefa}
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\par
{
{\f2 #include <Tarefa.hpp>}}\par
Diagrama de hierarquia da classe ListaTarefa:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_lista_tarefa.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaTarefa} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b tamanho} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da lista. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarTarefa} ({\b Tarefa} *tarefa, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona uma tarefa na lista de tarefas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerTarefa} ({\b Tarefa} *tarefa, std::string *user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove uma tarefa da lista de tarefas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Tarefa} * {\b buscarTarefa} (const std::string &tarefa_titulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca uma {\b Tarefa} pelo seu T\'EDtulo. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ListaTarefa\:ListaTarefa}
{\xe \v ListaTarefa\:ListaTarefa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ListaTarefa::ListaTarefa (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 134 \{ {\cf17 const} {\cf17 auto} _listadeTarefa = std::unordered_map<std::string, Tarefa*>(); \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarTarefa\:ListaTarefa}
{\xe \v ListaTarefa\:adicionarTarefa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaTarefa::adicionarTarefa ({\b Tarefa} *  {\i tarefa}, std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona uma tarefa na lista de tarefas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tarefa} \cell }{A tarefa a ser adicionada\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Adicionando a tarefa na lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 385                                                                        \{\par
386 \par
387     _listadeTarefa.insert(std::make_pair(*user_email, tarefa)); \par
388 \}\par
}
}
{\xe \v buscarTarefa\:ListaTarefa}
{\xe \v ListaTarefa\:buscarTarefa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Tarefa} * ListaTarefa::buscarTarefa (const std::string &  {\i tarefa_titulo}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca uma {\b Tarefa} pelo seu T\'EDtulo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tarefa_titulo} \cell }{o T\'EDtulo da {\b Tarefa} a ser procurada \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 405                                                                \{\par
406     {\cf17 auto} it =_listadeTarefa.find(tarefa_titulo);\par
407         {\cf19 if} (it != _listadeTarefa.end()) \{\par
408             {\cf19 return} (it->second);\par
409         \} {\cf19 else} \{\par
410             {\cf19 return} {\cf17 nullptr}; {\cf20 // Tarefa n\'E3o encontrada}\par
411         \}\par
412 \}\par
}
}
{\xe \v removerTarefa\:ListaTarefa}
{\xe \v ListaTarefa\:removerTarefa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaTarefa::removerTarefa ({\b Tarefa} *  {\i tarefa}, std::string *  {\i user_email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove uma tarefa da lista de tarefas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tarefa} \cell }{a {\b Tarefa} a ser removida\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 390                                                                      \{\par
391     {\cf17 auto} it = std::find_if(\par
392         _listadeTarefa.begin(),\par
393         _listadeTarefa.end(),\par
394         [user_email, tarefa]({\cf17 const} {\cf17 auto} & p) \{\par
395             return (p.first == *user_email && p.second == tarefa);\par
396             {\cf20 // Utilize p.first e p.second em vez de p->first e p->second}\par
397         \}\par
398     );\par
399 \par
400     {\cf19 if} (it != _listadeTarefa.end()) \{\par
401         _listadeTarefa.erase(it);\par
402     \}\par
403 \}\par
}
}
{\xe \v tamanho\:ListaTarefa}
{\xe \v ListaTarefa\:tamanho}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned ListaTarefa::tamanho ()}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcula o tamanho da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um unsigned com o tamanho \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retornando o tamanho da lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 414                               \{\par
415 \par
416     {\cf19 return} _listadeTarefa.size(); \par
417 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Tarefa.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Tarefa.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe ListaUsuario\par \pard\plain 
{\tc\tcl2 \v ListaUsuario}
{\xe \v ListaUsuario}
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\par
{
{\f2 #include <Usuario.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ListaUsuario} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adicionarUsuario} ({\b Usuario} *usuario)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um {\b Usuario} a lista de Usuarios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removerUsuario} ({\b Usuario} *usuario)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um {\b Usuario} da lista de Usuarios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b checkUsuario} (std::string *email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o usuario existe. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b checkUsuario} (std::string *email, std::string *nome)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o email e o nome fornecidos correpondem na lista. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ListaUsuario\:ListaUsuario}
{\xe \v ListaUsuario\:ListaUsuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ListaUsuario::ListaUsuario (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52 \{ {\cf17 const} {\cf17 auto} _listadeUsuario = std::unordered_map<std::string, Usuario>(); \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarUsuario\:ListaUsuario}
{\xe \v ListaUsuario\:adicionarUsuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaUsuario::adicionarUsuario ({\b Usuario} *  {\i usuario}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adiciona um {\b Usuario} a lista de Usuarios. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i usuario} \cell }{O {\b Usuario} a ser adicionado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Adicionando o email do usuario logado na lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 139                                                     \{\par
140     \par
141     _listadeusuario.insert(std::make_pair(usuario->getEmail(), *usuario)); \par
142 \}\par
}
}
{\xe \v checkUsuario\:ListaUsuario}
{\xe \v ListaUsuario\:checkUsuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ListaUsuario::checkUsuario (std::string *  {\i email}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o usuario existe. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esse \'E9 um m\'E9todo provido por conveni\'EAncia. Ele difere do m\'E9todo acima apenas na lista de argumentos que devem ser utilizados.\par
Verifica se o email ja esta cadastrado\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i email} \cell }{O email do usuario a ser verificado\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True se o usuario existe, false caso contrario \par
 \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Procura o usuario na lista pelo email\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 149                                                 \{\par
150 \par
151     {\cf17 auto} it = _listadeusuario.find(*email); \par
152 \par
153     {\cf19 return} (it != _listadeusuario.end());\par
154 \}\par
}
}
{\xe \v checkUsuario\:ListaUsuario}
{\xe \v ListaUsuario\:checkUsuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ListaUsuario::checkUsuario (std::string *  {\i email}, std::string *  {\i nome}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o email e o nome fornecidos correpondem na lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esse \'E9 um m\'E9todo provido por conveni\'EAncia. Ele difere do m\'E9todo acima apenas na lista de argumentos que devem ser utilizados.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i email} \cell }{O email fornecido\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome} \cell }{O nome fornecido\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True se o nome e o email correpondem, false caso contrario \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Procura o usuario na lista pelo email\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 156                                                                  \{\par
157 \par
158     {\cf17 auto} it = _listadeusuario.find(*email); \par
159 \par
160     {\cf19 return} (it != _listadeusuario.end() && it->second.getEmail() == *email);\par
161 \}\par
}
}
{\xe \v removerUsuario\:ListaUsuario}
{\xe \v ListaUsuario\:removerUsuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListaUsuario::removerUsuario ({\b Usuario} *  {\i usuario}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove um {\b Usuario} da lista de Usuarios. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i usuario} \cell }{O {\b Usuario} a ser removido \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Removendo o {\b Usuario} da lista\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 144                                                   \{\par
145 \par
146     _listadeusuario.erase(usuario->getEmail()); \par
147 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Usuario.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Usuario.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe MenuLogin\par \pard\plain 
{\tc\tcl2 \v MenuLogin}
{\xe \v MenuLogin}
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\par
{
{\f2 #include <Menu.hpp>}}\par
Diagrama de hierarquia da classe MenuLogin:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_menu_login.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MenuLogin} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu de login. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PrimeiroMenu} * {\b next} (unsigned opcao, {\b PrimeiroMenu} *old_menu) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b PrimeiroMenu}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PrimeiroMenu} ()=default\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getUsuario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsuario} (std::string user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string novo_Titulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubtitulo} (std::string novo_Subtitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOpcoes} (std::vector< std::string > novasOpcoes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderizar} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v MenuLogin\:MenuLogin}
{\xe \v MenuLogin\:MenuLogin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MenuLogin::MenuLogin ()}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu de login. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 57                      \{\par
58 \par
59   setTitulo({\cf22 "Seja bem-vindo ao Gerenciador de Tarefas! "});\par
60   setSubtitulo({\cf22 "Escolha uma opcao:"});\par
61   setOpcoes(\{{\cf22 "1 --> Fazer login"}, {\cf22 "2 --> Fazer novo cadastro"}, {\cf22 "3 --> Sair do programa"}\});\par
62 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v next\:MenuLogin}
{\xe \v MenuLogin\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PrimeiroMenu} * MenuLogin::next (unsigned  {\i opcao}, {\b PrimeiroMenu} *  {\i old_menu}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i opcao} \cell }{A op\'E7\'E3o que o usu\'E1rio escolheu\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i old_menu} \cell }{Um ponteiro que aponta para o menu anterior\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um ponteiro para o pr\'F3ximo menu \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o usuario esta cadastrado no sistema com o email e nome fornecidos\par
}{
Implementa {\b PrimeiroMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 64                                                                      \{\par
65   \par
66   {\cf19 switch} (option) \{\par
67     {\cf19 case} 1: \{\par
68 \par
69       std::string login_email;\par
70       std::cout << std::endl << {\cf22 "> Digite seu email: "};\par
71       std::cin >> login_email;\par
72 \par
73       std::string login_nome;\par
74       std::cout << {\cf22 "> Digite seu nome: "};\par
75       std::cin >> login_nome;\par
76 \par
77       std::cout << {\cf22 "Fazendo login..."} << std::endl << std::endl;\par
78 \par
80       {\cf19 if} (ListaUsuario::checkUsuario(&login_email, &login_nome)) \{ \par
81         \par
82         std::cout << {\cf22 "Logado com sucesso em: "} << login_nome << {\cf22 " ("} << login_email << {\cf22 ")!"} << std::endl;\par
83         \par
84         {\cf19 return} {\cf17 new} UsuarioMenu(&login_email);\par
85       \}\par
86       {\cf19 else} \{\par
87         std::cout << {\cf22 "Usuario nao encontrado!"} << std::endl << std::endl;\par
88         std::cout << {\cf22 "Ainda nao possui uma conta? Seleciona a opcao 2 para criar um novo cadastro."} << std::endl << std::endl;\par
89         \par
90         {\cf19 return} {\cf17 new} MenuLogin();\par
91       \}\par
92     \}\par
93     \par
94     {\cf19 case} 2: \{\par
95 \par
96       std::string register_email;\par
97       std::cout << {\cf22 "> Insira o seu email: "};\par
98       std::cin >> register_email;\par
99 \par
100       std::string register_nome;\par
101       std::cout << {\cf22 "> Insira o seu primeiro nome: "};\par
102       std::cin >> register_nome;\par
103       \par
104       std::string register_sobrenome;\par
105       std::cout << {\cf22 "> Insira o seu sobrenome: "};\par
106       std::cin >> register_sobrenome;\par
107 \par
108       std::string register_idade;\par
109       std::cout << {\cf22 "> Insira a sua idade: "};\par
110       std::cin >> register_idade;\par
111 \par
112       {\cf19 if} (ListaUsuario::checkUsuario(&register_email)) \{\par
113 \par
114         std::cout << {\cf22 "O email informado ja esta cadastrado, favor inserir outro!"} << std::endl << std::endl;\par
115         std::cout << {\cf22 "Se deseja acessar a plataforma, selecione a opcao 1."} << std::endl << std::endl;\par
116 \par
117         {\cf19 return} {\cf17 new} MenuLogin();\par
118       \} {\cf19 else} \{\par
119 \par
120         std::cout << {\cf22 "Cadastrando usuario..."} << std::endl;\par
121 \par
122         Usuario* new_user = {\cf17 new} Usuario(register_nome, register_sobrenome, register_idade, register_email);\par
123         \par
124         ListaUsuario::adicionarUsuario(new_user);\par
125 \par
126         {\cf19 if} (ListaUsuario::checkUsuario(&register_email, &register_nome)) \{\par
127           \par
128           std::cout << {\cf22 "Usuario "} << register_nome << {\cf22 " ("} << register_email << {\cf22 ") cadastrado com sucesso!"} << std::endl;\par
129           \par
130           {\cf19 return} {\cf17 new} UsuarioMenu(&register_email);\par
131         \}\par
132         {\cf19 else} \{\par
133 \par
134           std::cout << {\cf22 "Nao foi possivel cadastrar o novo usuario!"} << std::endl;\par
135 \par
136           {\cf19 return} {\cf17 new} MenuLogin();\par
137         \}\par
138       \}\par
139     \}\par
140 \par
141     {\cf19 case} 3: \{\par
142 \par
143       std::cout << {\cf22 "Saindo do programa..."} <<  std::endl;\par
144       {\cf19 return} {\cf17 nullptr};\par
145     \}\par
146 \par
147     {\cf19 default}: \{\par
148 \par
149       std::cout << {\cf22 "Opcao invalida!"} << std::endl;\par
150       std::cout << {\cf22 "Escolha uma opcao valida!"} << std::endl;\par
151       {\cf19 return} {\cf17 new} MenuLogin();\par
152     \}\par
153   \}\par
154 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/menu/{\b Menu.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/menu/{\b Menu.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Notificacao\par \pard\plain 
{\tc\tcl2 \v Notificacao}
{\xe \v Notificacao}
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par
{
{\f2 #include <Notificacao.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Notificacao} (const int hora_Antes, const int min_Antes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b notificar} ({\b Compromisso} *compromisso)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compara com o horario real e notifica um compromisso no horario programado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b notificar} ({\b Lembrete} *lembrete)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compara com o horario real e notifica um lembrete no horario programado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ativarNotificacao} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa uma notifica\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b desativarNotificacao} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa uma notifica\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkEstado} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica o estado da notifica\'E7\'E3o. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Notificacao\:Notificacao}
{\xe \v Notificacao\:Notificacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Notificacao::Notificacao (const int  {\i hora_Antes}, const int  {\i min_Antes})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                                                   \{\par
8     _min_Antes = min_antes;\par
9     _hora_Antes = hora_antes;\par
10     _estado = {\cf17 true};\par
11 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v ativarNotificacao\:Notificacao}
{\xe \v Notificacao\:ativarNotificacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Notificacao::ativarNotificacao ()}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa uma notifica\'E7\'E3o. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 47                                     \{\par
48     _estado = {\cf17 true};\par
49 \}\par
}
}
{\xe \v checkEstado\:Notificacao}
{\xe \v Notificacao\:checkEstado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Notificacao::checkEstado ()}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica o estado da notifica\'E7\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true (se est\'E1 ativada) ou false (se est\'E1 desativada) \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 55                               \{\par
56     {\cf19 return} _estado;\par
57 \}\par
}
}
{\xe \v desativarNotificacao\:Notificacao}
{\xe \v Notificacao\:desativarNotificacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Notificacao::desativarNotificacao ()}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa uma notifica\'E7\'E3o. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51                                        \{\par
52     _estado = {\cf17 false};\par
53 \}\par
}
}
{\xe \v notificar\:Notificacao}
{\xe \v Notificacao\:notificar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Notificacao::notificar ({\b Compromisso} *  {\i compromisso})}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compara com o horario real e notifica um compromisso no horario programado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i compromisso} \cell }{O compromisso a ser notificado \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                                     \{\par
14     time_t timer;\par
15     {\cf17 struct }tm *horarioLocal;\par
16     time(&timer); {\cf20 // Obtem informa\'E7\'F5es de data e hora}\par
17     horarioLocal = localtime(&timer); {\cf20 // Converte a hora atual para a hora local}\par
18 \par
19     {\cf18 int} horaAtual = horarioLocal->tm_hour;\par
20     {\cf18 int} minAtual = horarioLocal->tm_min;\par
21 \par
22     {\cf18 int} horaCompromisso = compromisso->getHorario()[0] + compromisso->getHorario()[1];\par
23     {\cf18 int} minCompromisso = compromisso->getHorario()[3] + compromisso->getHorario()[4];\par
24 \par
25     {\cf19 if} (_estado && horaCompromisso - _hora_Antes == horaAtual && minCompromisso - _min_Antes == minAtual) \{\par
26         cout << compromisso->getDescricao() << {\cf22 " Daqui a: "} << _hora_Antes << {\cf22 "h e "} << _min_Antes << {\cf22 "min"} << endl;\par
27     \}\par
28 \}\par
}
}
{\xe \v notificar\:Notificacao}
{\xe \v Notificacao\:notificar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Notificacao::notificar ({\b Lembrete} *  {\i lembrete})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compara com o horario real e notifica um lembrete no horario programado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lembrete} \cell }{O lembrete a ser notificado \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                               \{\par
31     time_t timer;\par
32     {\cf17 struct }tm *horarioLocal;\par
33     time(&timer); {\cf20 // Obtem informa\'E7\'F5es de data e hora}\par
34     horarioLocal = localtime(&timer); {\cf20 // Converte a hora atual para a hora local}\par
35 \par
36     {\cf18 int} horaAtual = horarioLocal->tm_hour;\par
37     {\cf18 int} minAtual = horarioLocal->tm_min;\par
38     \par
39     {\cf18 int} horaLembrete = lembrete->getHorario()[0] + lembrete->getHorario()[1];\par
40     {\cf18 int} minLembrete = lembrete->getHorario()[3] + lembrete->getHorario()[4];\par
41 \par
42     {\cf19 if} (_estado && horaLembrete - _hora_Antes == horaAtual && minLembrete - _min_Antes == minAtual) \{\par
43         cout << lembrete->getMensagem() << {\cf22 " Daqui a: "} << _hora_Antes << {\cf22 "h e "} << _min_Antes << {\cf22 "min"} << endl;\par
44     \}\par
45 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Notificacao.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Notificacao.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe PrimeiroMenu\par \pard\plain 
{\tc\tcl2 \v PrimeiroMenu}
{\xe \v PrimeiroMenu}
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\par
{
{\f2 #include <Menu.hpp>}}\par
Diagrama de hierarquia da classe PrimeiroMenu:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_primeiro_menu.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PrimeiroMenu} ()=default\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b PrimeiroMenu} * {\b next} (unsigned opcao, {\b PrimeiroMenu} *old_menu)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getUsuario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsuario} (std::string user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string novo_Titulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubtitulo} (std::string novo_Subtitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOpcoes} (std::vector< std::string > novasOpcoes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderizar} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~PrimeiroMenu\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:~PrimeiroMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual PrimeiroMenu::~PrimeiroMenu (){\f2 [virtual]}, {\f2 [default]}}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getUsuario\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:getUsuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string PrimeiroMenu::getUsuario () const}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String com email do usuario logado \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                          \{\par
14 \par
15   {\cf19 return} this->_user_email;\par
16 \} \par
}
}
{\xe \v next\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b PrimeiroMenu} * PrimeiroMenu::next (unsigned  {\i opcao}, {\b PrimeiroMenu} *  {\i old_menu}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i opcao} \cell }{A op\'E7\'E3o que o usu\'E1rio escolheu\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i old_menu} \cell }{Um ponteiro que aponta para o menu anterior\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um ponteiro para o pr\'F3ximo menu \par
}}}{
Implementado por {\b MenuLogin} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b UsuarioMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b TarefaMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b LembreteMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADI \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b CompromissoMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v renderizar\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:renderizar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PrimeiroMenu::renderizar () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 38                                     \{\par
39 \par
40   std::string border(_titulo.size() + 5, {\cf23 '='});\par
41   std::cout << border << {\cf23 '\\n'};\par
42   std::cout << {\cf22 "|| "} << _titulo << {\cf22 "||"} << {\cf23 '\\n'};\par
43   std::cout << border << {\cf22 "\\n\\n"};\par
44 \par
45   std::cout << _sub_titulo << {\cf23 '\\n'} << {\cf23 '\\n'};\par
46 \par
47   {\cf19 for} (std::string opt : _opcoes) \{\par
48     \par
49     std::cout << opt << {\cf23 '\\n'};\par
50   \}\par
51   \par
52   std::cout << border << {\cf22 "\\n\\n"};\par
53   \par
54   std::cout << std::endl << {\cf22 "> Escolha: "};\par
55 \}\par
}
}
{\xe \v setOpcoes\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:setOpcoes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PrimeiroMenu::setOpcoes (std::vector< std::string >  {\i novasOpcoes})}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novasOpcoes} \cell }{As novas opcoes a serem adicionadas \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                                              \{\par
34 \par
35   this->_opcoes = novasOpcoes;\par
36 \}\par
}
}
{\xe \v setSubtitulo\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:setSubtitulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PrimeiroMenu::setSubtitulo (std::string  {\i novo_Subtitulo})}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novo_Subtitulo} \cell }{O novo subtitulo do menu \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28                                                         \{\par
29 \par
30   this->_sub_titulo = novoSubstitulo;\par
31 \}\par
}
}
{\xe \v setTitulo\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:setTitulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PrimeiroMenu::setTitulo (std::string  {\i novo_Titulo})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novo_Titulo} \cell }{O novo titulo do menu \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23                                                  \{\par
24   \par
25   this->_titulo = novoTitulo;\par
26 \}\par
}
}
{\xe \v setUsuario\:PrimeiroMenu}
{\xe \v PrimeiroMenu\:setUsuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PrimeiroMenu::setUsuario (std::string  {\i user_email})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i user_email} \cell }{O email do usuario logado \par
 \cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18                                                   \{\par
19 \par
20   this->_user_email = user_email;\par
21 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/menu/{\b Menu.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/menu/{\b Menu.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Tarefa\par \pard\plain 
{\tc\tcl2 \v Tarefa}
{\xe \v Tarefa}
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
\par
{
{\f2 #include <Tarefa.hpp>}}\par
Diagrama de hierarquia da classe Tarefa:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tarefa.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Tarefa} (std::string &titulo, std::string &descricao, std::string &data, unsigned prioridade, std::string &estado)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getTitulo} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo titulo da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getDescricao} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela descri\'E7ao da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getData} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela data da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b getPrioridade} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela prioridade da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getEstado} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo estado da tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (const std::string &novo_Titulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDescricao} (const std::string &nova_Descricao)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a descri\'E7ao de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const std::string &nova_Data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a data de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPrioridade} (unsigned nova_Prioridade)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a prioridade de uma tarefa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEstado} (const std::string &novo_Estado)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o estado de uma tarefa. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Tarefa\:Tarefa}
{\xe \v Tarefa\:Tarefa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Tarefa::Tarefa (std::string &  {\i titulo}, std::string &  {\i descricao}, std::string &  {\i data}, unsigned  {\i prioridade}, std::string &  {\i estado})}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                                                                                                                \{\par
13     _titulo = titulo;\par
14     _descricao = descricao;\par
15     _data = data;\par
16     _prioridade = prioridade;\par
17     _estado = estado;\par
18 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getData\:Tarefa}
{\xe \v Tarefa\:getData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Tarefa::getData () const}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela data da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String da data \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a data\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                 \{\par
31 \par
32     {\cf19 return} this->_data; \par
33 \}\par
}
}
{\xe \v getDescricao\:Tarefa}
{\xe \v Tarefa\:getDescricao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Tarefa::getDescricao () const}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela descri\'E7ao da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String da descri\'E7ao \par
 \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a descri\'E7ao\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                      \{\par
26 \par
27     {\cf19 return} this->_descricao; \par
28 \}\par
}
}
{\xe \v getEstado\:Tarefa}
{\xe \v Tarefa\:getEstado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Tarefa::getEstado () const}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo estado da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do estado (feito, em progresso, nao feito) \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o estado\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 40                                   \{\par
41 \par
42     {\cf19 return} this->_estado; \par
43 \}\par
}
}
{\xe \v getPrioridade\:Tarefa}
{\xe \v Tarefa\:getPrioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned Tarefa::getPrioridade () const}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela prioridade da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Unsigned (1, 2 ou 3) \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a prioridade\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                      \{\par
36 \par
37     {\cf19 return} this->_prioridade; \par
38 \}\par
}
}
{\xe \v getTitulo\:Tarefa}
{\xe \v Tarefa\:getTitulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Tarefa::getTitulo () const}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo titulo da tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do titulo \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o titulo\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                                   \{\par
21 \par
22     {\cf19 return} this->_titulo; \par
23 \}\par
}
}
{\xe \v setData\:Tarefa}
{\xe \v Tarefa\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tarefa::setData (const std::string &  {\i nova_Data})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a data de uma tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nova_Data} \cell }{A nova data a ser colocada\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A data informada deve estar no formato: DD/MM/AAAA \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica o formato da nova data\par
< Limitador deve ser '/'\par
Obtem a data atual do sistema\par
Converte time_point para time_t\par
Converte time_t para uma struct tm\par
< Inicializa o struct da nova data\par
< Atribui o dia da nova data\par
< Atribui o mes da nova data (os meses s\'E3o de 0 a 11)\par
< Atribui o ano da nova data (os anos s\'E3o contados a partir de 1900)\par
Converte a nova data de time_t para time_point\par
< Atribui a nova data\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 91                                                \{\par
92 \par
93     {\cf19 try} \{\par
95         std::istringstream iss(nova_Data);\par
96         {\cf18 int} dia, mes, ano;\par
97         {\cf18 char} limitador; \par
98 \par
99         {\cf19 if} (!(iss >> dia >> limitador >> mes >> limitador >> ano) || limitador != {\cf23 '/'}) \{\par
100             \par
101             {\cf19 throw} std::invalid_argument({\cf22 "Formato da data invalido"});\par
102         \}\par
103 \par
105         {\cf17 auto} timepoint_agora = std::chrono::system_clock::now();\par
106     \par
108         std::time_t time_t_agora = std::chrono::system_clock::to_time_t(timepoint_agora);\par
109     \par
111         {\cf17 struct }std::tm* tmAtual = std::localtime(&time_t_agora);\par
112 \par
113         {\cf20 // Cria uma representacao da nova data}\par
114         std::tm tmNovaData = \{0\}; \par
115         tmNovaData.tm_mday = dia; \par
116         tmNovaData.tm_mon = mes - 1; \par
117         tmNovaData.tm_year = ano - 1900; \par
118 \par
120         {\cf17 auto} timepoint_novadata = std::chrono::system_clock::from_time_t(std::mktime(&tmNovaData));\par
121 \par
122         {\cf20 // Verifica se a nova data esta no futuro}\par
123         {\cf19 if} (timepoint_novadata <= timepoint_agora) \{\par
124         \par
125             {\cf19 throw} std::logic_error({\cf22 "Data no passado"});\par
126         \}\par
127 \par
128         this->_data = nova_Data; \par
129     \}\par
130     {\cf19 catch} ({\cf17 const} std::invalid_argument& e) \{\par
131         \par
132         std::cout << {\cf22 "Data deve estar no formato DD/MM/AAAA"} << std::endl;\par
133         \par
134         handleExcecao(e);\par
135     \}\par
136     {\cf19 catch} ({\cf17 const} std::logic_error& e) \{\par
137 \par
138         std::cout << {\cf22 "Impossivel adicionar uma tarefa ou compromisso para datas anteriores a atual"} << std::endl;\par
139         \par
140         handleExcecao(e);\par
141     \}\par
142     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
143     \par
144         handleExcecao(e);\par
145     \}\par
146 \}\par
}
}
{\xe \v setDescricao\:Tarefa}
{\xe \v Tarefa\:setDescricao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tarefa::setDescricao (const std::string &  {\i nova_Descricao})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a descri\'E7ao de uma tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nova_Descricao} \cell }{A nova descri\'E7ao a ser colocada \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Limite de caracteres para a nova descricao\par
Verifica se a nova descricao eh valida\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 68                                                          \{\par
69 \par
70     {\cf19 try} \{\par
71         {\cf17 const} {\cf18 size_t} MAX_CARACTERES = 120; \par
72 \par
74         {\cf19 if} (!nova_Descricao.length() || !nova_Descricao.empty()) \{\par
75 \par
76             this->_descricao = nova_Descricao; {\cf20 //< Atribui a nova descricao}\par
77         \}\par
78         {\cf19 else} \{\par
79         \par
80             {\cf19 throw} std::invalid_argument({\cf22 "Descricao invalida"});\par
81         \}\par
82     \}\par
83     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
84         \par
85         std::cout << {\cf22 "Descricao deve possuir entre 1 e 120 caracteres"} << std::endl;\par
86         \par
87         handleExcecao(e);\par
88     \}\par
89 \}\par
}
}
{\xe \v setEstado\:Tarefa}
{\xe \v Tarefa\:setEstado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tarefa::setEstado (const std::string &  {\i novo_Estado})}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o estado de uma tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novo_Estado} \cell }{O novo estado a ser colocado\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O estado varia entre: feito (deletar em seguida), em progresso, n\'E3o feito (alertar). \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o novo estado eh valido\par
< Atribui o novo estado\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 171                                                    \{\par
172 \par
173     {\cf19 try} \{    \par
175         {\cf19 if} (novo_Estado == {\cf22 "feito"} || novo_Estado == {\cf22 "em progresso"} || novo_Estado == {\cf22 "n\'E3o feito"}) \{\par
176         \par
177             this->_estado = novo_Estado; \par
178         \}\par
179         {\cf19 else} \{\par
180 \par
181             {\cf19 throw} std::invalid_argument({\cf22 "Estado invalido"});\par
182         \}\par
183     \}\par
184     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
185 \par
186         std::cout << {\cf22 "O estado deve ser: "} << std::endl\par
187         << {\cf22 "    - 'feito'"} << std::endl \par
188         << {\cf22 "    - 'em progresso'"} << std::endl \par
189         << {\cf22 "    - 'nao feito'"} << std::endl;\par
190 \par
191         handleExcecao(e);\par
192     \}    \par
193 \}\par
}
}
{\xe \v setPrioridade\:Tarefa}
{\xe \v Tarefa\:setPrioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tarefa::setPrioridade (unsigned  {\i nova_Prioridade})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a prioridade de uma tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nova_Prioridade} \cell }{A nova prioridade a ser colocada\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Aten\'E7\'E3o\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A prioridade varia entre: 1 --> menos importante, 2 --> importante, 3 --> muito importante. \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a nova prioridade eh valida\par
< Atribui a nova prioridade\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 148                                                          \{\par
149     {\cf19 try} \{\par
151         {\cf19 if} (nova_Prioridade == 1 || nova_Prioridade == 2 || nova_Prioridade == 3) \{\par
152         \par
153             this->_prioridade = nova_Prioridade; \par
154         \}\par
155         {\cf19 else} \{\par
156 \par
157             {\cf19 throw} std::invalid_argument({\cf22 "Prioridade invalida"});\par
158         \}\par
159     \}\par
160     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
161 \par
162         std::cout << {\cf22 "A prioridade deve ser: "} << std::endl\par
163         << {\cf22 "    - '1' para menos importante"} << std::endl\par
164         << {\cf22 "    - '2' para importante"} << std::endl\par
165         << {\cf22 "    - '3' para mais importante"} << std::endl;\par
166         \par
167         handleExcecao(e);\par
168     \}\par
169 \}\par
}
}
{\xe \v setTitulo\:Tarefa}
{\xe \v Tarefa\:setTitulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Tarefa::setTitulo (const std::string &  {\i novo_Titulo})}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo de uma tarefa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novo_Titulo} \cell }{O novo titulo a ser colocado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Limite de caracteres para o novo titulo\par
Verifica se o novo titulo eh valido\par
< Atribui o novo titulo\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45                                                    \{\par
46 \par
47     {\cf19 try} \{\par
48         {\cf17 const} {\cf18 size_t} MAX_CARACTERES = 50; \par
49 \par
51         {\cf19 if} (!novo_Titulo.length() >= MAX_CARACTERES || !novo_Titulo.empty()) \{\par
52 \par
53             this->_titulo = novo_Titulo; \par
54         \}\par
55         {\cf19 else} \{\par
56 \par
57             {\cf19 throw} std::invalid_argument({\cf22 "Titulo invalido"});\par
58         \}\par
59     \} \par
60     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
61         \par
62         std::cout << {\cf22 "Titulo deve possuir entre 1 e 50 caracteres"} << std::endl;\par
63         \par
64         handleExcecao(e);\par
65     \}\par
66 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Tarefa.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Tarefa.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe TarefaMenu\par \pard\plain 
{\tc\tcl2 \v TarefaMenu}
{\xe \v TarefaMenu}
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
\par
{
{\f2 #include <Menu.hpp>}}\par
Diagrama de hierarquia da classe TarefaMenu:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tarefa_menu.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TarefaMenu} (std::string *login_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu das tarefas \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PrimeiroMenu} * {\b next} (unsigned option, {\b PrimeiroMenu} *old_menu) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b PrimeiroMenu}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PrimeiroMenu} ()=default\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getUsuario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsuario} (std::string user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string novo_Titulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubtitulo} (std::string novo_Subtitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOpcoes} (std::vector< std::string > novasOpcoes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderizar} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TarefaMenu\:TarefaMenu}
{\xe \v TarefaMenu\:TarefaMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TarefaMenu::TarefaMenu (std::string *  {\i login_email})}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu das tarefas \par
 }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 232                                              \{\par
233 \par
234   setTitulo({\cf22 "Menu de Tarefas! "});\par
235   setSubtitulo({\cf22 "Escolha uma op\'E7ao:"});\par
236   setOpcoes(\{{\cf22 "1 --> Adicionar um nova Tarefa"}, {\cf22 "2 --> Remover um Tarefa"}, {\cf22 "3 --> Editar uma Tarefa"}, {\cf22 "4 --> Voltar"}, {\cf22 "5 --> Sair"}\});\par
237   setUsuario(*login_email);\par
238 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v next\:TarefaMenu}
{\xe \v TarefaMenu\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PrimeiroMenu} * TarefaMenu::next (unsigned  {\i option}, {\b PrimeiroMenu} *  {\i old_menu}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i opcao} \cell }{A op\'E7\'E3o que o usu\'E1rio escolheu\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i old_menu} \cell }{Um ponteiro que aponta para o menu anterior\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um ponteiro para o pr\'F3ximo menu \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Removendo a {\b Tarefa}\par
}{
Implementa {\b PrimeiroMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 240                                                                       \{\par
241   \par
242     std::string usuario_atual = getUsuario();\par
243 \par
244   {\cf19 switch} (option) \{\par
245     \par
246     {\cf19 case} 1: \{\par
247         \par
248         std::string nova_tarefa_titulo;\par
249         std::cout << {\cf22 "Insira um titulo para sua Tarefa"} << std::endl;\par
250         std::cin >> nova_tarefa_titulo;\par
251 \par
252         std::string nova_tarefa_descricao;\par
253         std::cout << {\cf22 "Insira uma descricao para sua Tarefa"} << std::endl;\par
254         std::cin >> nova_tarefa_descricao;\par
255 \par
256         std::string nova_tarefa_data;\par
257         std::cout << {\cf22 "Insira uma data para sua Tarefa no formato DD/MM/AAA"} << std::endl;\par
258         std::cin >> nova_tarefa_data;\par
259 \par
260         {\cf18 unsigned} nova_tarefa_prioridade;\par
261         std::cout << {\cf22 "Insira uma prioridade para sua Tarefa: "} << std::endl;\par
262         std::cout << {\cf22 "1 --> menos importante, 2 --> importante, 3 --> muito importante"} << std::endl;\par
263         std::cin >> nova_tarefa_prioridade;\par
264 \par
265         std::string nova_tarefa_estado;\par
266         std::cout << {\cf22 "Insira um estado para sua Tarefa: "} << std::endl;\par
267         std::cout << {\cf22 "feito , em progresso, n\'E3o feito "} << std::endl;\par
268         std::cin >> nova_tarefa_estado;\par
269         \par
270         std::cout << {\cf22 "Adicionando Tarefa..."} << std::endl;\par
271 \par
272         Tarefa* new_Tarefa = {\cf17 new} Tarefa(nova_tarefa_titulo, nova_tarefa_descricao, nova_tarefa_data, nova_tarefa_prioridade, nova_tarefa_estado );\par
273 \par
274         ListaTarefa::adicionarTarefa(new_Tarefa, &usuario_atual);\par
275 \par
276         {\cf20 // n\'E3o achei uma fun\'E7\'E3o dessa para Tarefa}\par
277         {\cf19 if} (ListaTarefa::buscarTarefa(nova_tarefa_titulo) != {\cf17 nullptr}) \{\par
278 \par
279             std::cout << {\cf22 "A Tarefa adicionada com sucesso!"} << std::endl;\par
280         \}\par
281         {\cf19 else} \{\par
282 \par
283             std::cout << {\cf22 "Nao foi possivel adicionar A nova Tarefa."} << std::endl;\par
284         \}\par
285         \par
286         {\cf19 return} {\cf17 new} TarefaMenu(&usuario_atual);\par
287     \}\par
288     {\cf19 case} 2: \{\par
289 \par
290         std::string titulo_Tarefa;\par
291         std::cout << std::endl << {\cf22 "Digite o titulo da Tarefa que deseja remover: "} << std::endl;\par
292         std::cin >> titulo_Tarefa;\par
293 \par
294         std::cout << {\cf22 "Buscando pela Tarefa..."} << std::endl;\par
295         \par
296         {\cf20 //precisa criar a fun\'E7\'E3o a baixo}\par
297         Tarefa* tarefa = ListaTarefa::buscarTarefa(titulo_Tarefa);\par
298 \par
299         {\cf19 if} (tarefa != {\cf17 nullptr}) \{\par
300 \par
301             ListaTarefa::removerTarefa(tarefa, &usuario_atual); \par
302 \par
303             std::cout << {\cf22 "A Tarefa com Titulo '"} << titulo_Tarefa << {\cf22 "' foi removida com sucesso!"} << std::endl;\par
304         \}\par
305         {\cf19 else} \{\par
306 \par
307             std::cout << {\cf22 "A Tarefa com Titulo '"} << titulo_Tarefa << {\cf22 "' nao foi encontrada."} << std::endl;\par
308         \}\par
309 \par
310         {\cf19 return} {\cf17 new} TarefaMenu(&usuario_atual);\par
311     \}\par
312     {\cf19 case} 3: \{\par
313 \par
314         std::string titulo_Tarefa;\par
315         std::cout << std::endl << {\cf22 "Digite o titulo da Tarefa que deseja editar: "} << std::endl;\par
316         std::cin >> titulo_Tarefa;\par
317 \par
318         std::cout << {\cf22 "Buscando pela Tarefa..."} << std::endl;\par
319         \par
320         Tarefa* tarefa = ListaTarefa::buscarTarefa(titulo_Tarefa);\par
321 \par
322         {\cf19 if} (tarefa != {\cf17 nullptr}) \{\par
323 \par
324             std::cout << {\cf22 "Alterando a Tarefa..."} << std::endl\par
325             << {\cf22 "Titulo: "} << tarefa->getTitulo() << std::endl\par
326             << {\cf22 "Descricao: "} << tarefa->getDescricao() << std::endl\par
327             << {\cf22 "Data: "} << tarefa->getData() << std::endl\par
328             << {\cf22 "Prioridade: "} << tarefa->getPrioridade() << std::endl\par
329             << {\cf22 "Estado: "} << tarefa->getEstado() << std::endl;\par
330             \par
331             std::cout << std::endl << {\cf22 "Voce deseja..."} << std::endl\par
332             << {\cf22 "1 --> Editar Titulo"} << std::endl\par
333             << {\cf22 "2 --> Editar Descricao"} << std::endl\par
334             << {\cf22 "3 --> Editar Data"} << std::endl\par
335             << {\cf22 "4 --> Editar Prioridade"} << std::endl\par
336             << {\cf22 "5 --> Editar Estado"} << std::endl;\par
337 \par
338             {\cf18 unsigned} opcao_editar;\par
339 \par
340             {\cf19 switch} (opcao_editar) \{\par
341                 {\cf19 case} 1: \{\par
342 \par
343                     std::string novo_titulo;\par
344                     std::cout << {\cf22 "Digite um novo Titulo pata a Tarefa:"} << std::endl;\par
345                     std::cin >> novo_titulo;\par
346 \par
347                     std::cout << {\cf22 "Alterando Titulo..."};\par
348 \par
349                     tarefa->setTitulo(novo_titulo);\par
350 \par
351                     Tarefa* tarefa_alterado = ListaTarefa::buscarTarefa(novo_titulo);  \par
352 \par
353                     {\cf19 if} (tarefa_alterado != {\cf17 nullptr} && tarefa_alterado->getData() == tarefa->getData() && tarefa_alterado->getDescricao() == tarefa->getDescricao()) \{\par
354 \par
355                         std::cout << {\cf22 "O Titulo da tarefa foi alterado com sucesso para: "} << tarefa->getTitulo() << {\cf22 "!"} << std::endl;\par
356                     \}\par
357                     {\cf19 else} \{\par
358 \par
359                         std::cout << {\cf22 "Nao foi possivel alterar o Titulo da tarefa."} << std::endl;\par
360                     \}\par
361                 \}\par
362                 {\cf19 case} 3: \{\par
363 \par
364                     std::string nova_data;\par
365                     std::cout << {\cf22 "Digite uma nova data para a tarefa (no formato: DD/MM/AAAA):"} << std::endl;\par
366                     std::cin >> nova_data;\par
367 \par
368                     std::cout << {\cf22 "Alterando data..."};\par
369 \par
370                     tarefa->setData(nova_data);  \par
371 \par
372                     {\cf19 if} (tarefa->getData() == nova_data) \{\par
373 \par
374                         std::cout << {\cf22 "A data da tarefa foi alterada com sucesso para: "} << tarefa->getData() << {\cf22 "!"} << std::endl;\par
375                     \}\par
376                     {\cf19 else} \{\par
377 \par
378                         std::cout << {\cf22 "Nao foi possivel alterar a data da tarefa."} << std::endl;\par
379                     \}\par
380                 \}\par
381                 {\cf19 case} 2: \{\par
382 \par
383                     std::string novo_descricao;\par
384                     std::cout << {\cf22 "Digite uma nova Descricao pata a Tarefa:"} << std::endl;\par
385                     std::cin >> novo_descricao;\par
386 \par
387                     std::cout << {\cf22 "Alterando Descricao..."};\par
388 \par
389                     tarefa->setDescricao(novo_descricao);  \par
390 \par
391                     {\cf19 if} (tarefa->getDescricao() == novo_descricao) \{\par
392 \par
393                         std::cout << {\cf22 "A Descricao da tarefa foi alterada com sucesso para: "} << tarefa->getDescricao() << {\cf22 "!"} << std::endl;\par
394                     \}\par
395                     {\cf19 else} \{\par
396 \par
397                         std::cout << {\cf22 "Nao foi possivel alterar a Descricao da tarefa."} << std::endl;\par
398                     \}\par
399                 \}\par
400 \par
401                 {\cf19 case} 4: \{ \par
402                     {\cf18 unsigned} nova_prioridade;\par
403                     std::cout << {\cf22 "Digite a nova prioridade da tarefa entre:"} << std::endl;\par
404                     std::cout << {\cf22 "'1 --> menos importante, 2 --> importante, 3 --> muito importante'"} << std:: endl;\par
405                     std::cin >> nova_prioridade;\par
406 \par
407                     std::cout << {\cf22 "Alterando prioridade..."};\par
408 \par
409                     tarefa->setPrioridade(nova_prioridade);  \par
410 \par
411                     {\cf19 if} (tarefa->getPrioridade() == nova_prioridade) \{\par
412                      \par
413                      std::cout << {\cf22 "A prioridade da tarefa foi alterada com sucesso para: "} << tarefa->getPrioridade() << {\cf22 "!"} << std::endl;\par
414                     \par
415                     \}\par
416                     {\cf19 else} \{\par
417 \par
418                         std::cout << {\cf22 "Nao foi possivel alterar a prioridade da tarefa."} << std::endl;\par
419                     \}\par
420                 \}\par
421 \par
422                 {\cf19 case} 5: \{ \par
423                     std::string nova_estado;\par
424                     std::cout << {\cf22 "Digite uma novo estado para a tarefa entre : "} << std::endl;\par
425                     std::cout << {\cf22 "'feito , em progresso, n\'E3o feito' "} << std::endl;\par
426                     std::cin >> nova_estado;\par
427 \par
428                     std::cout << {\cf22 "Alterando estado..."};\par
429 \par
430                     tarefa->setEstado(nova_estado);\par
431  \par
432 \par
433                     {\cf19 if} (tarefa->getEstado() == nova_estado) \{\par
434 \par
435                         std::cout << {\cf22 "O esatado da tarefa foi alterado com sucesso para: "} << tarefa->getEstado() << {\cf22 "!"} << std::endl;\par
436                     \}\par
437                     {\cf19 else} \{\par
438 \par
439                         std::cout << {\cf22 "Nao foi possivel alterar o estado da tarefa."} << std::endl;\par
440                     \}\par
441                 \}\par
442             \} \par
443         \}\par
444         {\cf19 else} \{\par
445 \par
446             std::cout << {\cf22 "A tarefa com Titulo '"} << titulo_Tarefa << {\cf22 "' nao foi encontrada."} << std::endl;\par
447         \}\par
448 \par
449         {\cf19 return} {\cf17 new} TarefaMenu(&usuario_atual);\par
450     \}\par
451     {\cf19 case} 4: \{\par
452 \par
453         std::cout << {\cf22 "Voltando..."} << std::endl;\par
454         {\cf19 return} old_menu;\par
455     \}\par
456     \par
457     {\cf19 case} 5: \{\par
458       \par
459       std::cout << {\cf22 "Saindo do progama..."} << std::endl;\par
460       {\cf19 return} {\cf17 nullptr};\par
461     \}\par
462 \par
463     {\cf19 default}: \{\par
464         \par
465         std::cout << {\cf22 "Opcao invalida!"} << std::endl;\par
466         std::cout << {\cf22 "Escolha uma opcao valida!"} << std::endl;\par
467         {\cf19 return} {\cf17 new} TarefaMenu(&usuario_atual);\par
468     \}\par
469   \}\par
470 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/menu/{\b Menu.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/menu/{\b Menu.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Usuario\par \pard\plain 
{\tc\tcl2 \v Usuario}
{\xe \v Usuario}
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
\par
{
{\f2 #include <Usuario.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Usuario} (std::string &nome, std::string &sobrenome, std::string &idade, std::string &email)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getNome} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo nome do usuario. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getIdade} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela idade do usuario. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getEmail} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo email do usuario. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNome} (std::string nome, std::string sobrenome)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o nome e sobrenome de um usuario. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIdade} (std::string *idade)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a idade de um usuario. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEmail} (std::string *email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o email de um usuario. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Usuario\:Usuario}
{\xe \v Usuario\:Usuario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Usuario::Usuario (std::string &  {\i nome}, std::string &  {\i sobrenome}, std::string &  {\i idade}, std::string &  {\i email})}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                                                                                           \{\par
11     setNome(nome, sobrenome);\par
12     setIdade(&idade);\par
13     setEmail(&email);\par
14 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v getEmail\:Usuario}
{\xe \v Usuario\:getEmail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Usuario::getEmail () const}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo email do usuario. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do email \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o email\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                   \{\par
27     \par
28     {\cf19 return} this->_email; \par
29 \}\par
}
}
{\xe \v getIdade\:Usuario}
{\xe \v Usuario\:getIdade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Usuario::getIdade () const}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pela idade do usuario. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String da idade \par
 \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna a idade\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                   \{\par
22 \par
23     {\cf19 return} this->_idade; \par
24 \}\par
}
}
{\xe \v getNome\:Usuario}
{\xe \v Usuario\:getNome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Usuario::getNome () const}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo nome do usuario. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String do nome \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Retorna o nome\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16                                  \{\par
17 \par
18     {\cf19 return} this->_nome; \par
19 \}\par
}
}
{\xe \v setEmail\:Usuario}
{\xe \v Usuario\:setEmail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Usuario::setEmail (std::string *  {\i email})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o email de um usuario. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i email} \cell }{O email a ser alterado \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Quebra o novo email em partes, para fazer as verificacoes necessarias\par
Verifica se o usuario ou dominio estao preenchidos\par
Verifica se o dominio esta preenchido corretamente\par
< Atribui o novo email\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 97                                             \{\par
98 \par
99     {\cf19 try} \{\par
100 \par
101         {\cf19 if} (ListaUsuario::checkUsuario(novo_email)) {\cf19 throw} std::logic_error({\cf22 "O email fornecido ja esta em uso"});\par
102 \par
103         std::istringstream iss(*novo_email);\par
104         std::string usuario, dominio;\par
105 \par
107         std::getline(iss, usuario, {\cf23 '@'});\par
108         std::getline(iss, dominio);\par
109 \par
111         {\cf19 if} (usuario == {\cf22 ""} || dominio == {\cf22 ""}) \{\par
112         \par
113             {\cf19 throw} std::invalid_argument({\cf22 "Email incompleto"}); \par
114         \}\par
115 \par
117         {\cf19 if} (dominio != {\cf22 "gmail.com"} && dominio != {\cf22 "yahoo.com"} && dominio != {\cf22 "outlook.com"}) \{\par
118 \par
119             {\cf19 throw} std::invalid_argument({\cf22 "Dominio do email invalido"});\par
120         \}\par
121 \par
122         this->_email = *novo_email; \par
123     \}\par
124     {\cf19 catch} ({\cf17 const} std::invalid_argument& e) \{\par
125         std::cout << {\cf22 "Email deve estar no formato: usuario@dominio.com"} << std::endl\par
126         << {\cf22 "Dominios aceitos:"} << std::endl\par
127         << {\cf22 "    - 'gmail.com'"} << std::endl\par
128         << {\cf22 "    - 'yahoo.com'"} << std::endl\par
129         << {\cf22 "    - 'outlook.com'"} << std::endl;\par
130 \par
131         handleExcecao(e);\par
132     \}\par
133     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
134 \par
135         handleExcecao(e);\par
136     \}\par
137 \}\par
}
}
{\xe \v setIdade\:Usuario}
{\xe \v Usuario\:setIdade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Usuario::setIdade (std::string *  {\i idade})}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda a idade de um usuario. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idade} \cell }{A nova idade \par
 \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Idade minima\par
< Idade maxima \par
Verifica se a idade eh valida\par
< Atribui a nova idade\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65                                             \{\par
66 \par
67     {\cf19 try} \{\par
68 \par
69         {\cf17 const} {\cf18 unsigned} MIN_IDADE = 1; \par
70         {\cf17 const} {\cf18 unsigned} MAX_IDADE = 150; \par
71         \par
72         std::istringstream iss(*nova_idade);\par
73         std::string idade_string;\par
74 \par
75         std::getline(iss, idade_string, {\cf23 ' '});\par
76 \par
77         {\cf18 int} idade = std::stoi(idade_string);\par
78 \par
80         {\cf19 if} (idade > MIN_IDADE && idade < MAX_IDADE) \{\par
81 \par
82             this->_idade = idade_string; \par
83         \}\par
84         {\cf19 else} \{\par
85 \par
86             {\cf19 throw} std::invalid_argument({\cf22 "Idade invalida"});\par
87         \}\par
88     \} \par
89     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
90         \par
91         std::cout << {\cf22 "Insira uma idade valida. (Formato: x anos)"} << std::endl;\par
92         \par
93         handleExcecao(e);\par
94     \}    \par
95 \}\par
}
}
{\xe \v setNome\:Usuario}
{\xe \v Usuario\:setNome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Usuario::setNome (std::string  {\i nome}, std::string  {\i sobrenome})}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o nome e sobrenome de um usuario. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome} \cell }{O nome do usuario\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sobrenome} \cell }{O sobrenome do usuario \par
 \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Limite de caracteres\par
Verifica se o nome eh valido\par
< Atribui o novo nome\par
Verifica se o sobrenome eh valido\par
< Atribui o novo sobrenome\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                                                                    \{\par
32 \par
33     {\cf19 try} \{\par
34 \par
35         {\cf17 const} {\cf18 size_t} MAX_CARACTERES = 40; \par
36 \par
38         {\cf19 if} (!novo_nome.length() >= MAX_CARACTERES || !(novo_nome.empty())) \{\par
39 \par
40             this->_nome = novo_nome; \par
41         \}\par
42         {\cf19 else} \{\par
43 \par
44             {\cf19 throw} std::invalid_argument({\cf22 "Nome invalido"});\par
45         \}\par
46         \par
48         {\cf19 if} (!novo_sobrenome.length() >= MAX_CARACTERES || !(novo_sobrenome.empty())) \{\par
49 \par
50             this->_nome = novo_sobrenome; \par
51         \}\par
52         {\cf19 else} \{\par
53 \par
54             {\cf19 throw} std::invalid_argument({\cf22 "Nome invalido"});\par
55         \}        \par
56     \} \par
57     {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
58         \par
59         std::cout << {\cf22 "O nome e sobrenome devem possuir entre 1 e 50 caracteres"} << std::endl;\par
60         \par
61         handleExcecao(e);\par
62     \}\par
63 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/{\b Usuario.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/{\b Usuario.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe UsuarioMenu\par \pard\plain 
{\tc\tcl2 \v UsuarioMenu}
{\xe \v UsuarioMenu}
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
\par
{
{\f2 #include <Menu.hpp>}}\par
Diagrama de hierarquia da classe UsuarioMenu:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_usuario_menu.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UsuarioMenu} (std::string *login_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu do usuario. \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PrimeiroMenu} * {\b next} (unsigned option, {\b PrimeiroMenu} *old_menu) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b PrimeiroMenu}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PrimeiroMenu} ()=default\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor para destrui\'E7ao de subclasses. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getUsuario} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Busca pelo usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsuario} (std::string user_email)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Guarda o usuario logado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTitulo} (std::string novo_Titulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o titulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubtitulo} (std::string novo_Subtitulo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda o subtitulo do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOpcoes} (std::vector< std::string > novasOpcoes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Muda as opcoes do menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b renderizar} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Renderiza as op\'E7oes do menu. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v UsuarioMenu\:UsuarioMenu}
{\xe \v UsuarioMenu\:UsuarioMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UsuarioMenu::UsuarioMenu (std::string *  {\i login_email})}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o menu do usuario. \par
 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< Imprimindo o calendario da semana\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 156                                               \{\par
157   \par
158   setTitulo({\cf22 "Que bom ter voce de volta, "} + *user_email + {\cf22 "!"});\par
159   setSubtitulo({\cf22 "Calendario da semana:"});\par
160   setOpcoes(\{{\cf22 "1 --> Lembretes"}, {\cf22 "2 --> Compromissos"}, {\cf22 "3 --> Tarefas"}, {\cf22 "4 --> Deslogar"}, {\cf22 "5 --> Sair"}\});\par
161   setUsuario(*user_email);\par
162 \par
163   Calendario user_calendario;\par
164 \par
165   {\cf20 // Pega a data atual do computador do usuario}\par
166   std::time_t t = std::time({\cf17 nullptr});\par
167   std::tm* now = std::localtime(&t);\par
168 \par
169   {\cf20 // Transforma em uma string no formato: DD/MM/AAAA}\par
170   std::string dia = STRING(now->tm_mday);\par
171   dia += {\cf23 '/'};\par
172   dia += STRING(now->tm_mon + 1);\par
173   dia += {\cf23 '/'};\par
174   dia += STRING(now->tm_year + 1900);\par
175 \par
176   user_calendario.imprimirCalendario(dia); \par
177 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v next\:UsuarioMenu}
{\xe \v UsuarioMenu\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PrimeiroMenu} * UsuarioMenu::next (unsigned  {\i option}, {\b PrimeiroMenu} *  {\i old_menu}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constroi o proximo menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i opcao} \cell }{A op\'E7\'E3o que o usu\'E1rio escolheu\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i old_menu} \cell }{Um ponteiro que aponta para o menu anterior\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Um ponteiro para o pr\'F3ximo menu \par
}}}{
Implementa {\b PrimeiroMenu} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 179                                                                        \{\par
180 \par
181   std::string usuario_atual = getUsuario();\par
182 \par
183   {\cf19 switch} (option) \{\par
184     {\cf19 case} 1: \{\par
185 \par
186       std::cout << std::endl << {\cf22 "Aqui estao seus lembretes salvos: "} << std::endl; \par
187       \par
188       ImprimirLembretes::verLembretes(&usuario_atual);\par
189       \par
190       {\cf19 return} {\cf17 new} LembreteMenu(&usuario_atual);\par
191     \}\par
192 \par
193     {\cf19 case} 2: \{\par
194 \par
195       std::cout << std::endl << {\cf22 "Aqui estao seus compromissos salvos: "} << std::endl;\par
196       \par
197       ImprimirCompromissos::verCompromissos(&usuario_atual);\par
198       \par
199       {\cf19 return} {\cf17 new} CompromissoMenu(&usuario_atual);\par
200     \}\par
201 \par
202     {\cf19 case} 3: \{\par
203 \par
204       std::cout << std::endl << {\cf22 "Aqui estao suas tarefas salvas: "} << std::endl;\par
205       \par
206       ImprimirTarefas::verTarefas(&usuario_atual);\par
207 \par
208       {\cf19 return} {\cf17 new} TarefaMenu(&usuario_atual);\par
209     \}\par
210 \par
211     {\cf19 case} 4: \{\par
212       \par
213       std::cout << {\cf22 "Voltando..."} << std::endl;\par
214       {\cf19 return} old_menu;\par
215     \}\par
216 \par
217     {\cf19 case} 5: \{\par
218       \par
219       std::cout << {\cf22 "Saindo do progama..."} << std::endl;\par
220       {\cf19 return} {\cf17 nullptr};\par
221     \}\par
222 \par
223     {\cf19 default}: \{\par
224 \par
225       std::cout << {\cf22 "Opcao invalida!"} << std::endl;\par
226       std::cout << {\cf22 "Escolha uma opcao valida!"} << std::endl;\par
227       {\cf19 return} {\cf17 new} UsuarioMenu(&usuario_atual);\par
228     \}\par
229   \}\par
230 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/menu/{\b Menu.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/menu/{\b Menu.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Calendario.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Calendario.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Calendario.hpp}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "..\\..\\include\\core\\Tarefa.hpp"}\par
{\f2 #include "..\\..\\include\\core\\Lembrete.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <vector>}\par
{\f2 #include <string>}\par
{\f2 #include <map>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Calendario}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Calendario.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Calendario.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Calendario.hpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CALENDARIO_HPP}\par
2 {\cf21 #define CALENDARIO_HPP}\par
3 \par
4 {\cf21 #include "..\\..\\include\\core\\Tarefa.hpp"}\par
5 {\cf21 #include "..\\..\\include\\core\\Lembrete.hpp"}\par
6 \par
7 {\cf21 #include <iostream>}\par
8 {\cf21 #include <vector>}\par
9 {\cf21 #include <string>}\par
10 {\cf21 #include <map>}\par
11 \par
12 {\cf17 class }Calendario \{\par
13 {\cf17 public}:\par
19     {\cf18 void} inserir(std::string key, std::vector<std::string> value);\par
20 \par
24     {\cf18 unsigned} sizeMapaHorario();\par
25 \par
31     {\cf18 void} inserir(std::string key); \par
32 \par
36     {\cf18 unsigned} sizeAgenda();\par
37 \par
41     {\cf18 void} imprimirCalendario(std::string data);\par
42 \par
43 {\cf17 private}:\par
44     std::map<std::string, std::vector<std::string>> _mapa_Horario; \par
45     std::map<std::string, std::map<std::string, std::vector<std::string>>> _agenda; \par
46 \};\par
47 \par
48 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Excecoes.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Excecoes.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Excecoes.hpp}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdexcept>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleExcecao} (const std::exception &e)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lida com as exce\'E7oes geradas pelo programa. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v handleExcecao\:Excecoes.hpp}
{\xe \v Excecoes.hpp\:handleExcecao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handleExcecao (const std::exception &  {\i e})}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lida com as exce\'E7oes geradas pelo programa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i e} \cell }{Objeto da exce\'E7ao lan\'E7ado pelo codigo \par
 \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mensagem de erro a ser exibida em caso de excecao gerada\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                                           \{\par
6     \par
8     std::cerr << {\cf22 "Erro: "} << e.what() << std::endl;\par
9 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Excecoes.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Excecoes.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Excecoes.hpp}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef EXCECOES_HPP}\par
2 {\cf21 #define EXCECOES_HPP}\par
3 \par
4 {\cf21 #include <stdexcept>}\par
5 \par
9 {\cf18 void} handleExcecao({\cf17 const} std::exception& e);\par
10 \par
11 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Lembrete.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Lembrete.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Lembrete.hpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <unordered_map>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Lembrete}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListaLembrete}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ImprimirLembretes}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lembrete.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Lembrete.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Lembrete.hpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef LEMBRETE_HPP}\par
2 {\cf21 #define LEMBRETE_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <algorithm>}\par
6 {\cf21 #include <unordered_map>}\par
7    \par
8 {\cf17 class }Lembrete \{\par
9 {\cf17 public}:\par
10     Lembrete({\cf17 const} std::string& horario, {\cf17 const} std::string& mensagem, {\cf17 const} std::string& data);\par
11 \par
15     std::string getData() {\cf17 const};\par
16     \par
20     std::string getHorario() {\cf17 const};\par
21 \par
25     std::string getMensagem() {\cf17 const};\par
26     \par
32     {\cf18 void} setData({\cf17 const} std::string& nova_Data);\par
33 \par
39     {\cf18 void} setHorario({\cf17 const} std::string& novo_Horario);\par
40 \par
44     {\cf18 void} setMensagem(std::string texto);\par
45     \par
46 {\cf17 private}:\par
47     std::string _data; \par
48     std::string _horario; \par
49     std::string _mensagem; \par
50 \};\par
51 \par
52 {\cf17 class }ListaLembrete \{\par
53 {\cf17 public}:\par
54     ListaLembrete() \{ {\cf17 const} {\cf17 auto} _listadeLembretes = std::unordered_map<std::string, Lembrete*>(); \}\par
55 \par
61     {\cf17 static} {\cf18 void} adicionarLembrete(Lembrete* lembrete, std::string* user_email);\par
62     \par
68     {\cf17 static} {\cf18 void} removerLembrete(Lembrete* lembrete, std::string* user_email);\par
69 \par
73     {\cf17 static} Lembrete* buscarLembrete(std::string* mensagem);\par
74 \par
78     {\cf18 unsigned} tamanho();\par
79     \par
80 \};\par
81 \par
82 {\cf17 class }ImprimirLembretes : {\cf17 public} ListaLembrete \{\par
83 {\cf17 public}:\par
87     {\cf17 static} {\cf18 void} verLembretes(std::string* user_email);\par
88 \};\par
89 \par
90 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Notificacao.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Notificacao.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Notificacao.hpp}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "..\\..\\include\\core\\Tarefa.hpp"}\par
{\f2 #include "..\\..\\include\\core\\Lembrete.hpp"}\par
{\f2 #include <ctime>}\par
{\f2 #include <chrono>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Notificacao}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Notificacao.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Notificacao.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Notificacao.hpp}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef NOTIFICACAO_HPP}\par
2 {\cf21 #define NOTIFICACAO_HPP}\par
3 \par
4 {\cf21 #include "..\\..\\include\\core\\Tarefa.hpp"}\par
5 {\cf21 #include "..\\..\\include\\core\\Lembrete.hpp"}\par
6 \par
7 {\cf21 #include <ctime>}\par
8 {\cf21 #include <chrono>}\par
9 \par
10 {\cf17 class }Notificacao \{\par
11 {\cf17 public}:\par
12     Notificacao({\cf17 const} {\cf18 int} hora_Antes, {\cf17 const} {\cf18 int} min_Antes);\par
13     \par
17     {\cf18 void} notificar(Compromisso* compromisso);\par
18     \par
22     {\cf18 void} notificar(Lembrete* lembrete);\par
23 \par
25     {\cf18 void} ativarNotificacao();\par
26 \par
28     {\cf18 void} desativarNotificacao();\par
29 \par
33     {\cf18 bool} checkEstado();\par
34 \par
35 {\cf17 private}:\par
36     {\cf18 int} _min_Antes; \par
37     {\cf18 int} _hora_Antes; \par
38     {\cf18 bool} _estado; \par
39 \};\par
40 \par
41 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Tarefa.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Tarefa.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Tarefa.hpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <unordered_map>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Tarefa}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Compromisso}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListaTarefa}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListaCompromisso}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ImprimirTarefas}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ImprimirCompromissos}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b setCorPrioridade} (unsigned prioridade)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obtem a cor para imprimir de acordo com o nivel de prioridade. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v setCorPrioridade\:Tarefa.hpp}
{\xe \v Tarefa.hpp\:setCorPrioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string setCorPrioridade (unsigned  {\i prioridade})}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obtem a cor para imprimir de acordo com o nivel de prioridade. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prioridade 1: Verde, Prioridade 2: Amarelo, Prioridade 3: Vermelho\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prioridade} \cell }{A prioridade da tarefa ou compromisso\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String com o codigo da cor (em formata\'E7ao ANSI) \par
 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 361                                                 \{\par
362 \par
363     {\cf20 // Escolher a cor com base na prioridade}\par
364     std::string cor;\par
365         \par
366     {\cf19 switch} (prioridade) \{\par
367         {\cf19 case} 1:\par
368             cor = {\cf22 "\\033[38;2;29;247;25m"}; {\cf20 // Verde (prioridade 1)}\par
369             {\cf19 return} cor;\par
370 \par
371         {\cf19 case} 2:\par
372             cor = {\cf22 "\\033[38;2;247;228;25m"}; {\cf20 // Amarelo (prioridade 2)}\par
373             {\cf19 return} cor;\par
374 \par
375         {\cf19 case} 3:\par
376             cor = {\cf22 "\\033[38;2;247;25;25m"}; {\cf20 // Vermelho (prioridade 3)}\par
377             {\cf19 return} cor;\par
378 \par
379         {\cf19 default}:\par
380             cor = {\cf22 "\\033[0m"}; {\cf20 // Padr\'E3o (sem cor)}\par
381             {\cf19 return} cor;\par
382     \}\par
383 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tarefa.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Tarefa.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Tarefa.hpp}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TAREFA_HPP}\par
2 {\cf21 #define TAREFA_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <algorithm>}\par
6 {\cf21 #include <unordered_map>}\par
7 \par
15 std::string setCorPrioridade({\cf18 unsigned} prioridade);\par
16 \par
17 {\cf17 class }Tarefa \{\par
18 {\cf17 public}:\par
19   Tarefa(std::string& titulo, std::string& descricao, std::string& data, {\cf18 unsigned} prioridade, std::string& estado);\par
20     \par
24   std::string getTitulo() {\cf17 const};\par
25 \par
29   std::string getDescricao() {\cf17 const};\par
30 \par
34   std::string getData() {\cf17 const};\par
35 \par
39   {\cf18 unsigned} getPrioridade() {\cf17 const};\par
40     \par
44   std::string getEstado() {\cf17 const}; \par
45   \par
49   {\cf18 void} setTitulo({\cf17 const} std::string& novo_Titulo);\par
50 \par
54   {\cf18 void} setDescricao({\cf17 const} std::string& nova_Descricao);\par
55 \par
61   {\cf18 void} setData({\cf17 const} std::string& nova_Data);\par
62 \par
69   {\cf18 void} setPrioridade({\cf18 unsigned} nova_Prioridade);\par
70 \par
76   {\cf18 void} setEstado({\cf17 const} std::string& novo_Estado);\par
77    \par
78 {\cf17 private}:\par
79   std::string _titulo; \par
80   std::string _descricao; \par
81   std::string _data; \par
82   {\cf18 unsigned} _prioridade; \par
83   std::string _estado; \par
84  \};\par
85 \par
86 {\cf17 class }Compromisso : {\cf17 public} Tarefa \{\par
87 {\cf17 public}:\par
88   Compromisso(std::string& data, std::string& local,std::string& titulo, std::string& descricao, std::string& horario, std::string& estado, {\cf18 unsigned} prioridade);\par
89 \par
93   std::string getCor() {\cf17 const};\par
94 \par
98   std::string getLocal() {\cf17 const};\par
99 \par
103   std::string getHorario() {\cf17 const};\par
104 \par
112   {\cf18 void} setCor({\cf17 const} std::string& nova_Cor);\par
113 \par
117   {\cf18 void} setLocal({\cf17 const} std::string& novo_Local);\par
118 \par
124   {\cf18 void} setHorario({\cf17 const} std::string& novo_Horario);\par
125 \par
126 {\cf17 private}:\par
127   std::string _cor; \par
128   std::string _local; \par
129   std::string _horario; \par
130 \};\par
131 \par
132 {\cf17 class }ListaTarefa \{\par
133 {\cf17 public}:\par
134   ListaTarefa() \{ {\cf17 const} {\cf17 auto} _listadeTarefa = std::unordered_map<std::string, Tarefa*>(); \}\par
135 \par
141   {\cf17 static} {\cf18 void} adicionarTarefa(Tarefa* tarefa, std::string* user_email);\par
142 \par
148   {\cf17 static} {\cf18 void} removerTarefa(Tarefa* tarefa, std::string* user_email);\par
149 \par
153   {\cf17 static} Tarefa* buscarTarefa({\cf17 const} std::string& tarefa_titulo);\par
154 \par
158   {\cf18 unsigned} tamanho();\par
159   \par
160 \par
161 \};\par
162 \par
163 {\cf17 class }ListaCompromisso \{\par
164 {\cf17 public}:\par
165   ListaCompromisso() \{ {\cf17 const} {\cf17 auto} _listadeCompromisso = std::unordered_map<std::string, Compromisso*>(); \}\par
166 \par
172   {\cf17 static} {\cf18 void} adicionarCompromisso(Compromisso* compromisso, std::string* user_email);\par
173 \par
179   {\cf17 static} {\cf18 void} removerCompromisso(Compromisso* compromisso, std::string* user_email);\par
180 \par
184   {\cf17 static} Compromisso* buscarCompromisso({\cf17 const} std::string& compromisso_titulo);\par
185 \par
189   {\cf18 unsigned} tamanho();\par
190 \par
191 \};\par
192 \par
193 {\cf17 class }ImprimirTarefas : {\cf17 public} ListaTarefa \{\par
194 {\cf17 public}:\par
198   {\cf17 static} {\cf18 void} verTarefas(std::string* user_email);\par
199 \};\par
200 \par
201 {\cf17 class }ImprimirCompromissos : {\cf17 public} ListaCompromisso \{\par
202 {\cf17 public}:\par
206   {\cf17 static} {\cf18 void} verCompromissos(std::string* user_email);\par
207 \};\par
208 \par
209 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Usuario.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Usuario.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Usuario.hpp}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <unordered_map>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Usuario}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ListaUsuario}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Usuario.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Usuario.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/core/Usuario.hpp}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef USUARIO_HPP}\par
2 {\cf21 #define USUARIO_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <unordered_map>}\par
6    \par
7 {\cf17 class }Usuario \{\par
8 {\cf17 public}:\par
9   Usuario(std::string& nome, std::string& sobrenome, std::string& idade, std::string& email);\par
10       \par
14   std::string getNome() {\cf17 const};\par
15 \par
19   std::string getIdade() {\cf17 const};\par
20     \par
24   std::string getEmail() {\cf17 const}; \par
25 \par
31   {\cf18 void} setNome(std::string nome, std::string sobrenome);\par
32 \par
36   {\cf18 void} setIdade(std::string* idade);\par
37       \par
41   {\cf18 void} setEmail(std::string* email);\par
42         \par
43 {\cf17 private}:\par
44   std::string _nome; \par
45   std::string _sobrenome; \par
46   std::string _idade; \par
47   std::string _email; \par
48 \};\par
49 \par
50 {\cf17 class }ListaUsuario \{\par
51 {\cf17 public}:\par
52   ListaUsuario() \{ {\cf17 const} {\cf17 auto} _listadeUsuario = std::unordered_map<std::string, Usuario>(); \}\par
56   {\cf17 static} {\cf18 void} adicionarUsuario(Usuario* usuario);\par
57 \par
61   {\cf17 static} {\cf18 void} removerUsuario(Usuario* usuario);\par
62 \par
72   {\cf17 static} {\cf18 bool} checkUsuario(std::string* email);\par
73 \par
83   {\cf17 static} {\cf18 bool} checkUsuario(std::string* email, std::string* nome);\par
84 \par
85 \par
86 \};\par
87 \par
88 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/menu/Menu.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/menu/Menu.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/menu/Menu.hpp}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include "..\\..\\include\\core\\Usuario.hpp"}\par
{\f2 #include "..\\..\\include\\core\\Tarefa.hpp"}\par
{\f2 #include "..\\..\\include\\core\\Lembrete.hpp"}\par
{\f2 #include "..\\..\\include\\core\\Calendario.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PrimeiroMenu}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MenuLogin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UsuarioMenu}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TarefaMenu}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LembreteMenu}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CompromissoMenu}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Menu.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/menu/Menu.hpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/include/menu/Menu.hpp}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef MENU_HPP}\par
2 {\cf21 #define MENU_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <vector>}\par
6 {\cf21 #include "..\\..\\include\\core\\Usuario.hpp"}\par
7 {\cf21 #include "..\\..\\include\\core\\Tarefa.hpp"}\par
8 {\cf21 #include "..\\..\\include\\core\\Lembrete.hpp"}\par
9 {\cf21 #include "..\\..\\include\\core\\Calendario.hpp"}\par
10 \par
11 {\cf17 class }PrimeiroMenu \{\par
12 {\cf17 public}:\par
14   {\cf17 virtual} ~PrimeiroMenu() = {\cf19 default};\par
15 \par
23   {\cf17 virtual} PrimeiroMenu *next({\cf18 unsigned} opcao, PrimeiroMenu *old_menu) = 0;\par
24 \par
28   std::string getUsuario() {\cf17 const};\par
29 \par
33   {\cf18 void} setUsuario(std::string user_email);\par
34 \par
38   {\cf18 void} setTitulo(std::string novo_Titulo);\par
39 \par
43   {\cf18 void} setSubtitulo(std::string novo_Subtitulo);\par
44 \par
48   {\cf18 void} setOpcoes(std::vector<std::string> novasOpcoes);\par
49 \par
51   {\cf17 virtual} {\cf18 void} renderizar() {\cf17 const};\par
52   \par
53 {\cf17 private}:\par
54   std::string _user_email; \par
55   std::string _titulo = {\cf22 "Gerenciador de Tarefas e Compromissos "}; \par
56   std::string _sub_titulo = {\cf22 "Escolha uma op\'E7\'E3o:"}; \par
57   std::vector<std::string> _opcoes = \{{\cf22 "1 --> Entrar"}, {\cf22 "2 --> Sair"}\}; \par
58 \};\par
59 \par
60 {\cf17 class }MenuLogin : {\cf17 public} PrimeiroMenu \{\par
61 {\cf17 public}:\par
63   MenuLogin();\par
64 \par
72   PrimeiroMenu *next({\cf18 unsigned} opcao, PrimeiroMenu *old_menu) {\cf17 override};\par
73 \};\par
74 \par
75 {\cf17 class }UsuarioMenu : {\cf17 public} PrimeiroMenu \{\par
76 {\cf17 public}:\par
78   UsuarioMenu(std::string *login_email);\par
79 \par
87   PrimeiroMenu *next({\cf18 unsigned} option, PrimeiroMenu *old_menu) {\cf17 override};\par
88 \};\par
89 \par
90 {\cf17 class }TarefaMenu : {\cf17 public} PrimeiroMenu \{\par
91 {\cf17 public}:\par
93   TarefaMenu(std::string *login_email);\par
94 \par
102   PrimeiroMenu *next({\cf18 unsigned} option, PrimeiroMenu *old_menu) {\cf17 override};\par
103 \};\par
104 \par
105 {\cf17 class }LembreteMenu : {\cf17 public} PrimeiroMenu \{\par
106 {\cf17 public}:\par
108   LembreteMenu(std::string *login_email);\par
109 \par
117   PrimeiroMenu *next({\cf18 unsigned} option, PrimeiroMenu *old_menu) {\cf17 override};\par
118 \};\par
119 \par
120 {\cf17 class }CompromissoMenu : {\cf17 public} PrimeiroMenu \{\par
121 {\cf17 public}:\par
123   CompromissoMenu(std::string *login_email);\par
124 \par
132   PrimeiroMenu *next({\cf18 unsigned} option, PrimeiroMenu *old_menu) {\cf17 override};\par
133 \};\par
134 \par
135 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/main.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/main.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/main.cpp}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "..\\..\\include\\menu\\Menu.hpp"}\par
{\f2 #include <iostream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5            \{\par
6   MenuLogin *login = {\cf17 new} MenuLogin();\par
7   login->renderizar();\par
8   {\cf20 // renderiza a pagina do menu}\par
9   \par
10   {\cf18 unsigned} escolha;\par
11   std::cin >> escolha;\par
12 \par
13   PrimeiroMenu *menu = login->next(escolha, {\cf17 nullptr});\par
14   {\cf20 //pega a escolha do usu\'E1rio e atribue a fun\'E7\'E3o}\par
15 \par
16   {\cf19 while} (menu != {\cf17 nullptr}) \{\par
17     menu->renderizar();\par
18     std::cin >> escolha;\par
19 \par
20     PrimeiroMenu *old_menu = menu;\par
21     menu = menu->next(escolha, old_menu);\par
22 \par
23     {\cf17 delete} old_menu;\par
24   \}\par
25   \par
26   {\cf19 return} 0;\par
27 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/README.md\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/README.md}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/README.md}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Calendario.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Calendario.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Calendario.cpp}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "..\\..\\include\\core\\Calendario.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRING}(num)\~ #num\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v STRING\:Calendario.cpp}
{\xe \v Calendario.cpp\:STRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRING( num)\~ #num}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Calendario.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Calendario.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Calendario.cpp}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../storage/doctest.hpp"}\par
{\f2 #include "../include/core/Calendario.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Mapeando atividades para o calend\'E1rio")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:Calendario.cpp}
{\xe \v Calendario.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Mapeando atividades para o calend\'E1rio" )}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4                                                     \{\par
5     Calendario c;\par
6 \par
7     SUBCASE({\cf22 "Mapeando atividades para um hor\'E1rio"}) \{\par
8         c.inserir({\cf22 "10:00:00"}, \{{\cf22 "Estudar para a prova"}\});\par
9         c.inserir({\cf22 "15:00:00"}, \{{\cf22 "Ir para faculdade"}, {\cf22 "Terminar o trabalho"}\});\par
10 \par
11         CHECK_EQ(c.sizeMapaHorario(), 2);\par
12 \par
13         c.inserir({\cf22 "26/11/2023"});\par
14 \par
15         CHECK_EQ(c.sizeMapaHorario(), 0);\par
16     \}\par
17 \par
18     SUBCASE({\cf22 "Mapeando hor\'E1rios para um dia"}) \{\par
19         c.inserir({\cf22 "10:00:00"}, \{{\cf22 "Estudar para a prova"}\});\par
20 \par
21         c.inserir({\cf22 "26/11/2023"});\par
22         CHECK_EQ(c.sizeAgenda(), 1);\par
23 \par
24         c.inserir({\cf22 "15:00:00"}, \{{\cf22 "Ir para faculdade"}, {\cf22 "Terminar o trabalho"}\});\par
25 \par
26         c.inserir({\cf22 "03/12/2023"});\par
27         CHECK_EQ(c.sizeAgenda(), 2);\par
28     \}\par
29 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Excecoes.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Excecoes.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Excecoes.cpp}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "..\\..\\include\\core\\Excecoes.hpp"}\par
{\f2 #include <iostream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleExcecao} (const std::exception &e)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lida com as exce\'E7oes geradas pelo programa. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v handleExcecao\:Excecoes.cpp}
{\xe \v Excecoes.cpp\:handleExcecao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handleExcecao (const std::exception &  {\i e})}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lida com as exce\'E7oes geradas pelo programa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i e} \cell }{Objeto da exce\'E7ao lan\'E7ado pelo codigo \par
 \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mensagem de erro a ser exibida em caso de excecao gerada\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                                           \{\par
6     \par
8     std::cerr << {\cf22 "Erro: "} << e.what() << std::endl;\par
9 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Lembrete.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Lembrete.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Lembrete.cpp}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "..\\..\\include\\core\\Lembrete.hpp"}\par
{\f2 #include "..\\..\\include\\core\\Excecoes.hpp"}\par
{\f2 #include <string>}\par
{\f2 #include <iostream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <chrono>}\par
{\f2 #include <ctime>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Lembrete.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Lembrete.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Lembrete.cpp}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../storage/doctest.hpp"}\par
{\f2 #include "../include/core/Lembrete.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Criando uma inst\'E2ncia de Lembrete")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Alterando Um lembrete")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:Lembrete.cpp}
{\xe \v Lembrete.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Alterando Um lembrete" )}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                    \{\par
26     Lembrete l({\cf22 "09:40:00"}, {\cf22 "Consulta com o m\'E9dico"}, {\cf22 "30/11/2023"});\par
27 \par
28     l.setData({\cf22 "5/12/2023"});\par
29     l.setHorario({\cf22 "17:00:00"});\par
30     l.setMensagem({\cf22 "Reuni\'E3o"});\par
31     CHECK_EQ(l.getData(), {\cf22 "5/12/2023"});\par
32     CHECK_EQ(l.getHorario(), {\cf22 "17:00:00"});\par
33     CHECK_EQ(l.getMensagem(), {\cf22 "Reuni\'E3o"});\par
34 \}\par
}
}
{\xe \v TEST_CASE\:Lembrete.cpp}
{\xe \v Lembrete.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Criando uma inst\'E2ncia de Lembrete" )}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4                                                 \{\par
5     Lembrete l({\cf22 "09:40:00"}, {\cf22 "Consulta com o m\'E9dico"}, {\cf22 "30/11/2023"});\par
6 \par
7     SUBCASE({\cf22 "Verificando os campos do objeto"}) \{\par
8         CHECK_EQ(l.getData(), {\cf22 "30/11/2023"});\par
9         CHECK_EQ(l.getHorario(), {\cf22 "09:40:00"});\par
10         CHECK_EQ(l.getMensagem(), {\cf22 "Consulta com o m\'E9dico"});\par
11     \}\par
12 \par
13     SUBCASE({\cf22 "Salvando o objeto na lista de lembretes"}) \{\par
14         ListaLembrete xs;\par
15         std::string str = {\cf22 "pedroperreira31@gmail.com"};\par
16 \par
17         xs.adicionarLembrete(&l, &str);\par
18         CHECK_EQ(xs.tamanho(), 1);\par
19 \par
20         xs.removerLembrete(&l, &str);\par
21         CHECK_EQ(xs.tamanho(), 0);\par
22     \}\par
23 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Notificacao.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Notificacao.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Notificacao.cpp}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "..\\..\\include\\core\\Notificacao.hpp"}\par
{\f2 #include <iostream>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Tarefa.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Tarefa.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Tarefa.cpp}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "..\\..\\include\\core\\Tarefa.hpp"}\par
{\f2 #include "..\\..\\include\\core\\Excecoes.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <chrono>}\par
{\f2 #include <ctime>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b setCorPrioridade} (unsigned prioridade)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obtem a cor para imprimir de acordo com o nivel de prioridade. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v setCorPrioridade\:Tarefa.cpp}
{\xe \v Tarefa.cpp\:setCorPrioridade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string setCorPrioridade (unsigned  {\i prioridade})}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obtem a cor para imprimir de acordo com o nivel de prioridade. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prioridade 1: Verde, Prioridade 2: Amarelo, Prioridade 3: Vermelho\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i prioridade} \cell }{A prioridade da tarefa ou compromisso\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String com o codigo da cor (em formata\'E7ao ANSI) \par
 \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 361                                                 \{\par
362 \par
363     {\cf20 // Escolher a cor com base na prioridade}\par
364     std::string cor;\par
365         \par
366     {\cf19 switch} (prioridade) \{\par
367         {\cf19 case} 1:\par
368             cor = {\cf22 "\\033[38;2;29;247;25m"}; {\cf20 // Verde (prioridade 1)}\par
369             {\cf19 return} cor;\par
370 \par
371         {\cf19 case} 2:\par
372             cor = {\cf22 "\\033[38;2;247;228;25m"}; {\cf20 // Amarelo (prioridade 2)}\par
373             {\cf19 return} cor;\par
374 \par
375         {\cf19 case} 3:\par
376             cor = {\cf22 "\\033[38;2;247;25;25m"}; {\cf20 // Vermelho (prioridade 3)}\par
377             {\cf19 return} cor;\par
378 \par
379         {\cf19 default}:\par
380             cor = {\cf22 "\\033[0m"}; {\cf20 // Padr\'E3o (sem cor)}\par
381             {\cf19 return} cor;\par
382     \}\par
383 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Tarefa.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Tarefa.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Tarefa.cpp}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../storage/doctest.hpp"}\par
{\f2 #include "../include/core/Tarefa.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Criando uma inst\'E2ncia de Tarefa")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Alterando uma Tarefa")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Criando uma inst\'E2ncia de Compromisso")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Alterando um Compromisso")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:Tarefa.cpp}
{\xe \v Tarefa.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Alterando um Compromisso" )}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 80                                       \{\par
81     std::string str1 = {\cf22 "24/11/2023"};\par
82     std::string str2 = {\cf22 "UFMG"};\par
83     std::string str3 = {\cf22 "Reuni\'E3o"};\par
84     std::string str4 = {\cf22 "Reuni\'E3o com o grupo para terminar o trabalho"};\par
85     std::string str5 = {\cf22 "16:30:00"};\par
86     std::string str6 = {\cf22 "n\'E3o feito"};\par
87 \par
88     Compromisso c(str1, str2, str3, str4, str5, str6, 2);\par
89 \par
90     c.setCor({\cf22 "azul"});\par
91     c.setLocal({\cf22 "CEU"});\par
92     c.setHorario({\cf22 "10:00:00"});\par
93 \par
94     CHECK_EQ(c.getCor(), {\cf22 "\\033[38;2;25;84;247m"});\par
95     CHECK_EQ(c.getLocal(), {\cf22 "CEU"});\par
96     CHECK_EQ(c.getHorario(), {\cf22 "10:00:00"});\par
97 \}\par
}
}
{\xe \v TEST_CASE\:Tarefa.cpp}
{\xe \v Tarefa.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Alterando uma Tarefa" )}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32                                   \{\par
33     std::string str1 = {\cf22 "Estudar"};\par
34     std::string str2 = {\cf22 "Estudar para a prova de PDS2"};\par
35     std::string str3 = {\cf22 "29/11/2023"};\par
36     std::string str4 = {\cf22 "n\'E3o feito"};\par
37 \par
38     Tarefa t(str1, str2, str3, 2, str4);\par
39 \par
40     t.setTitulo({\cf22 "VPLs"});\par
41     t.setDescricao({\cf22 "Terminar de fazer as VPLs"});\par
42     t.setData({\cf22 "03/12/2023"});\par
43     t.setPrioridade(2);\par
44     t.setEstado({\cf22 "em progresso"});\par
45 \par
46     CHECK_EQ(t.getTitulo(), {\cf22 "VPLs"});\par
47     CHECK_EQ(t.getDescricao(), {\cf22 "Terminar de fazer as VPLs"});\par
48     CHECK_EQ(t.getData(), {\cf22 "03/12/2023"});\par
49     CHECK_EQ(t.getPrioridade(), 2);\par
50     CHECK_EQ(t.getEstado(), {\cf22 "em progresso"});\par
51 \}\par
}
}
{\xe \v TEST_CASE\:Tarefa.cpp}
{\xe \v Tarefa.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Criando uma inst\'E2ncia de Compromisso" )}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53                                                    \{\par
54     std::string str1 = {\cf22 "24/11/2023"};\par
55     std::string str2 = {\cf22 "UFMG"};\par
56     std::string str3 = {\cf22 "Reuni\'E3o"};\par
57     std::string str4 = {\cf22 "Reuni\'E3o com o grupo para terminar o trabalho"};\par
58     std::string str5 = {\cf22 "16:30:00"};\par
59     std::string str6 = {\cf22 "n\'E3o feito"};\par
60 \par
61     Compromisso c(str1, str2, str3, str4, str5, str6, 2);\par
62     \par
63     SUBCASE({\cf22 "Verificando os campos do objeto"}) \{\par
64         CHECK_EQ(c.getLocal(), {\cf22 "UFMG"});\par
65         CHECK_EQ(c.getHorario(), {\cf22 "16:30:00"});\par
66     \}\par
67 \par
68     SUBCASE({\cf22 "Salvando o objeto na lista de compromissos"}) \{\par
69         ListaCompromisso xs;\par
70         std::string str = {\cf22 "pedroperreira31@gmail.com"};\par
71 \par
72         xs.adicionarCompromisso(&c, &str);\par
73         CHECK_EQ(xs.tamanho(), 1);\par
74 \par
75         xs.removerCompromisso(&c, &str);\par
76         CHECK_EQ(xs.tamanho(), 0);\par
77     \}\par
78 \}\par
}
}
{\xe \v TEST_CASE\:Tarefa.cpp}
{\xe \v Tarefa.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Criando uma inst\'E2ncia de Tarefa" )}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4                                               \{\par
5     std::string str1 = {\cf22 "Estudar"};\par
6     std::string str2 = {\cf22 "Estudar para a prova de PDS2"};\par
7     std::string str3 = {\cf22 "29/11/2023"};\par
8     std::string str4 = {\cf22 "n\'E3o feito"};\par
9 \par
10     Tarefa t(str1, str2, str3, 2, str4);\par
11 \par
12     SUBCASE({\cf22 "Verificando os campos do objeto"}) \{\par
13         CHECK_EQ(t.getTitulo(), {\cf22 "Estudar"});\par
14         CHECK_EQ(t.getDescricao(), {\cf22 "Estudar para a prova de PDS2 do dia 30/11"});\par
15         CHECK_EQ(t.getData(), {\cf22 "20/11/2023"});\par
16         CHECK_EQ(t.getPrioridade(), 3);\par
17         CHECK_EQ(t.getEstado(), {\cf22 "n\'E3o feito"});\par
18     \}\par
19 \par
20     SUBCASE({\cf22 "Salvando o objeto na lista de tarefas"}) \{\par
21         ListaTarefa xs;\par
22         std::string str = {\cf22 "pedroperreira31@gmail.com"};\par
23 \par
24         xs.adicionarTarefa(&t, &str);\par
25         CHECK_EQ(xs.tamanho(), 1);\par
26 \par
27         xs.removerTarefa(&t, &str);\par
28         CHECK_EQ(xs.tamanho(), 0);\par
29     \}\par
30 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Usuario.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Usuario.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/core/Usuario.cpp}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "..\\..\\include\\core\\Usuario.hpp"}\par
{\f2 #include "..\\..\\include\\core\\Excecoes.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <sstream>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Usuario.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Usuario.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Usuario.cpp}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../storage/doctest.hpp"}\par
{\f2 #include "../include/core/Usuario.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Criando uma inst\'E2ncia de Usuario")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Alterando um Usuario")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:Usuario.cpp}
{\xe \v Usuario.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Alterando um Usuario" )}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                   \{\par
34     std::string str1 = {\cf22 "Pedro"};\par
35     std::string str2 = {\cf22 "Perreira"};\par
36     std::string str3 = {\cf22 "pedroperreira31@gmail.com"};\par
37     std::string str4 = {\cf22 "20"};\par
38 \par
39     Usuario p(str1, str2, str4, str3);\par
40 \par
41     std::string str5 = {\cf22 "18"};\par
42     std::string str6 = {\cf22 "gabrielsouza82@yahoo.com"};\par
43 \par
44     p.setNome({\cf22 "Gabriel"}, {\cf22 "Souza"});\par
45     p.setIdade(&str5);\par
46     p.setEmail(&str6);\par
47 \par
48     CHECK_EQ(p.getNome(), {\cf22 "Gabriel Souza"});\par
49     CHECK_EQ(p.getIdade(), {\cf22 "18"});\par
50     CHECK_EQ(p.getEmail(), {\cf22 "gabrielsouza82@yahoo.com"});\par
51 \}\par
}
}
{\xe \v TEST_CASE\:Usuario.cpp}
{\xe \v Usuario.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Criando uma inst\'E2ncia de Usuario" )}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4                                                \{\par
5     std::string str1 = {\cf22 "Pedro"};\par
6     std::string str2 = {\cf22 "Perreira"};\par
7     std::string str3 = {\cf22 "pedroperreira31@gmail.com"};\par
8     std::string str4 = {\cf22 "20"};\par
9 \par
10     Usuario p(str1, str2, str4, str3);\par
11 \par
12     SUBCASE({\cf22 "Verificando os campos do objeto"}) \{\par
13         CHECK_EQ(p.getNome(), {\cf22 "Pedro Perreira"});\par
14         CHECK_EQ(p.getIdade(), {\cf22 "20"});\par
15         CHECK_EQ(p.getEmail(), {\cf22 "pedroperreira31@gmail.com"});\par
16     \}\par
17 \par
18     SUBCASE({\cf22 "Salvando o objeto na lista de usuarios"}) \{\par
19         std::string str1 = {\cf22 "pedroperreira31@gmail.com"};\par
20         std::string str2 = {\cf22 "Jo\'E3o Bastos"};\par
21 \par
22         ListaUsuario xs;\par
23 \par
24         xs.adicionarUsuario(&p);\par
25         CHECK(xs.checkUsuario(&str1));\par
26         CHECK_FALSE(xs.checkUsuario(&str1, &str2));\par
27 \par
28         xs.removerUsuario(&p);\par
29         CHECK_FALSE(xs.checkUsuario(&str1));\par
30     \}\par
31 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/menu/Menu.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/menu/Menu.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/src/menu/Menu.cpp}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "..\\..\\include\\menu\\Menu.hpp"}\par
{\f2 #include "..\\..\\include\\core\\Calendario.hpp"}\par
{\f2 #include "..\\..\\include\\core\\Lembrete.hpp"}\par
{\f2 #include "..\\..\\include\\core\\Tarefa.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <ctime>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRING}(num)\~ #num\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v STRING\:Menu.cpp}
{\xe \v Menu.cpp\:STRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRING( num)\~ #num}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Notifica\'E7\'E3o.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Notifica\'E7\'E3o.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/core/Notifica\'E7\'E3o.cpp}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../storage/doctest.hpp"}\par
{\f2 #include "../include/core/Notificacao.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Criando uma inst\'E2ncia de Notificacao")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:Notifica\'E7\'E3o.cpp}
{\xe \v Notifica\'E7\'E3o.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Criando uma inst\'E2ncia de Notificacao" )}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4                                                    \{\par
5     Notificacao n(0, 10);\par
6 \par
7     SUBCASE({\cf22 "Desativando a notifica\'E7\'E3o"}) \{\par
8         CHECK(n.checkEstado());\par
9 \par
10         n.desativarNotificacao();\par
11         CHECK_FALSE(n.checkEstado());\par
12     \}\par
13 \par
14     SUBCASE({\cf22 "Ativando a notifica\'E7\'E3o"}) \{\par
15         n.desativarNotificacao();\par
16         CHECK_FALSE(n.checkEstado());\par
17 \par
18         n.ativarNotificacao();\par
19         CHECK(n.checkEstado());\par
20     \}\par
21 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/storage/driver.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/storage/driver.cpp}
{\xe \v C:/Users/dbpor/OneDrive/Documentos/GitHub/AgendaPDS2/test/storage/driver.cpp}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN\:driver.cpp}
{\xe \v driver.cpp\:DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par 
\pard\plain 
{\tc \v Sum\'E1rio}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
